{"version":3,"sources":["utils/DispatchContext.js","utils/StateContext.js","utils/requests.js","components/page-components/login-component/login-component.js","components/page-components/logout-component/logout-component.js","components/page-components/header-component/header-component.js","components/page-components/footer-component/footer-component.js","components/input-components/answer-button-component/toggle-button.js","components/input-components/answer-button-component/answer-button-component.js","components/page-components/question-component/question-component.js","pages/home.js","pages/container.js","pages/page.js","pages/profile.js","pages/signup.js","utils/FlashMessage.js","App.js","serviceWorker.js","index.js"],"names":["DispatchContext","createContext","StateContext","axios","defaults","withCredentials","console","log","process","ENV","baseURL","DoesEmailExist","email","a","get","response","data","DoesUsernameExist","username","getMyQuestions","signUp","name","password","passwordConfirm","post","login","headers","status","getRandomQuestion","answerQuestion","answer","Id","token","config","Authorization","bodyParameters","LoginComponent","props","appDispatch","useContext","useState","setUsername","setPassword","handleSubmit","e","preventDefault","type","value","user","id","_id","onChange","target","onClick","className","to","LogOutComponent","handleClick","Header","appState","loggedIn","Footer","href","Unchecked","height","width","border","Checked","background","ToggleButton","checked","style","Wrapper","diplay","flexDirection","AnswerButtonComponent","options","selected","setSelected","handleOnClick","map","text","key","AnswerBox","margin","TitleBox","textAlign","fontSize","QuestionBox","QuestionWrapper","display","QuestionComponent","question","setQuestion","useEffect","randomQuestion","title","answerOptions","Home","Container","wide","children","Page","document","window","scrollTo","Profile","questions","setQuestions","resp","el","Signup","useImmerReducer","draft","action","hasErrors","length","message","test","noRequest","checkCount","isUnique","submitCount","state","dispatch","delay","setTimeout","clearTimeout","usernameExist","emailExist","signup","onSubmit","htmlFor","placeholder","autoComplete","CSSTransition","in","timeout","classNames","unmountOnExit","FlashMessages","messages","msg","index","App","initialState","Boolean","localStorage","getItem","flashMessages","avatar","push","setItem","removeItem","Provider","FlashMessage","path","exact","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.e5cd06dc.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst DispatchContext = createContext();\n\nexport default DispatchContext;\n","import { createContext } from 'react';\n\nconst StateContext = createContext();\n\nexport default StateContext;\n","import axios from 'axios';\n// import { catchAsync } from './catchAsync';\n\naxios.defaults.withCredentials = true;\n\nconsole.log(process.env.REACT_APP_ENV);\nif (process.env.ENV == 'production') {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL + process.env.REACT_APP_URLEXTENSION || '';\n} else {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL_DEV +\n      process.env.REACT_APP_URLEXTENSION_DEV || '';\n}\n\nexport const getQuestions = async () => {\n  try {\n    const response = await axios.get('/questions');\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesEmailExist = async email => {\n  try {\n    const response = await axios.get(`/users/does-email-exist/${email}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesUsernameExist = async username => {\n  try {\n    const response = await axios.get(`/users/does-username-exist/${username}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMyQuestions = async () => {\n  try {\n    const response = await axios.get('/users/me/questions', {\n      withCredentials: true,\n      'Content-Type': 'application/json'\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signUp = async (name, email, password, passwordConfirm) => {\n  try {\n    console.log('signup');\n    const response = await axios.post(\n      '/users/signup',\n      name,\n      email,\n      password,\n      passwordConfirm\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const login = async (email, password) => {\n  let response;\n  try {\n    response = await axios.post(\n      '/users/login',\n      {\n        email,\n        password\n      },\n      {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': process.env.REACT_APP_BACKENDURL,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const getRandomQuestion = async () => {\n  let response;\n  try {\n    response = await axios.get('/questions/random');\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const answerQuestion = async (answer, Id, token) => {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  };\n  const bodyParameters = {\n    answer\n  };\n  let response;\n  try {\n    response = await axios.post(`/questions/${Id}`, bodyParameters, config);\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\n\nconst LoginComponent = props => {\n  const appDispatch = useContext(DispatchContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await login(username, password);\n    if (response.status === 'success') {\n      appDispatch({\n        type: 'login',\n        value: {\n          username: response.data.user.name,\n          email: response.data.user.email,\n          id: response.data.user._id\n        }\n      });\n      console.log('logged in');\n    } else {\n    }\n  };\n\n  return (\n    <div>\n      <form>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            onChange={e => setUsername(e.target.value)}\n            name=\"Username\"\n            value={username}\n          />\n        </label>\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={e => setPassword(e.target.value)}\n            value={password}\n          />\n        </label>\n        <input type=\"submit\" onClick={handleSubmit}></input>\n      </form>\n      <Link className=\"\" to=\"/sign-up\">\n        Sign up\n      </Link>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n\n// Fail\n// {\n//   \"status\": \"fail\"\n// }\n\n// On success\n// {\n//   \"status\": \"success\",\n//   \"token\": {},\n//   \"data\": {\n//       \"user\": {\n//           \"userScore\": {\n//               \"score\": 0,\n//               \"answeredQuestions\": []\n//           },\n//           \"role\": \"public\",\n//           \"_id\": \"5f36718b971e9f002996f837\",\n//           \"name\": \"kerstin\",\n//           \"email\": \"kerstin@elvegaard.com\",\n//           \"__v\": 0\n//       }\n//   }\n// }\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\n\nconst LogOutComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    appDispatch({ type: 'logout' });\n  };\n\n  return (\n    <div>\n      <button onClick={handleClick}>Log out</button>\n      <Link className=\"\" to=\"/profile\">\n        Profile\n      </Link>\n    </div>\n  );\n};\n\nexport default LogOutComponent;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../header-component/header.css';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport LoginComponent from '../login-component/login-component';\nimport LogOutComponent from '../logout-component/logout-component';\n\nconst Header = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  return (\n    <div >\n      <nav>\n        <div className=\"logo\">\n          <h4>Quiz-App</h4>\n        </div>\n        <ul className=\"nav-links\">\n          <li>\n            <Link to=\"/home\">Home</Link>\n          </li>\n\n          <li>\n            <Link to=\"/profile\">My page</Link>\n          </li>\n          <li>\n            <Link to=\"/score\">Score</Link>\n          </li>\n          <li>\n            {appState.loggedIn ? <LogOutComponent /> : <LoginComponent />}\n          </li>\n          {/* <li>\n            {appState.loggedIn ? <SignUpComponent /> : <LoginComponent />}\n          </li> */}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n  return (\n    <footer className=\"border-top text-center small text-muted py-3\">\n      <p>\n        <Link to=\"/\" className=\"mx-1\">\n          Home\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/about-us\">\n          About Us\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/terms\">\n          Terms\n        </Link>\n      </p>\n      <p className=\"m-0\">\n        Copyright &copy; 2020{' '}\n        <a href=\"/\" className=\"text-muted\">\n          Quiz App\n        </a>\n        . All rights reserved.\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import * as React from 'react';\n\nconst ToggleButton = props => {\n  const { checked, onClick } = props;\n  return <div onClick={onClick} style={checked ? Checked : Unchecked} />;\n};\n\nconst Unchecked = {\n  height: '100%',\n  width: '100%',\n  border: '1px'\n};\nconst Checked = {\n  height: '100%',\n  width: '100%',\n  border: '1px',\n  background: 'green'\n};\n\nexport default ToggleButton;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ToggleButton from './toggle-button';\n\nconst AnswerButtonComponent = props => {\n  const { options, onClick } = props;\n  const [selected, setSelected] = useState('');\n\n  const handleOnClick = value => {\n    onClick && onClick(value);\n    setSelected(value);\n  };\n\n  const renderButtons = () => {\n    return options.map(text => {\n      return (\n        <ToggleButton\n          key={text}\n          onClick={() => handleOnClick(text)}\n          checked={selected === text}\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>{renderButtons()}</div>\n    </>\n  );\n};\n\nconst Wrapper = {\n  diplay: 'flex',\n  width: '120px',\n  height: '50px',\n  // flexGrow: '1',\n  flexDirection: 'row'\n};\nexport default AnswerButtonComponent;\n\n// import * as React from 'react';\n// import { ToggleButton } from 'react-native-paper';\n\n// const ToggleButtonExample = () => {\n//   const [status, setStatus] = React.useState('checked');\n\n//   const onButtonToggle = value => {\n//     setStatus(status === 'checked' ? 'unchecked' : 'checked');\n//   };\n\n//   return (\n//     <ToggleButton\n//       icon=\"bluetooth\"\n//       value=\"bluetooth\"\n//       status={status}\n//       onPress={onButtonToggle}\n//     />\n//   );\n// };\n\n// export default ToggleButtonExample;\n","import React, { useContext, useEffect, useState } from 'react';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport { getRandomQuestion, answerQuestion } from '../../../utils/requests';\nimport AnswerButtonComponent from '../../input-components/answer-button-component/answer-button-component';\n\nconst QuestionComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n  const [question, setQuestion] = useState('');\n\n  useEffect(() => {\n    const randomQuestion = async () => {\n      const response = await getRandomQuestion();\n      if (response) {\n        setQuestion(response.data.data[0]);\n      } else {\n      }\n    };\n    randomQuestion();\n  }, []);\n\n  const renderAnswerButtons = () => {\n    // return (\n    //   question.answerOptions && (\n    //     <AnswerButtonComonent options={question.answerOptions} />\n    //   )\n    // question.answerOptions.map((element, index) => {\n    //   return <button key={index}>{element}</button>;\n    // })\n    // );\n  };\n\n  const handleSubmit = async value => {\n    console.log(value);\n    console.log(question._id);\n    console.log(appState.user.token);\n    const response = await answerQuestion(\n      value,\n      question._id,\n      appState.user.token\n    );\n    console.log(response);\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>\n        <div style={QuestionWrapper}>\n          <div style={TitleBox}>{question.title}</div>\n          <div style={QuestionBox}>{question.question}</div>\n          <div style={AnswerBox}>\n            {question.answerOptions && (\n              <AnswerButtonComponent\n                onClick={handleSubmit}\n                options={question.answerOptions}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst SubmitBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%',\n  background: 'black'\n};\n\nconst AnswerBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%'\n};\n\nconst TitleBox = {\n  margin: '10px auto auto auto',\n  textAlign: 'center',\n  fontSize: '3rem',\n  background: 'red'\n};\n\nconst QuestionBox = {\n  margin: '20px auto auto auto',\n  height: '60%',\n  width: '80%',\n  background: 'blue'\n};\nconst QuestionWrapper = {\n  margin: '50px auto 50px auto',\n  height: '500px',\n  width: '800px',\n  background: 'grey'\n};\nconst Wrapper = {\n  display: 'flex',\n  height: '100%',\n  width: '100%'\n};\n\nexport default QuestionComponent;\n\n// {\n//   \"status\": \"success\",\n//   \"data\": {\n//       \"data\": [\n//           {\n//               \"_id\": \"5f301c21e33fb68b754009eb\",\n//               \"answerOptions\": [\n//                   \"This is a wrong answer\",\n//                   \"this is another wrong answer!\",\n//                   \"this is a third wrong answer!\"\n//               ],\n//               \"timesAnswered\": 0,\n//               \"timesCorrectAnswered\": 0,\n//               \"title\": \"YMCA\",\n//               \"question\": \"When referring to the worldwide youth organization based in Geneva, Switzerland, what does the acronym YMCA stand for?\",\n//               \"correctAnswer\": \"Young Men’s Christian Association\",\n//               \"difficulty\": \"hard\",\n//               \"author\": \"5c8a1d5b0190b214360dc057\",\n//               \"__v\": 0\n//           }\n//       ]\n//   }\n// }\n","import React, { useState } from 'react';\nimport QuestionComponent from '../components/page-components/question-component/question-component';\nimport { getQuestions } from '../utils/requests';\n\nconst Home = () => {\n  const [questions, setQuestions] = useState([]);\n\n  const handleClick = async () => {\n    const resp = await getQuestions();\n    console.log(resp.data.data);\n    setQuestions(resp.data.data);\n  };\n\n  return (\n    <div>\n      <QuestionComponent></QuestionComponent>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div\n      className={'container py-md-5 ' + (props.wide ? '' : 'container--narrow')}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport Container from './container';\n\nfunction Page(props) {\n  useEffect(() => {\n    document.title = `${props.title} | ComplexApp`;\n    window.scrollTo(0, 0);\n  }, [props.title]);\n\n  return <Container wide={props.wide}>{props.children}</Container>;\n}\n\nexport default Page;\n","import React, { useState, useContext } from 'react';\nimport { getMyQuestions } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport StateContext from '../utils/StateContext';\nimport Page from './page';\n\nconst Profile = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  const [questions, setQuestions] = useState([]);\n\n  const handleClick = async () => {\n    const resp = await getMyQuestions();\n    console.log(resp.data.data);\n    setQuestions(resp.data.data);\n  };\n\n  return (\n    <Page>\n      <h2>Profile</h2>\n      <div>\n        <button onClick={handleClick}>Get questions</button>\n        <div>\n          {questions.map(el => {\n            return <div key={el._id}>{el.title}</div>;\n          })}\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default Profile;\n","import { DoesEmailExist, DoesUsernameExist, signUp } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useEffect, useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport Page from './page';\n\nfunction Signup() {\n  const appDispatch = useContext(DispatchContext);\n\n  const initialState = {\n    username: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    email: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    password: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    passwordConfirm: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'usernameImmediately':\n        draft.username.hasErrors = false;\n        draft.username.value = action.value;\n        if (draft.username.value.length > 30) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'Username to long';\n        }\n        if (\n          draft.username.value &&\n          !/^([a-zA-Z0-9]+)$/.test(draft.username.value)\n        ) {\n          draft.username.hasErrors = true;\n          draft.username.message =\n            'Username can only contain letters and numbers';\n        }\n        break;\n      case 'usernameAfterDelay':\n        if (draft.username.value.length < 3) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'needs more than 3 chars';\n        }\n        if (!draft.hasErrors && !action.noRequest) {\n          draft.username.checkCount++;\n        }\n        break;\n      case 'usernameUniqueResults':\n        if (action.value) {\n          draft.username.hasErrors = true;\n          draft.username.isUnique = false;\n          draft.username.message = 'user exist';\n        } else {\n          draft.username.isUnique = true;\n        }\n        break;\n      case 'emailImmediately':\n        draft.email.hasErrors = false;\n        draft.email.value = action.value;\n        break;\n      case 'emailAfterDelay':\n        if (!/^\\S+@\\S+$/.test(draft.email.value)) {\n          draft.email.hasErrors = true;\n          draft.email.message = 'Invalid email';\n        }\n        if (!draft.email.hasErrors && !action.noRequest) {\n          draft.email.checkCount++;\n        }\n        break;\n      case 'emailUniqueResults':\n        if (action.value) {\n          draft.email.hasErrors = true;\n          draft.email.isUnique = false;\n          draft.email.message = 'Email is already in use';\n        } else {\n          draft.email.isUnique = true;\n        }\n        break;\n      case 'passwordImmediately':\n        draft.password.hasErrors = false;\n        draft.password.value = action.value;\n        if (draft.password.value.length > 12) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'Password to long';\n        }\n        break;\n      case 'passwordAfterDelay':\n        if (draft.password.value.length < 6) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'password to short';\n        }\n        break;\n      case 'passwordConfirmImmediately':\n        draft.passwordConfirm.hasErrors = false;\n        draft.passwordConfirm.value = action.value;\n        if (draft.passwordConfirm.value.length > 12) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'Password to long';\n        }\n        break;\n      case 'passwordConfirmAfterDelay':\n        if (draft.passwordConfirm.value.length < 6) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'password to short';\n        } else if (draft.passwordConfirm.value != draft.password.value) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'passwords do not match!';\n        }\n        break;\n      case 'submitForm':\n        if (\n          !draft.username.hasErrors &&\n          draft.username.isUnique &&\n          !draft.email.hasErrors &&\n          draft.email.isUnique &&\n          !draft.password.hasErrors &&\n          !draft.passwordConfirm.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.username.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'usernameAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.username.value]);\n\n  useEffect(() => {\n    if (state.email.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'emailAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.email.value]);\n\n  useEffect(() => {\n    if (state.password.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.password.value]);\n\n  useEffect(() => {\n    if (state.passwordConfirm.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordConfirmAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.passwordConfirm.value]);\n\n  useEffect(() => {\n    if (state.username.checkCount) {\n      // Send requests here\n      const usernameExist = async () => {\n        const response = await DoesUsernameExist(state.username.value);\n        console.log('hello');\n        dispatch({\n          type: 'usernameUniqueResults',\n          value: response.data.message != 'OK'\n        });\n      };\n      usernameExist();\n      return;\n    }\n  }, [state.username.checkCount]);\n\n  useEffect(() => {\n    if (state.email.checkCount) {\n      // Send requests here\n      const emailExist = async () => {\n        const response = await DoesEmailExist(state.email.value);\n        dispatch({\n          type: 'emailUniqueResults',\n          value: response.data.message != 'OK'\n        });\n      };\n      emailExist();\n      return;\n    }\n  }, [state.email.checkCount]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const signup = async () => {\n        const response = await signUp({\n          name: state.username.value,\n          email: state.email.value,\n          password: state.password.value,\n          passwordConfirm: state.passwordConfirm.value\n        });\n        console.log('Response', response);\n        console.log('Response', response.data.user.name);\n        console.log('Response', response.data.user.email);\n        console.log('Response', response.data.user._id);\n\n        // appDispatch({ type: '', value: '' });\n        if (response.status == 'success') {\n          appDispatch({\n            type: 'login',\n            value: {\n              username: response.data.user.name,\n              email: response.data.user.email,\n              id: response.data.user._id\n            }\n          });\n\n          // active: true\n          // email: \"real@test.com\"\n          // name: \"real\"\n          // role: \"public\"\n          // userScore:\n          // answeredQuestions: []\n          // score: 0\n          // __proto__: Object\n          // __v: 0\n          // _id: \"5fadc4f94b7fa30011a5b67c\"\n\n          appDispatch({\n            type: 'flashMessage',\n            value: 'Welcome to your new account!'\n          });\n        }\n      };\n      signup();\n      return;\n    }\n  }, [state.submitCount]);\n  // useEffect(() => {\n  //   if (state.submitCount) {\n  //     // Send requests here\n  //     const ourRequest = Axios.CancelToken.source();\n  //     async function fetchResults() {\n  //       try {\n  //         const response = await Axios.post(\n  //           '/register',\n  //           {\n  //             username: state.username.value,\n  //             email: state.email.value,\n  //             password: state.password.value\n  //           },\n  //           { cancelToken: ourRequest.token }\n  //         );\n  //         appDispatch({ type: 'login', data: response.data });\n  //         appDispatch({\n  //           type: 'flashMessage',\n  //           value: 'Welcome to your new account!'\n  //         });\n  //       } catch (error) {\n  //         console.log(error);\n  //       }\n  //     }\n  //     fetchResults();\n  //     return () => ourRequest.cancel();\n  //   }\n  // }, [state.submitCount]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({ type: 'usernameImmediately', value: state.username.value });\n    dispatch({\n      type: 'usernameAfterDelay',\n      value: state.username.value,\n      noRequest: true\n    });\n    dispatch({ type: 'emailImmediately', value: state.email.value });\n    dispatch({\n      type: 'emailAfterDelay',\n      value: state.email.value,\n      noRequest: true\n    });\n    dispatch({ type: 'passwordImmediately', value: state.password.value });\n    dispatch({ type: 'passwordAfterDelay', value: state.password.value });\n    dispatch({\n      type: 'passwordConfirmImmediately',\n      value: state.passwordConfirm.value\n    });\n    dispatch({\n      type: 'passwordConfirmAfterDelay',\n      value: state.passwordConfirm.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  return (\n    <Page title=\"Sign up\" wide={false}>\n      <div className=\"row align-items-center\">\n        <div className=\"col-lg-7 py-3 py-md-5\">\n          <h2>Sign up!</h2>\n          <p className=\"lead text-muted\">\n            Create a user to create questions on your own and keep track of your\n            score!\n          </p>\n        </div>\n        <div className=\"col-lg-5 pl-lg-5 pb-3 py-lg-5\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username-register\" className=\"text-muted mb-1\">\n                <small>Username</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'usernameImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"username-register\"\n                name=\"username\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Pick a username\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.username.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.username.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email-register\" className=\"text-muted mb-1\">\n                <small>Email</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({ type: 'emailImmediately', value: e.target.value })\n                }\n                id=\"email-register\"\n                name=\"email\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"you@example.com\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.email.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.email.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password-register\" className=\"text-muted mb-1\">\n                <small>Password</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Create a password\"\n              />\n              <CSSTransition\n                in={state.password.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.password.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"password-register-confirm\"\n                className=\"text-muted mb-1\"\n              >\n                <small>Password Confirm</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordConfirmImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register-confirm\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n              />\n              <CSSTransition\n                in={state.passwordConfirm.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.passwordConfirm.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"py-3 mt-4 btn btn-lg btn-success btn-block\"\n            >\n              Sign up for QuizApp\n            </button>\n          </form>\n        </div>\n      </div>\n    </Page>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\n\nfunction FlashMessages(props) {\n  return (\n    <div className=\"floating-alerts\">\n      {props.messages.map((msg, index) => {\n        return (\n          <div\n            key={index}\n            className=\"alert alert-success text-center floating-alert shadow-sm\"\n          >\n            {msg}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FlashMessages;\n","import React, { useEffect } from 'react';\nimport Header from './components/page-components/header-component/header-component';\nimport Footer from './components/page-components/footer-component/footer-component';\nimport { useImmerReducer } from 'use-immer';\nimport Home from './pages/home';\nimport Profile from './pages/profile';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport StateContext from './utils/StateContext';\nimport DispatchContext from './utils/DispatchContext';\nimport Signup from './pages/signup';\nimport FlashMessages from './utils/FlashMessage';\n\nconst App = () => {\n  const initialState = {\n    loggedIn: Boolean(localStorage.getItem('quizappUsername')),\n    flashMessages: [],\n    user: {\n      token: localStorage.getItem('quizappToken'),\n      username: localStorage.getItem('quizappUsername'),\n      email: localStorage.getItem('quizappEmail'),\n      id: localStorage.getItem('quizappId'),\n      avatar: localStorage.getItem('quizappAvatar')\n    }\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'login':\n        draft.user.username = action.value.username;\n        draft.user.email = action.value.email;\n        draft.user.id = action.value.id;\n        draft.loggedIn = true;\n        break;\n      case 'logout':\n        draft.loggedIn = false;\n        break;\n      case 'flashMessage':\n        draft.flashMessages.push(action.value);\n        break;\n      default:\n        console.log('nutin');\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.loggedIn) {\n      localStorage.setItem('quizappUsername', state.user.username);\n      localStorage.setItem('quizappId', state.user.id);\n      localStorage.setItem('quizappEmail', state.user.email);\n    } else {\n      localStorage.removeItem('quizappUsername');\n      localStorage.removeItem('quizappId');\n      localStorage.removeItem('quizappEmail');\n    }\n  }, [state.loggedIn]);\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        <Router>\n          <FlashMessages messages={state.flashMessages} />\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Signup />\n            </Route>\n          </Switch>\n          <Footer />\n        </Router>\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}