{"version":3,"sources":["utils/DispatchContext.js","utils/StateContext.js","utils/requests.js","components/page-components/login-component/login-component.js","components/page-components/logout-component/logout-component.js","components/page-components/header-component/header-component.js","components/page-components/footer-component/footer-component.js","components/input-components/answer-button-component/toggle-button.js","components/input-components/answer-button-component/answer-button-component.js","components/page-components/question-component/question-component.js","pages/home.js","components/loadingdots-component/LoadingDotsIcon.js","components/page-components/listQuestion-component/listQuestion.js","components/page-components/profileQuestion-component/profileQuestion.js","pages/container.js","pages/page.js","components/page-components/profileAnswer-component/profileAnswer.js","pages/profile.js","components/dropdown-component/dropdown-component.js","components/page-components/list-component/list-component.js","pages/createQuestion.js","pages/signup.js","utils/FlashMessage.js","pages/notFound.js","pages/editQuestion.js","App.js","serviceWorker.js","index.js"],"names":["DispatchContext","createContext","StateContext","axios","defaults","withCredentials","console","log","process","baseURL","getQuestion","id","a","get","response","data","DoesEmailExist","email","DoesUsernameExist","username","DoesQuestionExist","title","post","getMyQuestions","createQuestion","question","correctAnswer","answerOptions","difficulty","headers","editQuestion","sendObject","method","url","signUp","name","password","passwordConfirm","login","status","getMe","getRandomQuestion","answerQuestion","answer","Id","token","config","Authorization","bodyParameters","LoginComponent","props","appDispatch","useContext","useState","setUsername","setPassword","handleSubmit","e","preventDefault","type","value","user","_id","onSubmit","className","onChange","target","placeholder","autoComplete","to","LogOutComponent","handleClick","onClick","Header","appState","loggedIn","Footer","href","Unchecked","height","width","border","Checked","background","ToggleButton","checked","style","Wrapper","diplay","flexDirection","AnswerButtonComponent","options","selected","setSelected","handleOnClick","map","text","key","AnswerBox","margin","TitleBox","textAlign","fontSize","QuestionBox","QuestionWrapper","display","QuestionComponent","setQuestion","useEffect","randomQuestion","Home","LoadingDotsIcon","QuestionList","timesAnswered","timesCorrectAnswered","ProfileQuestion","isLoading","setIsLoading","setQuestions","questions","forEach","el","concat","getQuestions","length","Container","wide","children","Page","document","window","scrollTo","ProfileAnswer","follower","index","Profile","NaN","userScore","setuserScore","info","score","getme","isNaN","exact","path","DropDown","selectItem","DynamicList","items","setItems","idx","disabled","values","splice","findIndex","handleRemoveFields","withRouter","setDifficulty","setAnswerOptions","input","setInput","useImmerReducer","draft","action","hasErrors","message","isUnique","body","includes","submitCount","checkCount","state","dispatch","delay","setTimeout","clearTimeout","questionExist","htmlFor","autoFocus","CSSTransition","in","timeout","classNames","unmountOnExit","getElementById","Signup","test","noRequest","usernameExist","emailExist","signup","FlashMessages","messages","msg","NotFound","useParams","isChanged","initialState","questionFound","JSON","stringify","unqiue","error","App","Boolean","localStorage","getItem","flashMessages","avatar","push","setItem","removeItem","Provider","FlashMessage","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5689e627.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst DispatchContext = createContext();\n\nexport default DispatchContext;\n","import { createContext } from 'react';\n\nconst StateContext = createContext();\n\nexport default StateContext;\n","import axios from 'axios';\n// import { catchAsync } from './catchAsync';\n\naxios.defaults.withCredentials = false;\nconsole.log('ENV: ', process.env.REACT_APP_ENV);\n\nif (process.env.REACT_APP_ENV === 'production') {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL + process.env.REACT_APP_URLEXTENSION || '';\n} else {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL_DEV +\n      process.env.REACT_APP_URLEXTENSION_DEV || '';\n}\n\nexport const getQuestions = async () => {\n  try {\n    const response = await axios.get('/questions');\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getQuestion = async id => {\n  try {\n    const response = await axios.get(`/questions/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesEmailExist = async email => {\n  try {\n    const response = await axios.get(`/users/does-email-exist/${email}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesUsernameExist = async username => {\n  try {\n    const response = await axios.get(`/users/does-username-exist/${username}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesQuestionExist = async title => {\n  try {\n    const response = await axios.post('/questions/does-question-exist', {\n      title\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMyQuestions = async () => {\n  try {\n    const response = await axios.get('/users/me/questions', {\n      withCredentials: true,\n      'Content-Type': 'application/json'\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createQuestion = async (\n  title,\n  question,\n  correctAnswer,\n  answerOptions,\n  difficulty\n) => {\n  try {\n    console.log(\n      'Sending',\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty\n    );\n\n    const response = await axios.post(\n      '/questions',\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty,\n      {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': '*', //process.env.REACT_APP_BACKENDURL,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    console.log('response:', response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const editQuestion = async sendObject => {\n  try {\n    const title = sendObject.title;\n    const question = sendObject.question;\n    const correctAnswer = sendObject.correctAnswer;\n    const difficulty = sendObject.difficulty;\n    const answerOptions = sendObject.answerOptions;\n    console.log(\n      'Sending',\n      sendObject.id,\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty\n    );\n\n    const response = await axios({\n      method: 'PATCH',\n      url: `/users/me/questions/${sendObject.id}`,\n      data: {\n        title,\n        question,\n        correctAnswer,\n        answerOptions,\n        difficulty\n      }\n    });\n\n    // await axios.patch(\n    //   `/users/me/questions/${sendObject.id}`,\n    //   title,\n    //   question,\n    //   correctAnswer,\n    //   answerOptions,\n    //   difficulty,\n    //   {\n    //     withCredentials: true,\n    //     headers: {\n    //       'Access-Control-Allow-Origin': '*', //process.env.REACT_APP_BACKENDURL,\n    //       'Content-Type': 'application/json'\n    //     }\n    //   }\n    // );\n    console.log('response:', response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signUp = async (name, email, password, passwordConfirm) => {\n  try {\n    console.log('signup');\n    const response = await axios.post(\n      '/users/signup',\n      name,\n      email,\n      password,\n      passwordConfirm\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const login = async (email, password) => {\n  let response;\n  try {\n    response = await axios.post(\n      '/users/login',\n      {\n        email,\n        password\n      },\n      {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const getMe = async () => {\n  let response;\n  try {\n    response = await axios.get('/users/me', {\n      withCredentials: true,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const getRandomQuestion = async () => {\n  let response;\n  try {\n    response = await axios.get('/questions/random');\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const answerQuestion = async (answer, Id, token) => {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  };\n  const bodyParameters = {\n    answer\n  };\n  let response;\n  try {\n    response = await axios.post(`/questions/${Id}`, bodyParameters, config);\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\n\nconst LoginComponent = props => {\n  const appDispatch = useContext(DispatchContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await login(username, password);\n    if (response.status === 'success') {\n      appDispatch({\n        type: 'login',\n        value: {\n          username: response.data.user.name,\n          email: response.data.user.email,\n          id: response.data.user._id\n        }\n      });\n      appDispatch({ type: 'flashMessage', value: 'Successfully logged in!' });\n      console.log('logged in');\n    } else {\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-0 pt-2 pt-md-0\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n          <input\n            type=\"text\"\n            onChange={e => setUsername(e.target.value)}\n            name=\"Username\"\n            value={username}\n            className=\"form-control form-control-sm input-dark\"\n            placeholder=\"Username\"\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={e => setPassword(e.target.value)}\n            value={password}\n            className=\"form-control form-control-sm input-dark\"\n            placeholder=\"Password\"\n          />\n        </div>\n        <div className=\"col-md-auto mr-0 pr-md-0 mb-3 mb-md-0\">\n          <button className=\"btn btn-success btn-sm\">Sign In</button>\n        </div>\n        <div className=\"col-md-auto\">\n          <Link className=\"btn btn-secondary btn-sm\" to=\"/sign-up\">\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginComponent;\n\n// <form onSubmit={handleSubmit} className=\"mb-0 pt-2 pt-md-0\">\n//   <div className=\"row align-items-center\">\n//     <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n//       <input\n//         onChange={e => setUsername(e.target.value)}\n//         name=\"username\"\n//         className=\"form-control form-control-sm input-dark\"\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         autoComplete=\"off\"\n//       />\n//     </div>\n//     <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n//       <input\n//         onChange={e => setPassword(e.target.value)}\n//         name=\"password\"\n//         className=\"form-control form-control-sm input-dark\"\n//         type=\"password\"\n//         placeholder=\"Password\"\n//       />\n//     </div>\n//     <div className=\"col-md-auto\">\n//       <button className=\"btn btn-success btn-sm\">Sign In</button>\n//     </div>\n//   </div>\n// </form>;\n\n// Fail\n// {\n//   \"status\": \"fail\"\n// }\n\n// On success\n// {\n//   \"status\": \"success\",\n//   \"token\": {},\n//   \"data\": {\n//       \"user\": {\n//           \"userScore\": {\n//               \"score\": 0,\n//               \"answeredQuestions\": []\n//           },\n//           \"role\": \"public\",\n//           \"_id\": \"5f36718b971e9f002996f837\",\n//           \"name\": \"kerstin\",\n//           \"email\": \"kerstin@elvegaard.com\",\n//           \"__v\": 0\n//       }\n//   }\n// }\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\n\nconst LogOutComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    appDispatch({ type: 'logout' });\n    appDispatch({ type: 'flashMessage', value: 'Successfully logged out!' });\n  };\n\n  return (\n    <div className=\"flex-row my-3 my-md-0\">\n      <Link className=\"btn btn-sm btn-success mr-2\" to=\"/create-question\">\n        Create Question\n      </Link>{' '}\n      <Link className=\"btn btn-sm btn-success mr-2\" to=\"/profile\">\n        Profile\n      </Link>{' '}\n      <button onClick={handleClick} className=\"btn btn-sm btn-secondary\">\n        Sign out\n      </button>\n    </div>\n  );\n};\n\nexport default LogOutComponent;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../header-component/header.css';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport LoginComponent from '../login-component/login-component';\nimport LogOutComponent from '../logout-component/logout-component';\n\nconst Header = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  return (\n    <header className=\"header-bar bg-primary mb-3\">\n      <div className=\"container d-flex flex-column flex-md-row align-items-center p-3\">\n        <h4 className=\"my-0 mr-md-auto font-weight-normal\">\n          <Link to=\"/\" className=\"text-white\">\n            QuizApp\n          </Link>\n        </h4>\n        {appState.loggedIn ? <LogOutComponent /> : <LoginComponent />}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n  return (\n    <footer className=\"border-top text-center small text-muted py-3\">\n      <p>\n        <Link to=\"/\" className=\"mx-1\">\n          Home\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/about-us\">\n          About Us\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/terms\">\n          Terms\n        </Link>\n      </p>\n      <p className=\"m-0\">\n        Copyright &copy; 2020{' '}\n        <a href=\"/\" className=\"text-muted\">\n          Quiz App\n        </a>\n        . All rights reserved.\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import * as React from 'react';\n\nconst ToggleButton = props => {\n  const { checked, onClick } = props;\n  return <div onClick={onClick} style={checked ? Checked : Unchecked} />;\n};\n\nconst Unchecked = {\n  height: '100%',\n  width: '100%',\n  border: '1px'\n};\nconst Checked = {\n  height: '100%',\n  width: '100%',\n  border: '1px',\n  background: 'green'\n};\n\nexport default ToggleButton;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ToggleButton from './toggle-button';\n\nconst AnswerButtonComponent = props => {\n  const { options, onClick } = props;\n  const [selected, setSelected] = useState('');\n\n  const handleOnClick = value => {\n    onClick && onClick(value);\n    setSelected(value);\n  };\n\n  const renderButtons = () => {\n    return options.map(text => {\n      return (\n        <ToggleButton\n          key={text}\n          onClick={() => handleOnClick(text)}\n          checked={selected === text}\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>{renderButtons()}</div>\n    </>\n  );\n};\n\nconst Wrapper = {\n  diplay: 'flex',\n  width: '120px',\n  height: '50px',\n  // flexGrow: '1',\n  flexDirection: 'row'\n};\nexport default AnswerButtonComponent;\n\n// import * as React from 'react';\n// import { ToggleButton } from 'react-native-paper';\n\n// const ToggleButtonExample = () => {\n//   const [status, setStatus] = React.useState('checked');\n\n//   const onButtonToggle = value => {\n//     setStatus(status === 'checked' ? 'unchecked' : 'checked');\n//   };\n\n//   return (\n//     <ToggleButton\n//       icon=\"bluetooth\"\n//       value=\"bluetooth\"\n//       status={status}\n//       onPress={onButtonToggle}\n//     />\n//   );\n// };\n\n// export default ToggleButtonExample;\n","import React, { useContext, useEffect, useState } from 'react';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport { getRandomQuestion, answerQuestion } from '../../../utils/requests';\nimport AnswerButtonComponent from '../../input-components/answer-button-component/answer-button-component';\n\nconst QuestionComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n  const [question, setQuestion] = useState('');\n\n  useEffect(() => {\n    const randomQuestion = async () => {\n      const response = await getRandomQuestion();\n      if (response) {\n        setQuestion(response.data.data[0]);\n      } else {\n      }\n    };\n    randomQuestion();\n  }, []);\n\n  const renderAnswerButtons = () => {\n    // return (\n    //   question.answerOptions && (\n    //     <AnswerButtonComonent options={question.answerOptions} />\n    //   )\n    // question.answerOptions.map((element, index) => {\n    //   return <button key={index}>{element}</button>;\n    // })\n    // );\n  };\n\n  const handleSubmit = async value => {\n    console.log(value);\n    console.log(question._id);\n    console.log(appState.user.token);\n    const response = await answerQuestion(\n      value,\n      question._id,\n      appState.user.token\n    );\n    console.log(response);\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>\n        <div style={QuestionWrapper}>\n          <div style={TitleBox}>{question.title}</div>\n          <div style={QuestionBox}>{question.question}</div>\n          <div style={AnswerBox}>\n            {question.answerOptions && (\n              <AnswerButtonComponent\n                onClick={handleSubmit}\n                options={question.answerOptions}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst SubmitBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%',\n  background: 'black'\n};\n\nconst AnswerBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%'\n};\n\nconst TitleBox = {\n  margin: '10px auto auto auto',\n  textAlign: 'center',\n  fontSize: '3rem',\n  background: 'red'\n};\n\nconst QuestionBox = {\n  margin: '20px auto auto auto',\n  height: '60%',\n  width: '80%',\n  background: 'blue'\n};\nconst QuestionWrapper = {\n  margin: '50px auto 50px auto',\n  height: '500px',\n  width: '800px',\n  background: 'grey'\n};\nconst Wrapper = {\n  display: 'flex',\n  height: '100%',\n  width: '100%'\n};\n\nexport default QuestionComponent;\n\n// {\n//   \"status\": \"success\",\n//   \"data\": {\n//       \"data\": [\n//           {\n//               \"_id\": \"5f301c21e33fb68b754009eb\",\n//               \"answerOptions\": [\n//                   \"This is a wrong answer\",\n//                   \"this is another wrong answer!\",\n//                   \"this is a third wrong answer!\"\n//               ],\n//               \"timesAnswered\": 0,\n//               \"timesCorrectAnswered\": 0,\n//               \"title\": \"YMCA\",\n//               \"question\": \"When referring to the worldwide youth organization based in Geneva, Switzerland, what does the acronym YMCA stand for?\",\n//               \"correctAnswer\": \"Young Men’s Christian Association\",\n//               \"difficulty\": \"hard\",\n//               \"author\": \"5c8a1d5b0190b214360dc057\",\n//               \"__v\": 0\n//           }\n//       ]\n//   }\n// }\n","import React, { useState } from 'react';\nimport QuestionComponent from '../components/page-components/question-component/question-component';\nimport { getQuestions } from '../utils/requests';\n\nconst Home = () => {\n  const [questions, setQuestions] = useState([]);\n\n  const handleClick = async () => {\n    const resp = await getQuestions();\n    console.log(resp.data.data);\n    setQuestions(resp.data.data);\n  };\n\n  return (\n    <div>\n      <QuestionComponent></QuestionComponent>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './loadingdots.css';\n\nfunction LoadingDotsIcon() {\n  return (\n    <div className=\"dots-loading\">\n      <div></div>\n    </div>\n  );\n}\n\nexport default LoadingDotsIcon;\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction QuestionList(props) {\n  const question = props.question;\n  const difficulty = question.difficulty;\n  const timesAnswered = question.timesAnswered;\n  const timesCorrectAnswered = question.timesCorrectAnswered;\n\n  // answerOptions: [\"2021\"]\n  // author: \"5fd3a7b98990050008e5e875\"\n  // correctAnswer: \"2020\"\n  // difficulty: \"easy\"\n  // question: \"What year is it?\"\n  // timesAnswered: 0\n  // timesCorrectAnswered: 0\n  // title: \"Live question from Prod\"\n  // __v: 0\n  // _id: \"5fedd4c00c51d80008c8757a\"\n\n  return (\n    <Link\n      onClick={props.onClick}\n      to={`/question/${question._id}/edit`}\n      className=\"list-group-item list-group-item-action\"\n    >\n      <strong>{question.title}</strong> &nbsp;&nbsp;&nbsp;&nbsp;\n      <span className=\"text-muted small\">\n        {\n          <>\n            Difficulty: {difficulty}, Answered {timesAnswered} times\n          </>\n        }{' '}\n        and Correctly answered {timesCorrectAnswered}{' '}\n      </span>\n    </Link>\n  );\n}\n\nexport default QuestionList;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoadingDotsIcon from '../../loadingdots-component/LoadingDotsIcon';\nimport StateContext from '../../../utils/StateContext';\nimport QuestionList from '../listQuestion-component/listQuestion';\nimport { getMyQuestions } from '../../../utils/requests';\n\nfunction ProfileQuestion(props) {\n  const appState = useContext(StateContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [question, setQuestions] = useState([]);\n\n  useEffect(() => {\n    const getQuestions = async () => {\n      const response = await getMyQuestions();\n      if (response) {\n        const questions = response.data.data;\n        console.log('Questions', questions);\n        questions.forEach(el => {\n          console.log('el:', el);\n          setQuestions(question.concat(el));\n        });\n      } else {\n        console.log('no questions for this user');\n      }\n      setIsLoading(false);\n    };\n    getQuestions();\n  }, []);\n\n  if (isLoading) return <LoadingDotsIcon />;\n\n  return (\n    <div className=\"list-group\">\n      {question.length > 0 &&\n        question.map(el => {\n          return <QuestionList question={el} key={el._id} />;\n        })}\n      {question.length === 0 && (\n        <p className=\"lead text-muted text-center\">\n          You haven&rsquo;t created any question yet;{' '}\n          <Link to=\"/create-question\">create one now!</Link>\n        </p>\n      )}\n      {question.length === 0 && (\n        <p className=\"lead text-muted text-center\">No questions created yet.</p>\n      )}\n    </div>\n  );\n}\n\nexport default ProfileQuestion;\n","import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div\n      className={\n        'container py-md-5 mb-5' + (props.wide ? '' : 'container--narrow')\n      }\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport Container from './container';\n\nfunction Page(props) {\n  useEffect(() => {\n    document.title = `${props.title} | QuizApp`;\n    window.scrollTo(0, 0);\n  }, [props.title]);\n\n  return <Container wide={props.wide}>{props.children}</Container>;\n}\n\nexport default Page;\n","import LoadingDotsIcon from '../../loadingdots-component/LoadingDotsIcon';\nimport React, { useEffect, useState, useContext } from 'react';\nimport StateContext from '../../../utils/StateContext';\nimport { Link } from 'react-router-dom';\n\nfunction ProfileAnswer(props) {\n  const appState = useContext(StateContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    console.log('get answered questions');\n    setIsLoading(false);\n  }, []);\n\n  if (isLoading) return <LoadingDotsIcon />;\n\n  return (\n    <div className=\"list-group\">\n      {questions.length > 0 &&\n        questions.map((follower, index) => {\n          return (\n            <Link\n              key={index}\n              to={`/profile/answered-questions`}\n              className=\"list-group-item list-group-item-action\"\n            >\n              <div>hello</div>\n            </Link>\n          );\n        })}\n      {questions.length === 0 && (\n        <p className=\"lead text-muted text-center\">\n          You haven&rsquo;t answered any questions yet.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default ProfileAnswer;\n","import ProfileQuestion from '../components/page-components/profileQuestion-component/profileQuestion';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { getMe } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport StateContext from '../utils/StateContext';\nimport Page from './page';\nimport ProfileAnswer from '../components/page-components/profileAnswer-component/profileAnswer';\nimport LoadingDotsIcon from '../components/loadingdots-component/LoadingDotsIcon';\n\nconst Profile = () => {\n  const appState = useContext(StateContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [userScore, setuserScore] = useState(NaN);\n\n  useEffect(() => {\n    const getme = async () => {\n      const response = await getMe();\n      if (response.status === 'success') {\n        const info = response.data.data;\n        setuserScore(info.userScore.score);\n      } else {\n        console.log('no info for this user');\n        setuserScore(0);\n      }\n      setIsLoading(false);\n    };\n    getme();\n  }, []);\n\n  return (\n    <Page title=\"Profile Screen\">\n      <div className=\"row d-flex align-items-center\">\n        <h2>{appState.user.username}</h2>&nbsp;&nbsp;&nbsp;&nbsp;\n        {/* <div>Score: {userScore === NaN }</div> */}\n        <div>Score:</div>&nbsp;\n        <div>{isNaN(userScore) && <LoadingDotsIcon />}</div>\n        <div>{!isNaN(userScore) && userScore}</div>\n      </div>\n      <div className=\"profile-nav nav nav-tabs pt-2 mb-4\">\n        <NavLink exact to=\"/profile\" className=\"nav-item nav-link\">\n          My Questions: {/* {state.profileData.counts.postCount} */}\n        </NavLink>\n        <NavLink to=\"/profile/answered-questions\" className=\"nav-item nav-link\">\n          Answered Questions: {/* state.profileData.counts.followerCount */}\n        </NavLink>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/profile\">\n          <ProfileQuestion />\n        </Route>\n        <Route path=\"/profile/answered-questions\">\n          <ProfileAnswer />\n        </Route>\n      </Switch>\n    </Page>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nfunction DropDown(props) {\n  const selectItem = props.selectItem;\n\n  const handleChange = e => {\n    e.preventDefault();\n    selectItem(e.target.value);\n  };\n\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md-4\">\n        <select\n          // value={optionsState}\n          onChange={handleChange}\n          className=\"custom-select my-select\"\n        >\n          <option value=\"easy\">Easy</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"hard\">Hard</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default DropDown;\n","import React, { useState } from 'react';\n\nfunction DynamicList(props) {\n  const items = props.items;\n  const setItems = props.setItems;\n\n  const handleRemoveFields = (e, id) => {\n    e.preventDefault();\n    const values = [...items];\n    values.splice(\n      values.findIndex(value => value.id === id),\n      1\n    );\n    setItems(values);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-md-12 mb-3\">\n        {items.map((el, idx) => (\n          <div className=\"row\" key={idx}>\n            <div className=\"col mb-2\">{el}</div>\n            <div className=\"col mb-2\">\n              <button\n                className=\"btn btn-danger\"\n                disabled={items.length === 0}\n                onClick={e => handleRemoveFields(e, idx)}\n              >\n                X\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DynamicList;\n\n{\n  /* <div className=\"form-group\">\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Correct Answer</small>\n          </label>\n// var App = React.createClass({ */\n}\n//   getInitialState : function() {\n//     return (\n//       {\n//         fruits : {\n//           'fruit-1' : 'orange',\n//           'fruit-2' : 'apple'\n//         }\n//       }\n//      )\n//     },\n//     addFruit : function(fruit) {\n//      //create a unike key for each new fruit item\n//      var timestamp = (new Date()).getTime();\n//      // update the state object\n//      this.state.fruits['fruit-' + timestamp ] = fruit;\n//      // set the state\n//      this.setState({ fruits : this.state.fruits });\n//     },\n//     render: function() {\n//       return (\n//         <div className=\"component-wrapper\">\n//           <FruitList fruits={this.state.fruits} />\n//           <AddFruitForm addFruit={this.addFruit} />\n//         </div>\n//       );\n//      }\n//     });\n\n//     var FruitList = React.createClass({\n//       render : function() {\n//         return (\n//           <div className=\"container\">\n//             <ul className=\"list-group text-center\">\n//               {\n//                 Object.keys(this.props.fruits).map(function(key) {\n//                   return <li className=\"list-group-item list-group-item-info\">{this.props.fruits[key]}</li>\n//                 }.bind(this))\n//               }\n//             </ul>\n//            </div>\n//          );\n//        }\n//      });\n\n//     var AddFruitForm = React.createClass({\n//       createFruit : function(e) {\n//         e.preventDefault();\n//         //get the fruit object name from the form\n//         var fruit = this.refs.fruitName.value;\n//         //if we have a value\n//         //call the addFruit method of the App component\n//         //to change the state of the fruit list by adding an new item\n//         if(typeof fruit === 'string' && fruit.length > 0) {\n//           this.props.addFruit(fruit);\n//           //reset the form\n//           this.refs.fruitForm.reset();\n//         }\n//        },\n//        render : function() {\n//         return(\n//           <form className=\"form-inline\" ref=\"fruitForm\" onSubmit={this.createFruit}>\n//           <div className=\"form-group\">\n//             <label for=\"fruitItem\">\n//               Fruit Name\n//               <input type=\"text\" id=\"fruitItem\" placeholder=\"e.x.lemmon\" ref=\"fruitName\" className=\"form-control\" />\n//             </label>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">Add Fruit</button>\n//          </form>\n//         )\n//        }\n//       });\n\n// <div id=\"wrapper\">\n//   <div class=\"container\">\n//     <div class=\"row\">\n//       <article class=\"col-md-12\">\n//         <h1 class=\"text-center\">Simple List in React</h1>\n//         <h2 class=\"text-center\">Adding a dynamically generated list item</h2>\n//         <div id=\"app\" class=\"app-container\">\n\n//         </div>\n//       </article>\n//     </div>\n//   </div>\n// </div>\n","import React, { useEffect, useState, useContext } from 'react';\nimport { createQuestion, DoesQuestionExist } from '../utils/requests';\nimport Page from '../pages/page';\nimport { CSSTransition } from 'react-transition-group';\nimport { useImmerReducer } from 'use-immer';\nimport { withRouter } from 'react-router-dom';\nimport DispatchContext from '../utils/DispatchContext';\nimport DropDown from '../components/dropdown-component/dropdown-component';\nimport DynamicList from '../components/page-components/list-component/list-component';\n\nfunction CreatePost(props) {\n  const [difficulty, setDifficulty] = useState('easy');\n  const [answerOptions, setAnswerOptions] = useState([]);\n  const [input, setInput] = useState('');\n  const appDispatch = useContext(DispatchContext);\n\n  const initialState = {\n    title: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    body: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      checkCount: 0\n    },\n    difficulty: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answer: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answerOptions: {\n      value: [],\n      hasErrors: false,\n      message: ''\n    },\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'titleImmediately':\n        draft.title.hasErrors = false;\n        draft.title.value = action.value;\n        if (draft.title.value.length > 100) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Title is to long';\n        } else if (draft.title.value.length <= 10) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question title is to short';\n        } else if (draft.title.value.length === 0) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question must have a title';\n        }\n        break;\n      case 'titleUniqueResults':\n        if (action.value) {\n          draft.title.hasErrors = true;\n          draft.title.isUnique = false;\n          draft.title.message = 'Question with that title already exist';\n        } else {\n          draft.title.isUnique = true;\n        }\n        break;\n      case 'bodyImmediately':\n        draft.body.hasErrors = false;\n        draft.body.value = action.value;\n        if (draft.body.value.length > 500) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to long';\n        }\n        break;\n      case 'bodyAfterDelay':\n        if (draft.body.value.length < 10) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to short';\n        }\n        break;\n      case 'difficultyImmediately':\n        draft.difficulty.hasErrors = false;\n        draft.difficulty.value = action.value;\n        if (!['easy', 'medium', 'hard'].includes(draft.difficulty.value)) {\n          draft.difficulty.hasErrors = true;\n          draft.difficulty.message = 'Define difficulty';\n        }\n        break;\n      case 'correctAnswerImmediately':\n        draft.answer.hasErrors = false;\n        draft.answer.value = action.value;\n        if (!draft.answer.value) {\n          draft.answer.hasErrors = true;\n          draft.answer.message = 'Define the correct answer';\n        }\n        break;\n      case 'answerOptionsImmediately':\n        draft.answerOptions.hasErrors = false;\n        draft.answerOptions.value = action.value;\n        if (draft.answerOptions.value.length === 0 && draft.submitCount > 0) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'Define the answer options';\n        } else if (draft.answerOptions.value.length > 3) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'To many answer options';\n        }\n        break;\n      case 'submitForm':\n        if (\n          !draft.title.hasErrors &&\n          draft.title.isUnique &&\n          !draft.body.hasErrors &&\n          !draft.difficulty.hasErrors &&\n          !draft.answer.hasErrors &&\n          !draft.answerOptions.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.body.value) {\n      const delay = setTimeout(() => dispatch({ type: 'bodyAfterDelay' }), 800);\n      return () => clearTimeout(delay);\n    }\n  }, [state.body.value]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'difficultyImmediately',\n      value: difficulty\n    });\n  }, [difficulty]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: answerOptions\n    });\n  }, [answerOptions]);\n\n  useEffect(() => {\n    if (state.title.value) {\n      const delay = setTimeout(() => {\n        const questionExist = async () => {\n          const response = await DoesQuestionExist(state.title.value);\n          dispatch({\n            type: 'titleUniqueResults',\n            value: response.data.message !== 'OK'\n          });\n        };\n        questionExist();\n      }, 1500);\n      return () => clearTimeout(delay);\n    }\n  }, [state.title.value]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const question = async () => {\n        const response = await createQuestion({\n          title: state.title.value,\n          question: state.body.value,\n          correctAnswer: state.answer.value,\n          answerOptions: state.answerOptions.value,\n          difficulty: state.difficulty.value\n        });\n\n        console.log('resp:', response);\n        if (response.status === 'success') {\n          appDispatch({\n            type: 'flashMessage',\n            value: 'You created a new question!'\n          });\n        }\n      };\n      question();\n      return;\n    }\n  }, [state.submitCount]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    // dispatch({ type: 'titleUniqueResults', value: state.title.value });\n    dispatch({ type: 'titleImmediately', value: state.title.value });\n    dispatch({ type: 'bodyImmediately', value: state.body.value });\n    dispatch({ type: 'bodyAfterDelay', value: state.body.value });\n    dispatch({ type: 'difficultyImmediately', value: state.difficulty.value });\n    dispatch({ type: 'correctAnswerImmediately', value: state.answer.value });\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: state.answerOptions.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  const handleAddAnswer = e => {\n    e.preventDefault();\n    setAnswerOptions(answerOptions.concat(input));\n    setInput('');\n    document.getElementById('answer-options').value = '';\n  };\n\n  return (\n    <Page title=\"Create New Question\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"question-title\" className=\"text-muted mb-1\">\n            <small>Title</small>\n          </label>\n          <input\n            onChange={e =>\n              dispatch({\n                type: 'titleImmediately',\n                value: e.target.value\n              })\n            }\n            autoFocus\n            name=\"title\"\n            id=\"question-title\"\n            className=\"form-control form-control-lg form-control-title\"\n            type=\"text\"\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n          <CSSTransition\n            in={state.title.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.title.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\n            <small>Question</small>\n          </label>\n          <textarea\n            onChange={e =>\n              dispatch({\n                type: 'bodyImmediately',\n                value: e.target.value\n              })\n            }\n            name=\"body\"\n            id=\"post-body\"\n            className=\"body-content tall-textarea form-control\"\n            type=\"text\"\n          ></textarea>\n          <CSSTransition\n            in={state.body.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.body.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Correct Answer</small>\n          </label>\n          <input\n            onChange={e =>\n              dispatch({\n                type: 'correctAnswerImmediately',\n                value: e.target.value\n              })\n            }\n            autoFocus\n            name=\"Correct Answer\"\n            id=\"correct-answer\"\n            className=\"form-control form-control-lg form-control-title\"\n            type=\"text\"\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n          <CSSTransition\n            in={state.answer.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.answer.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n          <small>Difficulty</small>\n        </label>\n        <DropDown selectItem={setDifficulty} />\n        <CSSTransition\n          in={state.difficulty.hasErrors}\n          timeout={330}\n          classNames=\"liveValidateMessage\"\n          unmountOnExit\n        >\n          <div className=\"alert alert-danger small liveValidateMessage\">\n            {state.difficulty.message}\n          </div>\n        </CSSTransition>\n        <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n          <small>Answer alternatives</small>\n        </label>\n        <DynamicList items={answerOptions} setItems={setAnswerOptions} />\n        <CSSTransition\n          in={state.answerOptions.hasErrors}\n          timeout={330}\n          classNames=\"liveValidateMessage\"\n          unmountOnExit\n        >\n          <div className=\"alert alert-danger small liveValidateMessage\">\n            {state.answerOptions.message}\n          </div>\n        </CSSTransition>\n        <div className=\"form-group\">\n          <label htmlFor=\"answer-options\" className=\"text-muted mb-1\">\n            <small>Add an answer option</small>\n          </label>\n          <div className=\"row\">\n            <div className=\"col mb-2\">\n              <input\n                onChange={e => setInput(e.target.value)}\n                autoFocus\n                name=\"Answer Option\"\n                id=\"answer-options\"\n                className=\"form-control form-control-lg form-control-title\"\n                type=\"text\"\n                placeholder=\"\"\n                autoComplete=\"off\"\n              />\n            </div>\n            <div className=\"col mb-2\">\n              <button\n                className=\"btn btn-success\"\n                disabled={input.length === 0}\n                onClick={handleAddAnswer}\n              >\n                +\n              </button>\n            </div>\n          </div>\n        </div>\n        <button className=\"btn btn-primary\">Create New Question</button>\n      </form>\n    </Page>\n  );\n}\n\nexport default withRouter(CreatePost);\n","import { DoesEmailExist, DoesUsernameExist, signUp } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useEffect, useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport Page from './page';\n\nfunction Signup() {\n  const appDispatch = useContext(DispatchContext);\n\n  const initialState = {\n    username: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    email: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    password: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    passwordConfirm: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'usernameImmediately':\n        draft.username.hasErrors = false;\n        draft.username.value = action.value;\n        if (draft.username.value.length > 30) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'Username to long';\n        }\n        if (\n          draft.username.value &&\n          !/^([a-zA-Z0-9]+)$/.test(draft.username.value)\n        ) {\n          draft.username.hasErrors = true;\n          draft.username.message =\n            'Username can only contain letters and numbers';\n        }\n        break;\n      case 'usernameAfterDelay':\n        if (draft.username.value.length < 3) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'needs more than 3 chars';\n        }\n        if (!draft.hasErrors && !action.noRequest) {\n          draft.username.checkCount++;\n        }\n        break;\n      case 'usernameUniqueResults':\n        if (action.value) {\n          draft.username.hasErrors = true;\n          draft.username.isUnique = false;\n          draft.username.message = 'user exist';\n        } else {\n          draft.username.isUnique = true;\n        }\n        break;\n      case 'emailImmediately':\n        draft.email.hasErrors = false;\n        draft.email.value = action.value;\n        break;\n      case 'emailAfterDelay':\n        if (!/^\\S+@\\S+$/.test(draft.email.value)) {\n          draft.email.hasErrors = true;\n          draft.email.message = 'Invalid email';\n        }\n        if (!draft.email.hasErrors && !action.noRequest) {\n          draft.email.checkCount++;\n        }\n        break;\n      case 'emailUniqueResults':\n        if (action.value) {\n          draft.email.hasErrors = true;\n          draft.email.isUnique = false;\n          draft.email.message = 'Email is already in use';\n        } else {\n          draft.email.isUnique = true;\n        }\n        break;\n      case 'passwordImmediately':\n        draft.password.hasErrors = false;\n        draft.password.value = action.value;\n        if (draft.password.value.length > 12) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'Password to long';\n        }\n        break;\n      case 'passwordAfterDelay':\n        if (draft.password.value.length < 6) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'password to short';\n        }\n        break;\n      case 'passwordConfirmImmediately':\n        draft.passwordConfirm.hasErrors = false;\n        draft.passwordConfirm.value = action.value;\n        if (draft.passwordConfirm.value.length > 12) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'Password to long';\n        }\n        break;\n      case 'passwordConfirmAfterDelay':\n        if (draft.passwordConfirm.value.length < 6) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'password to short';\n        } else if (draft.passwordConfirm.value !== draft.password.value) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'passwords do not match!';\n        }\n        break;\n      case 'submitForm':\n        if (\n          !draft.username.hasErrors &&\n          draft.username.isUnique &&\n          !draft.email.hasErrors &&\n          draft.email.isUnique &&\n          !draft.password.hasErrors &&\n          !draft.passwordConfirm.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.username.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'usernameAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.username.value]);\n\n  useEffect(() => {\n    if (state.email.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'emailAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.email.value]);\n\n  useEffect(() => {\n    if (state.password.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.password.value]);\n\n  useEffect(() => {\n    if (state.passwordConfirm.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordConfirmAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.passwordConfirm.value]);\n\n  useEffect(() => {\n    if (state.username.checkCount) {\n      // Send requests here\n      const usernameExist = async () => {\n        const response = await DoesUsernameExist(state.username.value);\n        console.log('hello');\n        dispatch({\n          type: 'usernameUniqueResults',\n          value: response.data.message !== 'OK'\n        });\n      };\n      usernameExist();\n      return;\n    }\n  }, [state.username.checkCount]);\n\n  useEffect(() => {\n    if (state.email.checkCount) {\n      // Send requests here\n      const emailExist = async () => {\n        const response = await DoesEmailExist(state.email.value);\n        dispatch({\n          type: 'emailUniqueResults',\n          value: response.data.message !== 'OK'\n        });\n      };\n      emailExist();\n      return;\n    }\n  }, [state.email.checkCount]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const signup = async () => {\n        const response = await signUp({\n          name: state.username.value,\n          email: state.email.value,\n          password: state.password.value,\n          passwordConfirm: state.passwordConfirm.value\n        });\n\n        if (response.status === 'success') {\n          appDispatch({\n            type: 'login',\n            value: {\n              username: response.data.user.name,\n              email: response.data.user.email,\n              id: response.data.user._id\n            }\n          });\n\n          appDispatch({\n            type: 'flashMessage',\n            value: 'Welcome to your new account!'\n          });\n        }\n      };\n      signup();\n      return;\n    }\n  }, [state.submitCount]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({ type: 'usernameImmediately', value: state.username.value });\n    dispatch({\n      type: 'usernameAfterDelay',\n      value: state.username.value,\n      noRequest: true\n    });\n    dispatch({ type: 'emailImmediately', value: state.email.value });\n    dispatch({\n      type: 'emailAfterDelay',\n      value: state.email.value,\n      noRequest: true\n    });\n    dispatch({ type: 'passwordImmediately', value: state.password.value });\n    dispatch({ type: 'passwordAfterDelay', value: state.password.value });\n    dispatch({\n      type: 'passwordConfirmImmediately',\n      value: state.passwordConfirm.value\n    });\n    dispatch({\n      type: 'passwordConfirmAfterDelay',\n      value: state.passwordConfirm.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  return (\n    <Page title=\"Sign up\" wide={false}>\n      <div className=\"row align-items-center\">\n        <div className=\"col-lg-7 py-3 py-md-5\">\n          <h2>Sign up!</h2>\n          <p className=\"lead text-muted\">\n            Create a user to create questions on your own and keep track of your\n            score!\n          </p>\n        </div>\n        <div className=\"col-lg-5 pl-lg-5 pb-3 py-lg-5\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username-register\" className=\"text-muted mb-1\">\n                <small>Username</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'usernameImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"username-register\"\n                name=\"username\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Pick a username\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.username.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.username.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email-register\" className=\"text-muted mb-1\">\n                <small>Email</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({ type: 'emailImmediately', value: e.target.value })\n                }\n                id=\"email-register\"\n                name=\"email\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"you@example.com\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.email.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.email.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password-register\" className=\"text-muted mb-1\">\n                <small>Password</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Create a password\"\n              />\n              <CSSTransition\n                in={state.password.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.password.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"password-register-confirm\"\n                className=\"text-muted mb-1\"\n              >\n                <small>Password Confirm</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordConfirmImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register-confirm\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n              />\n              <CSSTransition\n                in={state.passwordConfirm.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.passwordConfirm.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"py-3 mt-4 btn btn-lg btn-success btn-block\"\n            >\n              Sign up for QuizApp\n            </button>\n          </form>\n        </div>\n      </div>\n    </Page>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\n\nfunction FlashMessages(props) {\n  return (\n    <div className=\"floating-alerts\">\n      {props.messages.map((msg, index) => {\n        return (\n          <div\n            key={index}\n            className=\"alert alert-success text-center floating-alert shadow-sm\"\n          >\n            {msg}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FlashMessages;\n","import React from 'react';\nimport Page from './page';\nimport { Link } from 'react-router-dom';\n\nfunction NotFound() {\n  return (\n    <Page title=\"Not Found\">\n      <div className=\"text-center\">\n        <h2>Whoops, we cannot find that page.</h2>\n        <p className=\"lead text-muted\">\n          You can always visit the <Link to=\"/\">homepage</Link> to get a fresh\n          start.\n        </p>\n      </div>\n    </Page>\n  );\n}\n\nexport default NotFound;\n","import React, { useEffect, useState, useContext } from 'react';\nimport {\n  editQuestion,\n  DoesQuestionExist,\n  getQuestion\n} from '../utils/requests';\nimport Page from '../pages/page';\nimport { CSSTransition } from 'react-transition-group';\nimport { useImmerReducer } from 'use-immer';\nimport { useParams, withRouter } from 'react-router-dom';\nimport DispatchContext from '../utils/DispatchContext';\nimport DropDown from '../components/dropdown-component/dropdown-component';\nimport DynamicList from '../components/page-components/list-component/list-component';\nimport NotFound from './notFound';\nimport LoadingDotsIcon from '../components/loadingdots-component/LoadingDotsIcon';\n\nfunction EditQuestion(props) {\n  const [difficulty, setDifficulty] = useState('easy');\n  const [answerOptions, setAnswerOptions] = useState([]);\n  const [input, setInput] = useState('');\n  const appDispatch = useContext(DispatchContext);\n  const { id } = useParams();\n\n  const initialState = {\n    initialState: {\n      title: '',\n      body: '',\n      difficulty: '',\n      answer: '',\n      answerOptions: ''\n    },\n    title: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: true,\n      checkCount: 0\n    },\n    body: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      checkCount: 0\n    },\n    difficulty: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answer: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answerOptions: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    isLoading: true,\n    questionFound: false,\n    isChanged: false,\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'titleImmediately':\n        draft.title.hasErrors = false;\n        draft.title.value = action.value;\n        if (draft.title.value.length > 100) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Title is to long';\n        } else if (draft.title.value.length <= 10) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question title is to short';\n        } else if (draft.title.value.length === 0) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question must have a title';\n        }\n        break;\n      case 'titleUniqueResults':\n        if (!action.value) {\n          draft.title.hasErrors = true;\n          draft.title.isUnique = false;\n          draft.title.message = 'Question with that title already exist';\n        } else {\n          draft.title.isUnique = true;\n        }\n        break;\n      case 'bodyImmediately':\n        draft.body.hasErrors = false;\n        draft.body.value = action.value;\n        if (draft.body.value.length > 500) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to long';\n        }\n        break;\n      case 'bodyAfterDelay':\n        if (draft.body.value.length < 10) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to short';\n        }\n        break;\n      case 'difficultyImmediately':\n        draft.difficulty.hasErrors = false;\n        draft.difficulty.value = action.value;\n        if (!['easy', 'medium', 'hard'].includes(draft.difficulty.value)) {\n          draft.difficulty.hasErrors = true;\n          draft.difficulty.message = 'Define difficulty';\n        }\n        break;\n      case 'correctAnswerImmediately':\n        draft.answer.hasErrors = false;\n        draft.answer.value = action.value;\n        draft.isChanged = false;\n        if (!draft.answer.value) {\n          draft.answer.hasErrors = true;\n          draft.answer.message = 'Define the correct answer';\n        }\n        break;\n      case 'answerOptionsImmediately':\n        draft.answerOptions.hasErrors = false;\n        draft.answerOptions.value = action.value;\n        if (draft.answerOptions.value.length === 0 && draft.submitCount > 0) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'Define the answer options';\n        } else if (draft.answerOptions.value.length > 3) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'To many answer options';\n        }\n        break;\n      case 'initialState':\n        draft.initialState.title = action.value.title;\n        draft.initialState.body = action.value.question;\n        draft.initialState.difficulty = action.value.difficulty;\n        draft.initialState.answer = action.value.correctAnswer;\n        draft.initialState.answerOptions = action.value.answerOptions;\n        break;\n      case 'Loading':\n        draft.isLoading = action.value;\n        break;\n      case 'QuestionFound':\n        draft.questionFound = action.value;\n        break;\n      case 'QuestionChanged':\n        draft.isChanged = action.value;\n        break;\n      case 'submitForm':\n        if (\n          !draft.title.hasErrors &&\n          draft.title.isUnique &&\n          !draft.body.hasErrors &&\n          !draft.difficulty.hasErrors &&\n          !draft.answer.hasErrors &&\n          !draft.answerOptions.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.body.value) {\n      const delay = setTimeout(() => dispatch({ type: 'bodyAfterDelay' }), 800);\n      return () => clearTimeout(delay);\n    }\n  }, [state.body.value]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'difficultyImmediately',\n      value: difficulty\n    });\n    // dispatch({ type: 'QuestionChanged', value: true });\n  }, [difficulty]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: answerOptions\n    });\n    // dispatch({ type: 'QuestionChanged', value: true });\n  }, [answerOptions]);\n\n  useEffect(() => {\n    if (\n      state.initialState.title !== '' &&\n      (state.title.value !== state.initialState.title ||\n        state.body.value !== state.initialState.body ||\n        state.difficulty.value !== state.initialState.difficulty ||\n        state.answer.value !== state.initialState.answer ||\n        JSON.stringify(state.answerOptions.value) !==\n          JSON.stringify(state.initialState.answerOptions))\n    ) {\n      dispatch({ type: 'QuestionChanged', value: true });\n    } else {\n      dispatch({ type: 'QuestionChanged', value: false });\n    }\n  }, [\n    state.title,\n    state.body,\n    state.difficulty,\n    state.answer,\n    state.answerOptions\n  ]);\n\n  useEffect(() => {\n    if (state.title.value && state.isChanged) {\n      const delay = setTimeout(() => {\n        const questionExist = async () => {\n          const response = await DoesQuestionExist(state.title.value);\n\n          let unqiue = false;\n          if (\n            response.data.message === 'OK' ||\n            state.title.value === state.initialState.title\n          )\n            unqiue = true;\n\n          dispatch({\n            type: 'titleUniqueResults',\n            value: unqiue\n          });\n        };\n        questionExist();\n      }, 1500);\n      return () => clearTimeout(delay);\n    }\n  }, [state.title.value]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const question = async () => {\n        const response = await editQuestion({\n          id: id,\n          title: state.title.value,\n          question: state.body.value,\n          correctAnswer: state.answer.value,\n          answerOptions: state.answerOptions.value,\n          difficulty: state.difficulty.value\n        });\n        try {\n          console.log('resp:', response);\n          if (response.status === 'success') {\n            appDispatch({\n              type: 'flashMessage',\n              value: 'You have edited your question!'\n            });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      };\n      question();\n      return;\n    }\n  }, [state.submitCount]);\n\n  useEffect(() => {\n    const question = async () => {\n      const response = await getQuestion(id);\n      try {\n        if (response.status === 'success') {\n          const title = response.data.data.title;\n          const question = response.data.data.question;\n          const correctAnswer = response.data.data.correctAnswer;\n          const difficulty = response.data.data.difficulty;\n          const answerOptions = response.data.data.answerOptions;\n          dispatch({ type: 'titleImmediately', value: title });\n          dispatch({ type: 'bodyImmediately', value: question });\n          dispatch({ type: 'correctAnswerImmediately', value: correctAnswer });\n          setDifficulty(difficulty);\n          setAnswerOptions(answerOptions);\n          dispatch({\n            type: 'initialState',\n            value: { title, question, correctAnswer, difficulty, answerOptions }\n          });\n          dispatch({ type: 'Loading', value: false });\n          dispatch({ type: 'QuestionFound', value: true });\n        }\n      } catch (error) {\n        console.log(error);\n        dispatch({ type: 'QuestionFound', value: false });\n      }\n    };\n    question();\n    return;\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({ type: 'titleImmediately', value: state.title.value });\n    dispatch({ type: 'bodyImmediately', value: state.body.value });\n    dispatch({ type: 'bodyAfterDelay', value: state.body.value });\n    dispatch({ type: 'difficultyImmediately', value: state.difficulty.value });\n    dispatch({ type: 'correctAnswerImmediately', value: state.answer.value });\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: state.answerOptions.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  const handleAddAnswer = e => {\n    e.preventDefault();\n    setAnswerOptions(answerOptions.concat(input));\n    setInput('');\n    document.getElementById('answer-options').value = '';\n  };\n\n  return (\n    <Page title=\"Create New Question\">\n      {state.isLoading && <LoadingDotsIcon />}\n      {state.isLoading && state.questionFound && <NotFound />}\n      {!state.isLoading && (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"question-title\" className=\"text-muted mb-1\">\n              <small>Title</small>\n            </label>\n            <input\n              onChange={e =>\n                dispatch({\n                  type: 'titleImmediately',\n                  value: e.target.value\n                })\n              }\n              autoFocus\n              name=\"title\"\n              id=\"question-title\"\n              className=\"form-control form-control-lg form-control-title\"\n              type=\"text\"\n              placeholder=\"\"\n              autoComplete=\"off\"\n              value={state.title.value}\n            />\n            <CSSTransition\n              in={state.title.hasErrors}\n              timeout={330}\n              classNames=\"liveValidateMessage\"\n              unmountOnExit\n            >\n              <div className=\"alert alert-danger small liveValidateMessage\">\n                {state.title.message}\n              </div>\n            </CSSTransition>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\n              <small>Question</small>\n            </label>\n            <textarea\n              onChange={e =>\n                dispatch({\n                  type: 'bodyImmediately',\n                  value: e.target.value\n                })\n              }\n              name=\"body\"\n              id=\"post-body\"\n              className=\"body-content tall-textarea form-control\"\n              type=\"text\"\n              value={state.body.value}\n            ></textarea>\n            <CSSTransition\n              in={state.body.hasErrors}\n              timeout={330}\n              classNames=\"liveValidateMessage\"\n              unmountOnExit\n            >\n              <div className=\"alert alert-danger small liveValidateMessage\">\n                {state.body.message}\n              </div>\n            </CSSTransition>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n              <small>Correct Answer</small>\n            </label>\n            <input\n              onChange={e =>\n                dispatch({\n                  type: 'correctAnswerImmediately',\n                  value: e.target.value\n                })\n              }\n              autoFocus\n              name=\"Correct Answer\"\n              id=\"correct-answer\"\n              className=\"form-control form-control-lg form-control-title\"\n              type=\"text\"\n              placeholder=\"\"\n              autoComplete=\"off\"\n              value={state.answer.value}\n            />\n            <CSSTransition\n              in={state.answer.hasErrors}\n              timeout={330}\n              classNames=\"liveValidateMessage\"\n              unmountOnExit\n            >\n              <div className=\"alert alert-danger small liveValidateMessage\">\n                {state.answer.message}\n              </div>\n            </CSSTransition>\n          </div>\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Difficulty</small>\n          </label>\n          <DropDown selectItem={setDifficulty} />\n          <CSSTransition\n            in={state.difficulty.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.difficulty.message}\n            </div>\n          </CSSTransition>\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Answer alternatives</small>\n          </label>\n          <DynamicList items={answerOptions} setItems={setAnswerOptions} />\n          <CSSTransition\n            in={state.answerOptions.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.answerOptions.message}\n            </div>\n          </CSSTransition>\n          <div className=\"form-group\">\n            <label htmlFor=\"answer-options\" className=\"text-muted mb-1\">\n              <small>Add an answer option</small>\n            </label>\n            <div className=\"row\">\n              <div className=\"col mb-2\">\n                <input\n                  onChange={e => setInput(e.target.value)}\n                  autoFocus\n                  name=\"Answer Option\"\n                  id=\"answer-options\"\n                  className=\"form-control form-control-lg form-control-title\"\n                  type=\"text\"\n                  placeholder=\"\"\n                  autoComplete=\"off\"\n                />\n              </div>\n              <div className=\"col mb-2\">\n                <button\n                  className=\"btn btn-success\"\n                  disabled={input.length === 0}\n                  onClick={handleAddAnswer}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n          </div>\n          <button disabled={!state.isChanged} className=\"btn btn-primary\">\n            Edit Question\n          </button>\n        </form>\n      )}\n    </Page>\n  );\n}\n\nexport default withRouter(EditQuestion);\n","import React, { useEffect } from 'react';\nimport Header from './components/page-components/header-component/header-component';\nimport Footer from './components/page-components/footer-component/footer-component';\nimport { useImmerReducer } from 'use-immer';\nimport Home from './pages/home';\nimport Profile from './pages/profile';\nimport Question from './pages/createQuestion';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport StateContext from './utils/StateContext';\nimport DispatchContext from './utils/DispatchContext';\nimport Signup from './pages/signup';\nimport FlashMessages from './utils/FlashMessage';\nimport NotFound from './pages/notFound';\nimport EditQuestion from './pages/editQuestion';\n\nconst App = () => {\n  const initialState = {\n    loggedIn: Boolean(localStorage.getItem('quizappUsername')),\n    flashMessages: [],\n    user: {\n      token: localStorage.getItem('quizappToken'),\n      username: localStorage.getItem('quizappUsername'),\n      email: localStorage.getItem('quizappEmail'),\n      id: localStorage.getItem('quizappId'),\n      avatar: localStorage.getItem('quizappAvatar')\n    }\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'login':\n        draft.user.username = action.value.username;\n        draft.user.email = action.value.email;\n        draft.user.id = action.value.id;\n        draft.loggedIn = true;\n        break;\n      case 'logout':\n        draft.loggedIn = false;\n        break;\n      case 'flashMessage':\n        draft.flashMessages.push(action.value);\n        break;\n      default:\n        console.log('nutin');\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.loggedIn) {\n      localStorage.setItem('quizappUsername', state.user.username);\n      localStorage.setItem('quizappId', state.user.id);\n      localStorage.setItem('quizappEmail', state.user.email);\n    } else {\n      localStorage.removeItem('quizappUsername');\n      localStorage.removeItem('quizappId');\n      localStorage.removeItem('quizappEmail');\n    }\n  }, [state.loggedIn]);\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        <Router>\n          <FlashMessages messages={state.flashMessages} />\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/question/:id/edit\" exact>\n              <EditQuestion />\n            </Route>\n            <Route path=\"/create-question\">\n              <Question />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Signup />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n          <Footer />\n        </Router>\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/js/bootstrap.js'; // skip this if you do not use bootstrap modals\n// import $ from 'jquery'; // skip this if you do not use bootstrap modals\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}