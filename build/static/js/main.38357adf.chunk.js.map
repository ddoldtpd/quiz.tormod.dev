{"version":3,"sources":["utils/DispatchContext.js","utils/StateContext.js","utils/requests.js","components/page-components/login-component/login-component.js","components/page-components/logout-component/logout-component.js","components/page-components/header-component/header-component.js","components/page-components/footer-component/footer-component.js","components/input-components/answer-button-component/toggle-button.js","components/input-components/answer-button-component/answer-button-component.js","components/page-components/question-component/question-component.js","pages/home.js","pages/container.js","pages/page.js","pages/profile.js","components/dropdown-component/dropdown-component.js","components/page-components/list-component/list-component.js","pages/createQuestion.js","pages/signup.js","utils/FlashMessage.js","App.js","serviceWorker.js","index.js"],"names":["DispatchContext","createContext","StateContext","axios","defaults","withCredentials","console","log","process","baseURL","DoesEmailExist","email","a","get","response","data","DoesUsernameExist","username","getMyQuestions","createQuestion","title","question","correctAnswer","answerOptions","difficulty","post","signUp","name","password","passwordConfirm","login","headers","status","getRandomQuestion","answerQuestion","answer","Id","token","config","Authorization","bodyParameters","LoginComponent","props","appDispatch","useContext","useState","setUsername","setPassword","handleSubmit","e","preventDefault","type","value","user","id","_id","onSubmit","className","onChange","target","placeholder","autoComplete","to","LogOutComponent","handleClick","onClick","Header","appState","loggedIn","Footer","href","Unchecked","height","width","border","Checked","background","ToggleButton","checked","style","Wrapper","diplay","flexDirection","AnswerButtonComponent","options","selected","setSelected","handleOnClick","map","text","key","AnswerBox","margin","TitleBox","textAlign","fontSize","QuestionBox","QuestionWrapper","display","QuestionComponent","setQuestion","useEffect","randomQuestion","Home","Container","wide","children","Page","document","window","scrollTo","Profile","questions","setQuestions","resp","el","DropDown","selectItem","DynamicList","items","setItems","idx","disabled","length","values","splice","findIndex","handleRemoveFields","withRouter","setTitle","body","setBody","setDifficulty","setAnswer","setAnswerOptions","input","setInput","htmlFor","autoFocus","concat","getElementById","Signup","useImmerReducer","draft","action","hasErrors","message","test","noRequest","checkCount","isUnique","submitCount","state","dispatch","delay","setTimeout","clearTimeout","usernameExist","emailExist","signup","CSSTransition","in","timeout","classNames","unmountOnExit","FlashMessages","messages","msg","index","App","initialState","Boolean","localStorage","getItem","flashMessages","avatar","push","setItem","removeItem","Provider","FlashMessage","path","exact","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.38357adf.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst DispatchContext = createContext();\n\nexport default DispatchContext;\n","import { createContext } from 'react';\n\nconst StateContext = createContext();\n\nexport default StateContext;\n","import axios from 'axios';\n// import { catchAsync } from './catchAsync';\n\naxios.defaults.withCredentials = false;\nconsole.log('ENV: ', process.env.REACT_APP_ENV);\n\nif (process.env.REACT_APP_ENV === 'production') {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL + process.env.REACT_APP_URLEXTENSION || '';\n} else {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL_DEV +\n      process.env.REACT_APP_URLEXTENSION_DEV || '';\n}\n\nexport const getQuestions = async () => {\n  try {\n    const response = await axios.get('/questions');\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesEmailExist = async email => {\n  try {\n    const response = await axios.get(`/users/does-email-exist/${email}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesUsernameExist = async username => {\n  try {\n    const response = await axios.get(`/users/does-username-exist/${username}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMyQuestions = async () => {\n  try {\n    const response = await axios.get('/users/me/questions', {\n      withCredentials: true,\n      'Content-Type': 'application/json'\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createQuestion = async (\n  title,\n  question,\n  correctAnswer,\n  answerOptions,\n  difficulty\n) => {\n  try {\n    console.log(\n      'Sending',\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty\n    );\n    const response = await axios.post(\n      '/questions',\n      {\n        title,\n        question,\n        correctAnswer,\n        answerOptions,\n        difficulty\n      },\n      {\n        withCredentials: true,\n        'Content-Type': 'application/json'\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signUp = async (name, email, password, passwordConfirm) => {\n  try {\n    console.log('signup');\n    const response = await axios.post(\n      '/users/signup',\n      name,\n      email,\n      password,\n      passwordConfirm\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const login = async (email, password) => {\n  let response;\n  try {\n    response = await axios.post(\n      '/users/login',\n      {\n        email,\n        password\n      },\n      {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': process.env.REACT_APP_BACKENDURL,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const getRandomQuestion = async () => {\n  let response;\n  try {\n    response = await axios.get('/questions/random');\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const answerQuestion = async (answer, Id, token) => {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  };\n  const bodyParameters = {\n    answer\n  };\n  let response;\n  try {\n    response = await axios.post(`/questions/${Id}`, bodyParameters, config);\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\n\nconst LoginComponent = props => {\n  const appDispatch = useContext(DispatchContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await login(username, password);\n    if (response.status === 'success') {\n      appDispatch({\n        type: 'login',\n        value: {\n          username: response.data.user.name,\n          email: response.data.user.email,\n          id: response.data.user._id\n        }\n      });\n      appDispatch({ type: 'flashMessage', value: 'Successfully logged out!' });\n      console.log('logged in');\n    } else {\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-0 pt-2 pt-md-0\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n          <input\n            type=\"text\"\n            onChange={e => setUsername(e.target.value)}\n            name=\"Username\"\n            value={username}\n            className=\"form-control form-control-sm input-dark\"\n            placeholder=\"Username\"\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={e => setPassword(e.target.value)}\n            value={password}\n            className=\"form-control form-control-sm input-dark\"\n            placeholder=\"Password\"\n          />\n        </div>\n        <div className=\"col-md-auto mr-0 pr-md-0 mb-3 mb-md-0\">\n          <button className=\"btn btn-success btn-sm\">Sign In</button>\n        </div>\n        <div className=\"col-md-auto\">\n          <Link className=\"btn btn-success btn-sm\" to=\"/sign-up\">\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginComponent;\n\n// <form onSubmit={handleSubmit} className=\"mb-0 pt-2 pt-md-0\">\n//   <div className=\"row align-items-center\">\n//     <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n//       <input\n//         onChange={e => setUsername(e.target.value)}\n//         name=\"username\"\n//         className=\"form-control form-control-sm input-dark\"\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         autoComplete=\"off\"\n//       />\n//     </div>\n//     <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n//       <input\n//         onChange={e => setPassword(e.target.value)}\n//         name=\"password\"\n//         className=\"form-control form-control-sm input-dark\"\n//         type=\"password\"\n//         placeholder=\"Password\"\n//       />\n//     </div>\n//     <div className=\"col-md-auto\">\n//       <button className=\"btn btn-success btn-sm\">Sign In</button>\n//     </div>\n//   </div>\n// </form>;\n\n// Fail\n// {\n//   \"status\": \"fail\"\n// }\n\n// On success\n// {\n//   \"status\": \"success\",\n//   \"token\": {},\n//   \"data\": {\n//       \"user\": {\n//           \"userScore\": {\n//               \"score\": 0,\n//               \"answeredQuestions\": []\n//           },\n//           \"role\": \"public\",\n//           \"_id\": \"5f36718b971e9f002996f837\",\n//           \"name\": \"kerstin\",\n//           \"email\": \"kerstin@elvegaard.com\",\n//           \"__v\": 0\n//       }\n//   }\n// }\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\n\nconst LogOutComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    appDispatch({ type: 'logout' });\n    appDispatch({ type: 'flashMessage', value: 'Successfully logged in!' });\n  };\n\n  return (\n    <div className=\"flex-row my-3 my-md-0\">\n      <Link className=\"btn btn-sm btn-success mr-2\" to=\"/create-question\">\n        Create Question\n      </Link>{' '}\n      <Link className=\"btn btn-sm btn-success mr-2\" to=\"/profile\">\n        Profile\n      </Link>{' '}\n      <button onClick={handleClick} className=\"btn btn-sm btn-secondary\">\n        Sign out\n      </button>\n    </div>\n  );\n};\n\nexport default LogOutComponent;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../header-component/header.css';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport LoginComponent from '../login-component/login-component';\nimport LogOutComponent from '../logout-component/logout-component';\n\nconst Header = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  return (\n    <header className=\"header-bar bg-primary mb-3\">\n      <div className=\"container d-flex flex-column flex-md-row align-items-center p-3\">\n        <h4 className=\"my-0 mr-md-auto font-weight-normal\">\n          <Link to=\"/\" className=\"text-white\">\n            QuizApp\n          </Link>\n        </h4>\n        {appState.loggedIn ? <LogOutComponent /> : <LoginComponent />}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n  return (\n    <footer className=\"border-top text-center small text-muted py-3\">\n      <p>\n        <Link to=\"/\" className=\"mx-1\">\n          Home\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/about-us\">\n          About Us\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/terms\">\n          Terms\n        </Link>\n      </p>\n      <p className=\"m-0\">\n        Copyright &copy; 2020{' '}\n        <a href=\"/\" className=\"text-muted\">\n          Quiz App\n        </a>\n        . All rights reserved.\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import * as React from 'react';\n\nconst ToggleButton = props => {\n  const { checked, onClick } = props;\n  return <div onClick={onClick} style={checked ? Checked : Unchecked} />;\n};\n\nconst Unchecked = {\n  height: '100%',\n  width: '100%',\n  border: '1px'\n};\nconst Checked = {\n  height: '100%',\n  width: '100%',\n  border: '1px',\n  background: 'green'\n};\n\nexport default ToggleButton;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ToggleButton from './toggle-button';\n\nconst AnswerButtonComponent = props => {\n  const { options, onClick } = props;\n  const [selected, setSelected] = useState('');\n\n  const handleOnClick = value => {\n    onClick && onClick(value);\n    setSelected(value);\n  };\n\n  const renderButtons = () => {\n    return options.map(text => {\n      return (\n        <ToggleButton\n          key={text}\n          onClick={() => handleOnClick(text)}\n          checked={selected === text}\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>{renderButtons()}</div>\n    </>\n  );\n};\n\nconst Wrapper = {\n  diplay: 'flex',\n  width: '120px',\n  height: '50px',\n  // flexGrow: '1',\n  flexDirection: 'row'\n};\nexport default AnswerButtonComponent;\n\n// import * as React from 'react';\n// import { ToggleButton } from 'react-native-paper';\n\n// const ToggleButtonExample = () => {\n//   const [status, setStatus] = React.useState('checked');\n\n//   const onButtonToggle = value => {\n//     setStatus(status === 'checked' ? 'unchecked' : 'checked');\n//   };\n\n//   return (\n//     <ToggleButton\n//       icon=\"bluetooth\"\n//       value=\"bluetooth\"\n//       status={status}\n//       onPress={onButtonToggle}\n//     />\n//   );\n// };\n\n// export default ToggleButtonExample;\n","import React, { useContext, useEffect, useState } from 'react';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport { getRandomQuestion, answerQuestion } from '../../../utils/requests';\nimport AnswerButtonComponent from '../../input-components/answer-button-component/answer-button-component';\n\nconst QuestionComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n  const [question, setQuestion] = useState('');\n\n  useEffect(() => {\n    const randomQuestion = async () => {\n      const response = await getRandomQuestion();\n      if (response) {\n        setQuestion(response.data.data[0]);\n      } else {\n      }\n    };\n    randomQuestion();\n  }, []);\n\n  const renderAnswerButtons = () => {\n    // return (\n    //   question.answerOptions && (\n    //     <AnswerButtonComonent options={question.answerOptions} />\n    //   )\n    // question.answerOptions.map((element, index) => {\n    //   return <button key={index}>{element}</button>;\n    // })\n    // );\n  };\n\n  const handleSubmit = async value => {\n    console.log(value);\n    console.log(question._id);\n    console.log(appState.user.token);\n    const response = await answerQuestion(\n      value,\n      question._id,\n      appState.user.token\n    );\n    console.log(response);\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>\n        <div style={QuestionWrapper}>\n          <div style={TitleBox}>{question.title}</div>\n          <div style={QuestionBox}>{question.question}</div>\n          <div style={AnswerBox}>\n            {question.answerOptions && (\n              <AnswerButtonComponent\n                onClick={handleSubmit}\n                options={question.answerOptions}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst SubmitBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%',\n  background: 'black'\n};\n\nconst AnswerBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%'\n};\n\nconst TitleBox = {\n  margin: '10px auto auto auto',\n  textAlign: 'center',\n  fontSize: '3rem',\n  background: 'red'\n};\n\nconst QuestionBox = {\n  margin: '20px auto auto auto',\n  height: '60%',\n  width: '80%',\n  background: 'blue'\n};\nconst QuestionWrapper = {\n  margin: '50px auto 50px auto',\n  height: '500px',\n  width: '800px',\n  background: 'grey'\n};\nconst Wrapper = {\n  display: 'flex',\n  height: '100%',\n  width: '100%'\n};\n\nexport default QuestionComponent;\n\n// {\n//   \"status\": \"success\",\n//   \"data\": {\n//       \"data\": [\n//           {\n//               \"_id\": \"5f301c21e33fb68b754009eb\",\n//               \"answerOptions\": [\n//                   \"This is a wrong answer\",\n//                   \"this is another wrong answer!\",\n//                   \"this is a third wrong answer!\"\n//               ],\n//               \"timesAnswered\": 0,\n//               \"timesCorrectAnswered\": 0,\n//               \"title\": \"YMCA\",\n//               \"question\": \"When referring to the worldwide youth organization based in Geneva, Switzerland, what does the acronym YMCA stand for?\",\n//               \"correctAnswer\": \"Young Men’s Christian Association\",\n//               \"difficulty\": \"hard\",\n//               \"author\": \"5c8a1d5b0190b214360dc057\",\n//               \"__v\": 0\n//           }\n//       ]\n//   }\n// }\n","import React, { useState } from 'react';\nimport QuestionComponent from '../components/page-components/question-component/question-component';\nimport { getQuestions } from '../utils/requests';\n\nconst Home = () => {\n  const [questions, setQuestions] = useState([]);\n\n  const handleClick = async () => {\n    const resp = await getQuestions();\n    console.log(resp.data.data);\n    setQuestions(resp.data.data);\n  };\n\n  return (\n    <div>\n      <QuestionComponent></QuestionComponent>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div\n      className={'container py-md-5 ' + (props.wide ? '' : 'container--narrow')}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport Container from './container';\n\nfunction Page(props) {\n  useEffect(() => {\n    document.title = `${props.title} | ComplexApp`;\n    window.scrollTo(0, 0);\n  }, [props.title]);\n\n  return <Container wide={props.wide}>{props.children}</Container>;\n}\n\nexport default Page;\n","import React, { useState, useContext } from 'react';\nimport { getMyQuestions } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport StateContext from '../utils/StateContext';\nimport Page from './page';\n\nconst Profile = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  const [questions, setQuestions] = useState([]);\n\n  const handleClick = async () => {\n    const resp = await getMyQuestions();\n    console.log(resp.data.data);\n    setQuestions(resp.data.data);\n  };\n\n  return (\n    <Page>\n      <h2>Profile</h2>\n      <div>\n        <button onClick={handleClick}>Get questions</button>\n        <div>\n          {questions.map(el => {\n            return <div key={el._id}>{el.title}</div>;\n          })}\n        </div>\n      </div>\n    </Page>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nfunction DropDown(props) {\n  const selectItem = props.selectItem;\n\n  const handleChange = e => {\n    e.preventDefault();\n    selectItem(e.target.value);\n  };\n\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md-4\">\n        <select\n          // value={optionsState}\n          onChange={handleChange}\n          className=\"custom-select my-select\"\n        >\n          <option selected>Choose...</option>\n          <option value=\"Easy\">Easy</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"Hard\">Hard</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default DropDown;\n","import React, { useState } from 'react';\n\nfunction DynamicList(props) {\n  const items = props.items;\n  const setItems = props.setItems;\n\n  const handleRemoveFields = id => {\n    const values = [...items];\n    values.splice(\n      values.findIndex(value => value.id === id),\n      1\n    );\n    setItems(values);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-md-12 mb-3\">\n        {items.map((el, idx) => (\n          <div className=\"row\" key={idx}>\n            <div className=\"col mb-2\">{el}</div>\n            <div className=\"col mb-2\">\n              <button\n                className=\"btn btn-danger\"\n                disabled={items.length === 0}\n                onClick={() => handleRemoveFields(idx)}\n              >\n                X\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DynamicList;\n\n{\n  /* <div className=\"form-group\">\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Correct Answer</small>\n          </label>\n// var App = React.createClass({ */\n}\n//   getInitialState : function() {\n//     return (\n//       {\n//         fruits : {\n//           'fruit-1' : 'orange',\n//           'fruit-2' : 'apple'\n//         }\n//       }\n//      )\n//     },\n//     addFruit : function(fruit) {\n//      //create a unike key for each new fruit item\n//      var timestamp = (new Date()).getTime();\n//      // update the state object\n//      this.state.fruits['fruit-' + timestamp ] = fruit;\n//      // set the state\n//      this.setState({ fruits : this.state.fruits });\n//     },\n//     render: function() {\n//       return (\n//         <div className=\"component-wrapper\">\n//           <FruitList fruits={this.state.fruits} />\n//           <AddFruitForm addFruit={this.addFruit} />\n//         </div>\n//       );\n//      }\n//     });\n\n//     var FruitList = React.createClass({\n//       render : function() {\n//         return (\n//           <div className=\"container\">\n//             <ul className=\"list-group text-center\">\n//               {\n//                 Object.keys(this.props.fruits).map(function(key) {\n//                   return <li className=\"list-group-item list-group-item-info\">{this.props.fruits[key]}</li>\n//                 }.bind(this))\n//               }\n//             </ul>\n//            </div>\n//          );\n//        }\n//      });\n\n//     var AddFruitForm = React.createClass({\n//       createFruit : function(e) {\n//         e.preventDefault();\n//         //get the fruit object name from the form\n//         var fruit = this.refs.fruitName.value;\n//         //if we have a value\n//         //call the addFruit method of the App component\n//         //to change the state of the fruit list by adding an new item\n//         if(typeof fruit === 'string' && fruit.length > 0) {\n//           this.props.addFruit(fruit);\n//           //reset the form\n//           this.refs.fruitForm.reset();\n//         }\n//        },\n//        render : function() {\n//         return(\n//           <form className=\"form-inline\" ref=\"fruitForm\" onSubmit={this.createFruit}>\n//           <div className=\"form-group\">\n//             <label for=\"fruitItem\">\n//               Fruit Name\n//               <input type=\"text\" id=\"fruitItem\" placeholder=\"e.x.lemmon\" ref=\"fruitName\" className=\"form-control\" />\n//             </label>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">Add Fruit</button>\n//          </form>\n//         )\n//        }\n//       });\n\n// <div id=\"wrapper\">\n//   <div class=\"container\">\n//     <div class=\"row\">\n//       <article class=\"col-md-12\">\n//         <h1 class=\"text-center\">Simple List in React</h1>\n//         <h2 class=\"text-center\">Adding a dynamically generated list item</h2>\n//         <div id=\"app\" class=\"app-container\">\n\n//         </div>\n//       </article>\n//     </div>\n//   </div>\n// </div>\n","import React, { useEffect, useState, useContext } from 'react';\nimport { createQuestion } from '../utils/requests';\nimport Page from '../pages/page';\nimport Axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport DispatchContext from '../utils/DispatchContext';\nimport StateContext from '../utils/StateContext';\nimport DropDown from '../components/dropdown-component/dropdown-component';\nimport DynamicList from '../components/page-components/list-component/list-component';\n\nfunction CreatePost(props) {\n  const [title, setTitle] = useState();\n  const [body, setBody] = useState();\n  const [difficulty, setDifficulty] = useState('Easy');\n  const [answer, setAnswer] = useState('');\n  const [answerOptions, setAnswerOptions] = useState([]);\n  const [input, setInput] = useState('');\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    try {\n      createQuestion(title, body, answer, answerOptions, difficulty);\n      appDispatch({\n        type: 'flashMessage',\n        value: 'Congrats, you created a new post.'\n      });\n      // props.history.push(`/post/${response.data}`);\n      console.log('New post was created.');\n    } catch (e) {\n      console.log('There was a problem.');\n    }\n  }\n\n  const handleAddAnswer = () => {\n    setAnswerOptions(answerOptions.concat(input));\n    document.getElementById('answer-options').value = '';\n  };\n\n  return (\n    <Page title=\"Create New Question\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"question-title\" className=\"text-muted mb-1\">\n            <small>Title</small>\n          </label>\n          <input\n            onChange={e => setTitle(e.target.value)}\n            autoFocus\n            name=\"title\"\n            id=\"question-title\"\n            className=\"form-control form-control-lg form-control-title\"\n            type=\"text\"\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\n            <small>Question</small>\n          </label>\n          <textarea\n            onChange={e => setBody(e.target.value)}\n            name=\"body\"\n            id=\"post-body\"\n            className=\"body-content tall-textarea form-control\"\n            type=\"text\"\n          ></textarea>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Correct Answer</small>\n          </label>\n          <input\n            onChange={e => setAnswer(e.target.value)}\n            autoFocus\n            name=\"Correct Answer\"\n            id=\"correct-answer\"\n            className=\"form-control form-control-lg form-control-title\"\n            type=\"text\"\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n        </div>\n        <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n          <small>Difficulty</small>\n        </label>\n        <DropDown selectItem={setDifficulty} />\n        <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n          <small>Answer alternatives</small>\n        </label>\n        <DynamicList items={answerOptions} setItems={setAnswerOptions} />\n        <div className=\"form-group\">\n          <label htmlFor=\"answer-options\" className=\"text-muted mb-1\">\n            <small>Add an answer option</small>\n          </label>\n          <div className=\"row\">\n            <div className=\"col mb-2\">\n              <input\n                onChange={e => setInput(e.target.value)}\n                autoFocus\n                name=\"Answer Option\"\n                id=\"answer-options\"\n                className=\"form-control form-control-lg form-control-title\"\n                type=\"text\"\n                placeholder=\"\"\n                autoComplete=\"off\"\n              />\n            </div>\n            <div className=\"col mb-2\">\n              <button\n                className=\"btn btn-success\"\n                disabled={input.length === 0}\n                onClick={handleAddAnswer}\n              >\n                +\n              </button>\n            </div>\n          </div>\n        </div>\n        <button className=\"btn btn-primary\">Create New Question</button>\n      </form>\n    </Page>\n  );\n}\n\nexport default withRouter(CreatePost);\n","import { DoesEmailExist, DoesUsernameExist, signUp } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useEffect, useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport Page from './page';\n\nfunction Signup() {\n  const appDispatch = useContext(DispatchContext);\n\n  const initialState = {\n    username: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    email: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    password: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    passwordConfirm: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'usernameImmediately':\n        draft.username.hasErrors = false;\n        draft.username.value = action.value;\n        if (draft.username.value.length > 30) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'Username to long';\n        }\n        if (\n          draft.username.value &&\n          !/^([a-zA-Z0-9]+)$/.test(draft.username.value)\n        ) {\n          draft.username.hasErrors = true;\n          draft.username.message =\n            'Username can only contain letters and numbers';\n        }\n        break;\n      case 'usernameAfterDelay':\n        if (draft.username.value.length < 3) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'needs more than 3 chars';\n        }\n        if (!draft.hasErrors && !action.noRequest) {\n          draft.username.checkCount++;\n        }\n        break;\n      case 'usernameUniqueResults':\n        if (action.value) {\n          draft.username.hasErrors = true;\n          draft.username.isUnique = false;\n          draft.username.message = 'user exist';\n        } else {\n          draft.username.isUnique = true;\n        }\n        break;\n      case 'emailImmediately':\n        draft.email.hasErrors = false;\n        draft.email.value = action.value;\n        break;\n      case 'emailAfterDelay':\n        if (!/^\\S+@\\S+$/.test(draft.email.value)) {\n          draft.email.hasErrors = true;\n          draft.email.message = 'Invalid email';\n        }\n        if (!draft.email.hasErrors && !action.noRequest) {\n          draft.email.checkCount++;\n        }\n        break;\n      case 'emailUniqueResults':\n        if (action.value) {\n          draft.email.hasErrors = true;\n          draft.email.isUnique = false;\n          draft.email.message = 'Email is already in use';\n        } else {\n          draft.email.isUnique = true;\n        }\n        break;\n      case 'passwordImmediately':\n        draft.password.hasErrors = false;\n        draft.password.value = action.value;\n        if (draft.password.value.length > 12) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'Password to long';\n        }\n        break;\n      case 'passwordAfterDelay':\n        if (draft.password.value.length < 6) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'password to short';\n        }\n        break;\n      case 'passwordConfirmImmediately':\n        draft.passwordConfirm.hasErrors = false;\n        draft.passwordConfirm.value = action.value;\n        if (draft.passwordConfirm.value.length > 12) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'Password to long';\n        }\n        break;\n      case 'passwordConfirmAfterDelay':\n        if (draft.passwordConfirm.value.length < 6) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'password to short';\n        } else if (draft.passwordConfirm.value !== draft.password.value) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'passwords do not match!';\n        }\n        break;\n      case 'submitForm':\n        if (\n          !draft.username.hasErrors &&\n          draft.username.isUnique &&\n          !draft.email.hasErrors &&\n          draft.email.isUnique &&\n          !draft.password.hasErrors &&\n          !draft.passwordConfirm.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.username.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'usernameAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.username.value]);\n\n  useEffect(() => {\n    if (state.email.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'emailAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.email.value]);\n\n  useEffect(() => {\n    if (state.password.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.password.value]);\n\n  useEffect(() => {\n    if (state.passwordConfirm.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordConfirmAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.passwordConfirm.value]);\n\n  useEffect(() => {\n    if (state.username.checkCount) {\n      // Send requests here\n      const usernameExist = async () => {\n        const response = await DoesUsernameExist(state.username.value);\n        console.log('hello');\n        dispatch({\n          type: 'usernameUniqueResults',\n          value: response.data.message !== 'OK'\n        });\n      };\n      usernameExist();\n      return;\n    }\n  }, [state.username.checkCount]);\n\n  useEffect(() => {\n    if (state.email.checkCount) {\n      // Send requests here\n      const emailExist = async () => {\n        const response = await DoesEmailExist(state.email.value);\n        dispatch({\n          type: 'emailUniqueResults',\n          value: response.data.message !== 'OK'\n        });\n      };\n      emailExist();\n      return;\n    }\n  }, [state.email.checkCount]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const signup = async () => {\n        const response = await signUp({\n          name: state.username.value,\n          email: state.email.value,\n          password: state.password.value,\n          passwordConfirm: state.passwordConfirm.value\n        });\n\n        if (response.status === 'success') {\n          appDispatch({\n            type: 'login',\n            value: {\n              username: response.data.user.name,\n              email: response.data.user.email,\n              id: response.data.user._id\n            }\n          });\n\n          appDispatch({\n            type: 'flashMessage',\n            value: 'Welcome to your new account!'\n          });\n        }\n      };\n      signup();\n      return;\n    }\n  }, [state.submitCount]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({ type: 'usernameImmediately', value: state.username.value });\n    dispatch({\n      type: 'usernameAfterDelay',\n      value: state.username.value,\n      noRequest: true\n    });\n    dispatch({ type: 'emailImmediately', value: state.email.value });\n    dispatch({\n      type: 'emailAfterDelay',\n      value: state.email.value,\n      noRequest: true\n    });\n    dispatch({ type: 'passwordImmediately', value: state.password.value });\n    dispatch({ type: 'passwordAfterDelay', value: state.password.value });\n    dispatch({\n      type: 'passwordConfirmImmediately',\n      value: state.passwordConfirm.value\n    });\n    dispatch({\n      type: 'passwordConfirmAfterDelay',\n      value: state.passwordConfirm.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  return (\n    <Page title=\"Sign up\" wide={false}>\n      <div className=\"row align-items-center\">\n        <div className=\"col-lg-7 py-3 py-md-5\">\n          <h2>Sign up!</h2>\n          <p className=\"lead text-muted\">\n            Create a user to create questions on your own and keep track of your\n            score!\n          </p>\n        </div>\n        <div className=\"col-lg-5 pl-lg-5 pb-3 py-lg-5\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username-register\" className=\"text-muted mb-1\">\n                <small>Username</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'usernameImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"username-register\"\n                name=\"username\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Pick a username\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.username.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.username.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email-register\" className=\"text-muted mb-1\">\n                <small>Email</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({ type: 'emailImmediately', value: e.target.value })\n                }\n                id=\"email-register\"\n                name=\"email\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"you@example.com\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.email.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.email.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password-register\" className=\"text-muted mb-1\">\n                <small>Password</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Create a password\"\n              />\n              <CSSTransition\n                in={state.password.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.password.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"password-register-confirm\"\n                className=\"text-muted mb-1\"\n              >\n                <small>Password Confirm</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordConfirmImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register-confirm\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n              />\n              <CSSTransition\n                in={state.passwordConfirm.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.passwordConfirm.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"py-3 mt-4 btn btn-lg btn-success btn-block\"\n            >\n              Sign up for QuizApp\n            </button>\n          </form>\n        </div>\n      </div>\n    </Page>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\n\nfunction FlashMessages(props) {\n  return (\n    <div className=\"floating-alerts\">\n      {props.messages.map((msg, index) => {\n        return (\n          <div\n            key={index}\n            className=\"alert alert-success text-center floating-alert shadow-sm\"\n          >\n            {msg}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FlashMessages;\n","import React, { useEffect } from 'react';\nimport Header from './components/page-components/header-component/header-component';\nimport Footer from './components/page-components/footer-component/footer-component';\nimport { useImmerReducer } from 'use-immer';\nimport Home from './pages/home';\nimport Profile from './pages/profile';\nimport Question from './pages/createQuestion';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport StateContext from './utils/StateContext';\nimport DispatchContext from './utils/DispatchContext';\nimport Signup from './pages/signup';\nimport FlashMessages from './utils/FlashMessage';\n\nconst App = () => {\n  const initialState = {\n    loggedIn: Boolean(localStorage.getItem('quizappUsername')),\n    flashMessages: [],\n    user: {\n      token: localStorage.getItem('quizappToken'),\n      username: localStorage.getItem('quizappUsername'),\n      email: localStorage.getItem('quizappEmail'),\n      id: localStorage.getItem('quizappId'),\n      avatar: localStorage.getItem('quizappAvatar')\n    }\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'login':\n        draft.user.username = action.value.username;\n        draft.user.email = action.value.email;\n        draft.user.id = action.value.id;\n        draft.loggedIn = true;\n        break;\n      case 'logout':\n        draft.loggedIn = false;\n        break;\n      case 'flashMessage':\n        draft.flashMessages.push(action.value);\n        break;\n      default:\n        console.log('nutin');\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.loggedIn) {\n      localStorage.setItem('quizappUsername', state.user.username);\n      localStorage.setItem('quizappId', state.user.id);\n      localStorage.setItem('quizappEmail', state.user.email);\n    } else {\n      localStorage.removeItem('quizappUsername');\n      localStorage.removeItem('quizappId');\n      localStorage.removeItem('quizappEmail');\n    }\n  }, [state.loggedIn]);\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        <Router>\n          <FlashMessages messages={state.flashMessages} />\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/create-question\">\n              <Question />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Signup />\n            </Route>\n          </Switch>\n          <Footer />\n        </Router>\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/js/bootstrap.js'; // skip this if you do not use bootstrap modals\n// import $ from 'jquery'; // skip this if you do not use bootstrap modals\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}