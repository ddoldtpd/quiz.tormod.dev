{"version":3,"sources":["utils/DispatchContext.js","utils/StateContext.js","utils/requests.js","components/page-components/login-component/login-component.js","components/page-components/logout-component/logout-component.js","components/page-components/header-component/header-component.js","components/page-components/footer-component/footer-component.js","components/input-components/answer-button-component/toggle-button.js","components/input-components/answer-button-component/answer-button-component.js","components/page-components/question-component/question-component.js","pages/home.js","pages/container.js","pages/page.js","pages/profile.js","components/dropdown-component/dropdown-component.js","components/page-components/list-component/list-component.js","pages/createQuestion.js","pages/signup.js","utils/FlashMessage.js","App.js","serviceWorker.js","index.js"],"names":["DispatchContext","createContext","StateContext","axios","defaults","withCredentials","console","log","process","baseURL","DoesEmailExist","email","a","get","response","data","DoesUsernameExist","username","DoesQuestionExist","title","post","getMyQuestions","createQuestion","question","correctAnswer","answerOptions","difficulty","headers","signUp","name","password","passwordConfirm","login","status","getRandomQuestion","answerQuestion","answer","Id","token","config","Authorization","bodyParameters","LoginComponent","props","appDispatch","useContext","useState","setUsername","setPassword","handleSubmit","e","preventDefault","type","value","user","id","_id","onSubmit","className","onChange","target","placeholder","autoComplete","to","LogOutComponent","handleClick","onClick","Header","appState","loggedIn","Footer","href","Unchecked","height","width","border","Checked","background","ToggleButton","checked","style","Wrapper","diplay","flexDirection","AnswerButtonComponent","options","selected","setSelected","handleOnClick","map","text","key","AnswerBox","margin","TitleBox","textAlign","fontSize","QuestionBox","QuestionWrapper","display","QuestionComponent","setQuestion","useEffect","randomQuestion","Home","Container","wide","children","Page","document","window","scrollTo","Profile","setQuestions","questions","forEach","el","concat","getQuestions","exact","path","DropDown","selectItem","DynamicList","items","setItems","idx","disabled","length","values","splice","findIndex","handleRemoveFields","withRouter","setDifficulty","setAnswerOptions","input","setInput","useImmerReducer","draft","action","hasErrors","message","isUnique","body","includes","submitCount","checkCount","state","dispatch","delay","setTimeout","clearTimeout","questionExist","htmlFor","autoFocus","CSSTransition","in","timeout","classNames","unmountOnExit","getElementById","Signup","test","noRequest","usernameExist","emailExist","signup","FlashMessages","messages","msg","index","App","initialState","Boolean","localStorage","getItem","flashMessages","avatar","push","setItem","removeItem","Provider","FlashMessage","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.3ad10161.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst DispatchContext = createContext();\n\nexport default DispatchContext;\n","import { createContext } from 'react';\n\nconst StateContext = createContext();\n\nexport default StateContext;\n","import axios from 'axios';\n// import { catchAsync } from './catchAsync';\n\naxios.defaults.withCredentials = false;\nconsole.log('ENV: ', process.env.REACT_APP_ENV);\n\nif (process.env.REACT_APP_ENV === 'production') {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL + process.env.REACT_APP_URLEXTENSION || '';\n} else {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL_DEV +\n      process.env.REACT_APP_URLEXTENSION_DEV || '';\n}\n\nexport const getQuestions = async () => {\n  try {\n    const response = await axios.get('/questions');\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesEmailExist = async email => {\n  try {\n    const response = await axios.get(`/users/does-email-exist/${email}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesUsernameExist = async username => {\n  try {\n    const response = await axios.get(`/users/does-username-exist/${username}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesQuestionExist = async title => {\n  try {\n    const response = await axios.post('/questions/does-question-exist', {\n      title\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMyQuestions = async () => {\n  try {\n    const response = await axios.get('/users/me/questions', {\n      withCredentials: true,\n      'Content-Type': 'application/json'\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createQuestion = async (\n  title,\n  question,\n  correctAnswer,\n  answerOptions,\n  difficulty\n) => {\n  try {\n    console.log(\n      'Sending',\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty\n    );\n\n    const response = await axios.post(\n      '/questions',\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty,\n      {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': '*', //process.env.REACT_APP_BACKENDURL,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    console.log('response:', response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signUp = async (name, email, password, passwordConfirm) => {\n  try {\n    console.log('signup');\n    const response = await axios.post(\n      '/users/signup',\n      name,\n      email,\n      password,\n      passwordConfirm\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const login = async (email, password) => {\n  let response;\n  try {\n    response = await axios.post(\n      '/users/login',\n      {\n        email,\n        password\n      },\n      {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const getRandomQuestion = async () => {\n  let response;\n  try {\n    response = await axios.get('/questions/random');\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const answerQuestion = async (answer, Id, token) => {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  };\n  const bodyParameters = {\n    answer\n  };\n  let response;\n  try {\n    response = await axios.post(`/questions/${Id}`, bodyParameters, config);\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\n\nconst LoginComponent = props => {\n  const appDispatch = useContext(DispatchContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await login(username, password);\n    if (response.status === 'success') {\n      appDispatch({\n        type: 'login',\n        value: {\n          username: response.data.user.name,\n          email: response.data.user.email,\n          id: response.data.user._id\n        }\n      });\n      appDispatch({ type: 'flashMessage', value: 'Successfully logged out!' });\n      console.log('logged in');\n    } else {\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-0 pt-2 pt-md-0\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n          <input\n            type=\"text\"\n            onChange={e => setUsername(e.target.value)}\n            name=\"Username\"\n            value={username}\n            className=\"form-control form-control-sm input-dark\"\n            placeholder=\"Username\"\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={e => setPassword(e.target.value)}\n            value={password}\n            className=\"form-control form-control-sm input-dark\"\n            placeholder=\"Password\"\n          />\n        </div>\n        <div className=\"col-md-auto mr-0 pr-md-0 mb-3 mb-md-0\">\n          <button className=\"btn btn-success btn-sm\">Sign In</button>\n        </div>\n        <div className=\"col-md-auto\">\n          <Link className=\"btn btn-secondary btn-sm\" to=\"/sign-up\">\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginComponent;\n\n// <form onSubmit={handleSubmit} className=\"mb-0 pt-2 pt-md-0\">\n//   <div className=\"row align-items-center\">\n//     <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n//       <input\n//         onChange={e => setUsername(e.target.value)}\n//         name=\"username\"\n//         className=\"form-control form-control-sm input-dark\"\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         autoComplete=\"off\"\n//       />\n//     </div>\n//     <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n//       <input\n//         onChange={e => setPassword(e.target.value)}\n//         name=\"password\"\n//         className=\"form-control form-control-sm input-dark\"\n//         type=\"password\"\n//         placeholder=\"Password\"\n//       />\n//     </div>\n//     <div className=\"col-md-auto\">\n//       <button className=\"btn btn-success btn-sm\">Sign In</button>\n//     </div>\n//   </div>\n// </form>;\n\n// Fail\n// {\n//   \"status\": \"fail\"\n// }\n\n// On success\n// {\n//   \"status\": \"success\",\n//   \"token\": {},\n//   \"data\": {\n//       \"user\": {\n//           \"userScore\": {\n//               \"score\": 0,\n//               \"answeredQuestions\": []\n//           },\n//           \"role\": \"public\",\n//           \"_id\": \"5f36718b971e9f002996f837\",\n//           \"name\": \"kerstin\",\n//           \"email\": \"kerstin@elvegaard.com\",\n//           \"__v\": 0\n//       }\n//   }\n// }\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\n\nconst LogOutComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    appDispatch({ type: 'logout' });\n    appDispatch({ type: 'flashMessage', value: 'Successfully logged in!' });\n  };\n\n  return (\n    <div className=\"flex-row my-3 my-md-0\">\n      <Link className=\"btn btn-sm btn-success mr-2\" to=\"/create-question\">\n        Create Question\n      </Link>{' '}\n      <Link className=\"btn btn-sm btn-success mr-2\" to=\"/profile\">\n        Profile\n      </Link>{' '}\n      <button onClick={handleClick} className=\"btn btn-sm btn-secondary\">\n        Sign out\n      </button>\n    </div>\n  );\n};\n\nexport default LogOutComponent;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../header-component/header.css';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport LoginComponent from '../login-component/login-component';\nimport LogOutComponent from '../logout-component/logout-component';\n\nconst Header = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  return (\n    <header className=\"header-bar bg-primary mb-3\">\n      <div className=\"container d-flex flex-column flex-md-row align-items-center p-3\">\n        <h4 className=\"my-0 mr-md-auto font-weight-normal\">\n          <Link to=\"/\" className=\"text-white\">\n            QuizApp\n          </Link>\n        </h4>\n        {appState.loggedIn ? <LogOutComponent /> : <LoginComponent />}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n  return (\n    <footer className=\"border-top text-center small text-muted py-3\">\n      <p>\n        <Link to=\"/\" className=\"mx-1\">\n          Home\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/about-us\">\n          About Us\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/terms\">\n          Terms\n        </Link>\n      </p>\n      <p className=\"m-0\">\n        Copyright &copy; 2020{' '}\n        <a href=\"/\" className=\"text-muted\">\n          Quiz App\n        </a>\n        . All rights reserved.\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import * as React from 'react';\n\nconst ToggleButton = props => {\n  const { checked, onClick } = props;\n  return <div onClick={onClick} style={checked ? Checked : Unchecked} />;\n};\n\nconst Unchecked = {\n  height: '100%',\n  width: '100%',\n  border: '1px'\n};\nconst Checked = {\n  height: '100%',\n  width: '100%',\n  border: '1px',\n  background: 'green'\n};\n\nexport default ToggleButton;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ToggleButton from './toggle-button';\n\nconst AnswerButtonComponent = props => {\n  const { options, onClick } = props;\n  const [selected, setSelected] = useState('');\n\n  const handleOnClick = value => {\n    onClick && onClick(value);\n    setSelected(value);\n  };\n\n  const renderButtons = () => {\n    return options.map(text => {\n      return (\n        <ToggleButton\n          key={text}\n          onClick={() => handleOnClick(text)}\n          checked={selected === text}\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>{renderButtons()}</div>\n    </>\n  );\n};\n\nconst Wrapper = {\n  diplay: 'flex',\n  width: '120px',\n  height: '50px',\n  // flexGrow: '1',\n  flexDirection: 'row'\n};\nexport default AnswerButtonComponent;\n\n// import * as React from 'react';\n// import { ToggleButton } from 'react-native-paper';\n\n// const ToggleButtonExample = () => {\n//   const [status, setStatus] = React.useState('checked');\n\n//   const onButtonToggle = value => {\n//     setStatus(status === 'checked' ? 'unchecked' : 'checked');\n//   };\n\n//   return (\n//     <ToggleButton\n//       icon=\"bluetooth\"\n//       value=\"bluetooth\"\n//       status={status}\n//       onPress={onButtonToggle}\n//     />\n//   );\n// };\n\n// export default ToggleButtonExample;\n","import React, { useContext, useEffect, useState } from 'react';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport { getRandomQuestion, answerQuestion } from '../../../utils/requests';\nimport AnswerButtonComponent from '../../input-components/answer-button-component/answer-button-component';\n\nconst QuestionComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n  const [question, setQuestion] = useState('');\n\n  useEffect(() => {\n    const randomQuestion = async () => {\n      const response = await getRandomQuestion();\n      if (response) {\n        setQuestion(response.data.data[0]);\n      } else {\n      }\n    };\n    randomQuestion();\n  }, []);\n\n  const renderAnswerButtons = () => {\n    // return (\n    //   question.answerOptions && (\n    //     <AnswerButtonComonent options={question.answerOptions} />\n    //   )\n    // question.answerOptions.map((element, index) => {\n    //   return <button key={index}>{element}</button>;\n    // })\n    // );\n  };\n\n  const handleSubmit = async value => {\n    console.log(value);\n    console.log(question._id);\n    console.log(appState.user.token);\n    const response = await answerQuestion(\n      value,\n      question._id,\n      appState.user.token\n    );\n    console.log(response);\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>\n        <div style={QuestionWrapper}>\n          <div style={TitleBox}>{question.title}</div>\n          <div style={QuestionBox}>{question.question}</div>\n          <div style={AnswerBox}>\n            {question.answerOptions && (\n              <AnswerButtonComponent\n                onClick={handleSubmit}\n                options={question.answerOptions}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst SubmitBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%',\n  background: 'black'\n};\n\nconst AnswerBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%'\n};\n\nconst TitleBox = {\n  margin: '10px auto auto auto',\n  textAlign: 'center',\n  fontSize: '3rem',\n  background: 'red'\n};\n\nconst QuestionBox = {\n  margin: '20px auto auto auto',\n  height: '60%',\n  width: '80%',\n  background: 'blue'\n};\nconst QuestionWrapper = {\n  margin: '50px auto 50px auto',\n  height: '500px',\n  width: '800px',\n  background: 'grey'\n};\nconst Wrapper = {\n  display: 'flex',\n  height: '100%',\n  width: '100%'\n};\n\nexport default QuestionComponent;\n\n// {\n//   \"status\": \"success\",\n//   \"data\": {\n//       \"data\": [\n//           {\n//               \"_id\": \"5f301c21e33fb68b754009eb\",\n//               \"answerOptions\": [\n//                   \"This is a wrong answer\",\n//                   \"this is another wrong answer!\",\n//                   \"this is a third wrong answer!\"\n//               ],\n//               \"timesAnswered\": 0,\n//               \"timesCorrectAnswered\": 0,\n//               \"title\": \"YMCA\",\n//               \"question\": \"When referring to the worldwide youth organization based in Geneva, Switzerland, what does the acronym YMCA stand for?\",\n//               \"correctAnswer\": \"Young Men’s Christian Association\",\n//               \"difficulty\": \"hard\",\n//               \"author\": \"5c8a1d5b0190b214360dc057\",\n//               \"__v\": 0\n//           }\n//       ]\n//   }\n// }\n","import React, { useState } from 'react';\nimport QuestionComponent from '../components/page-components/question-component/question-component';\nimport { getQuestions } from '../utils/requests';\n\nconst Home = () => {\n  const [questions, setQuestions] = useState([]);\n\n  const handleClick = async () => {\n    const resp = await getQuestions();\n    console.log(resp.data.data);\n    setQuestions(resp.data.data);\n  };\n\n  return (\n    <div>\n      <QuestionComponent></QuestionComponent>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div\n      className={'container py-md-5 ' + (props.wide ? '' : 'container--narrow')}\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport Container from './container';\n\nfunction Page(props) {\n  useEffect(() => {\n    document.title = `${props.title} | ComplexApp`;\n    window.scrollTo(0, 0);\n  }, [props.title]);\n\n  return <Container wide={props.wide}>{props.children}</Container>;\n}\n\nexport default Page;\n","import { useParams, NavLink, Switch, Route } from 'react-router-dom';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { getMyQuestions } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport StateContext from '../utils/StateContext';\nimport Page from './page';\n\nconst Profile = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  const [questions, setQuestions] = useState([]);\n\n  const handleClick = async () => {\n    const resp = await getMyQuestions();\n    console.log(resp.data.data);\n    setQuestions(resp.data.data);\n  };\n\n  useEffect(() => {\n    const getQuestions = async () => {\n      const response = await getMyQuestions();\n      if (response) {\n        const questions = response.data.data;\n        console.log('Questions', questions);\n        questions.forEach(el => {\n          setQuestions(questions.concat(el));\n        });\n      } else {\n        console.log('no questions for this user');\n      }\n    };\n    getQuestions();\n  }, []);\n\n  return (\n    <Page title=\"Profile Screen\">\n      <h2>{appState.user.username}</h2>\n\n      <div className=\"profile-nav nav nav-tabs pt-2 mb-4\">\n        <NavLink exact to=\"#\" className=\"nav-item nav-link\">\n          Questions: {/* {state.profileData.counts.postCount} */}\n        </NavLink>\n        <NavLink to=\"#\" className=\"nav-item nav-link\">\n          Answered Questions: {/* state.profileData.counts.followerCount */}\n        </NavLink>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/profile/:username\">\n          {/* <ProfilePosts /> */}\n        </Route>\n        <Route path=\"/profile/:username/followers\">\n          {/* <ProfileFollowers /> */}\n        </Route>\n        <Route path=\"/profile/:username/following\">\n          {/* <ProfileFollowing /> */}\n        </Route>\n      </Switch>\n    </Page>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nfunction DropDown(props) {\n  const selectItem = props.selectItem;\n\n  const handleChange = e => {\n    e.preventDefault();\n    selectItem(e.target.value);\n  };\n\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md-4\">\n        <select\n          // value={optionsState}\n          onChange={handleChange}\n          className=\"custom-select my-select\"\n        >\n          <option value=\"easy\">Easy</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"hard\">Hard</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default DropDown;\n","import React, { useState } from 'react';\n\nfunction DynamicList(props) {\n  const items = props.items;\n  const setItems = props.setItems;\n\n  const handleRemoveFields = (e, id) => {\n    e.preventDefault();\n    const values = [...items];\n    values.splice(\n      values.findIndex(value => value.id === id),\n      1\n    );\n    setItems(values);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-md-12 mb-3\">\n        {items.map((el, idx) => (\n          <div className=\"row\" key={idx}>\n            <div className=\"col mb-2\">{el}</div>\n            <div className=\"col mb-2\">\n              <button\n                className=\"btn btn-danger\"\n                disabled={items.length === 0}\n                onClick={e => handleRemoveFields(e, idx)}\n              >\n                X\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DynamicList;\n\n{\n  /* <div className=\"form-group\">\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Correct Answer</small>\n          </label>\n// var App = React.createClass({ */\n}\n//   getInitialState : function() {\n//     return (\n//       {\n//         fruits : {\n//           'fruit-1' : 'orange',\n//           'fruit-2' : 'apple'\n//         }\n//       }\n//      )\n//     },\n//     addFruit : function(fruit) {\n//      //create a unike key for each new fruit item\n//      var timestamp = (new Date()).getTime();\n//      // update the state object\n//      this.state.fruits['fruit-' + timestamp ] = fruit;\n//      // set the state\n//      this.setState({ fruits : this.state.fruits });\n//     },\n//     render: function() {\n//       return (\n//         <div className=\"component-wrapper\">\n//           <FruitList fruits={this.state.fruits} />\n//           <AddFruitForm addFruit={this.addFruit} />\n//         </div>\n//       );\n//      }\n//     });\n\n//     var FruitList = React.createClass({\n//       render : function() {\n//         return (\n//           <div className=\"container\">\n//             <ul className=\"list-group text-center\">\n//               {\n//                 Object.keys(this.props.fruits).map(function(key) {\n//                   return <li className=\"list-group-item list-group-item-info\">{this.props.fruits[key]}</li>\n//                 }.bind(this))\n//               }\n//             </ul>\n//            </div>\n//          );\n//        }\n//      });\n\n//     var AddFruitForm = React.createClass({\n//       createFruit : function(e) {\n//         e.preventDefault();\n//         //get the fruit object name from the form\n//         var fruit = this.refs.fruitName.value;\n//         //if we have a value\n//         //call the addFruit method of the App component\n//         //to change the state of the fruit list by adding an new item\n//         if(typeof fruit === 'string' && fruit.length > 0) {\n//           this.props.addFruit(fruit);\n//           //reset the form\n//           this.refs.fruitForm.reset();\n//         }\n//        },\n//        render : function() {\n//         return(\n//           <form className=\"form-inline\" ref=\"fruitForm\" onSubmit={this.createFruit}>\n//           <div className=\"form-group\">\n//             <label for=\"fruitItem\">\n//               Fruit Name\n//               <input type=\"text\" id=\"fruitItem\" placeholder=\"e.x.lemmon\" ref=\"fruitName\" className=\"form-control\" />\n//             </label>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">Add Fruit</button>\n//          </form>\n//         )\n//        }\n//       });\n\n// <div id=\"wrapper\">\n//   <div class=\"container\">\n//     <div class=\"row\">\n//       <article class=\"col-md-12\">\n//         <h1 class=\"text-center\">Simple List in React</h1>\n//         <h2 class=\"text-center\">Adding a dynamically generated list item</h2>\n//         <div id=\"app\" class=\"app-container\">\n\n//         </div>\n//       </article>\n//     </div>\n//   </div>\n// </div>\n","import React, { useEffect, useState, useContext } from 'react';\nimport { createQuestion, DoesQuestionExist } from '../utils/requests';\nimport Page from '../pages/page';\nimport { CSSTransition } from 'react-transition-group';\nimport { useImmerReducer } from 'use-immer';\nimport { withRouter } from 'react-router-dom';\nimport DispatchContext from '../utils/DispatchContext';\nimport DropDown from '../components/dropdown-component/dropdown-component';\nimport DynamicList from '../components/page-components/list-component/list-component';\n\nfunction CreatePost(props) {\n  const [difficulty, setDifficulty] = useState('easy');\n  const [answerOptions, setAnswerOptions] = useState([]);\n  const [input, setInput] = useState('');\n  const appDispatch = useContext(DispatchContext);\n\n  const initialState = {\n    title: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    body: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      checkCount: 0\n    },\n    difficulty: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answer: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answerOptions: {\n      value: [],\n      hasErrors: false,\n      message: ''\n    },\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'titleImmediately':\n        draft.title.hasErrors = false;\n        draft.title.value = action.value;\n        if (draft.title.value.length > 100) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Title is to long';\n        } else if (draft.title.value.length === 0) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question must have a title';\n        }\n        break;\n      case 'titleUniqueResults':\n        if (action.value) {\n          draft.title.hasErrors = true;\n          draft.title.isUnique = false;\n          draft.title.message = 'Question with that title already exist';\n        } else {\n          draft.title.isUnique = true;\n        }\n        break;\n      case 'bodyImmediately':\n        draft.body.hasErrors = false;\n        draft.body.value = action.value;\n        if (draft.body.value.length > 500) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to long';\n        }\n        break;\n      case 'bodyAfterDelay':\n        if (draft.body.value.length < 10) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to short';\n        }\n        break;\n      case 'difficultyImmediately':\n        draft.difficulty.hasErrors = false;\n        draft.difficulty.value = action.value;\n        if (!['easy', 'medium', 'hard'].includes(draft.difficulty.value)) {\n          draft.difficulty.hasErrors = true;\n          draft.difficulty.message = 'Define difficulty';\n        }\n        break;\n      case 'correctAnswerImmediately':\n        draft.answer.hasErrors = false;\n        draft.answer.value = action.value;\n        if (!draft.answer.value) {\n          draft.answer.hasErrors = true;\n          draft.answer.message = 'Define the correct answer';\n        }\n        break;\n      case 'answerOptionsImmediately':\n        draft.answerOptions.hasErrors = false;\n        draft.answerOptions.value = action.value;\n        if (draft.answerOptions.value.length === 0 && draft.submitCount > 0) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'Define the answer options';\n        } else if (draft.answerOptions.value.length > 3) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'To many answer options';\n        }\n        break;\n      case 'submitForm':\n        if (\n          !draft.title.hasErrors &&\n          draft.title.isUnique &&\n          !draft.body.hasErrors &&\n          !draft.difficulty.hasErrors &&\n          !draft.answer.hasErrors &&\n          !draft.answerOptions.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.body.value) {\n      const delay = setTimeout(() => dispatch({ type: 'bodyAfterDelay' }), 800);\n      return () => clearTimeout(delay);\n    }\n  }, [state.body.value]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'difficultyImmediately',\n      value: difficulty\n    });\n  }, [difficulty]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: answerOptions\n    });\n  }, [answerOptions]);\n\n  useEffect(() => {\n    if (state.title.value) {\n      const delay = setTimeout(() => {\n        const questionExist = async () => {\n          const response = await DoesQuestionExist(state.title.value);\n          dispatch({\n            type: 'titleUniqueResults',\n            value: response.data.message !== 'OK'\n          });\n        };\n        questionExist();\n      }, 1500);\n      return () => clearTimeout(delay);\n    }\n  }, [state.title.value]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const question = async () => {\n        const response = await createQuestion({\n          title: state.title.value,\n          question: state.body.value,\n          correctAnswer: state.answer.value,\n          answerOptions: state.answerOptions.value,\n          difficulty: state.difficulty.value\n        });\n\n        console.log('resp:', response);\n        if (response.status === 'success') {\n          appDispatch({\n            type: 'flashMessage',\n            value: 'You created a new question!'\n          });\n        }\n      };\n      question();\n      return;\n    }\n  }, [state.submitCount]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    // dispatch({ type: 'titleUniqueResults', value: state.title.value });\n    dispatch({ type: 'titleImmediately', value: state.title.value });\n    dispatch({ type: 'bodyImmediately', value: state.body.value });\n    dispatch({ type: 'bodyAfterDelay', value: state.body.value });\n    dispatch({ type: 'difficultyImmediately', value: state.difficulty.value });\n    dispatch({ type: 'correctAnswerImmediately', value: state.answer.value });\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: state.answerOptions.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  const handleAddAnswer = e => {\n    e.preventDefault();\n    setAnswerOptions(answerOptions.concat(input));\n    setInput('');\n    document.getElementById('answer-options').value = '';\n  };\n\n  return (\n    <Page title=\"Create New Question\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"question-title\" className=\"text-muted mb-1\">\n            <small>Title</small>\n          </label>\n          <input\n            onChange={e =>\n              dispatch({\n                type: 'titleImmediately',\n                value: e.target.value\n              })\n            }\n            autoFocus\n            name=\"title\"\n            id=\"question-title\"\n            className=\"form-control form-control-lg form-control-title\"\n            type=\"text\"\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n          <CSSTransition\n            in={state.title.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.title.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\n            <small>Question</small>\n          </label>\n          <textarea\n            onChange={e =>\n              dispatch({\n                type: 'bodyImmediately',\n                value: e.target.value\n              })\n            }\n            name=\"body\"\n            id=\"post-body\"\n            className=\"body-content tall-textarea form-control\"\n            type=\"text\"\n          ></textarea>\n          <CSSTransition\n            in={state.body.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.body.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Correct Answer</small>\n          </label>\n          <input\n            onChange={e =>\n              dispatch({\n                type: 'correctAnswerImmediately',\n                value: e.target.value\n              })\n            }\n            autoFocus\n            name=\"Correct Answer\"\n            id=\"correct-answer\"\n            className=\"form-control form-control-lg form-control-title\"\n            type=\"text\"\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n          <CSSTransition\n            in={state.answer.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.answer.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n          <small>Difficulty</small>\n        </label>\n        <DropDown selectItem={setDifficulty} />\n        <CSSTransition\n          in={state.difficulty.hasErrors}\n          timeout={330}\n          classNames=\"liveValidateMessage\"\n          unmountOnExit\n        >\n          <div className=\"alert alert-danger small liveValidateMessage\">\n            {state.difficulty.message}\n          </div>\n        </CSSTransition>\n        <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n          <small>Answer alternatives</small>\n        </label>\n        <DynamicList items={answerOptions} setItems={setAnswerOptions} />\n        <CSSTransition\n          in={state.answerOptions.hasErrors}\n          timeout={330}\n          classNames=\"liveValidateMessage\"\n          unmountOnExit\n        >\n          <div className=\"alert alert-danger small liveValidateMessage\">\n            {state.answerOptions.message}\n          </div>\n        </CSSTransition>\n        <div className=\"form-group\">\n          <label htmlFor=\"answer-options\" className=\"text-muted mb-1\">\n            <small>Add an answer option</small>\n          </label>\n          <div className=\"row\">\n            <div className=\"col mb-2\">\n              <input\n                onChange={e => setInput(e.target.value)}\n                autoFocus\n                name=\"Answer Option\"\n                id=\"answer-options\"\n                className=\"form-control form-control-lg form-control-title\"\n                type=\"text\"\n                placeholder=\"\"\n                autoComplete=\"off\"\n              />\n            </div>\n            <div className=\"col mb-2\">\n              <button\n                className=\"btn btn-success\"\n                disabled={input.length === 0}\n                onClick={handleAddAnswer}\n              >\n                +\n              </button>\n            </div>\n          </div>\n        </div>\n        <button className=\"btn btn-primary\">Create New Question</button>\n      </form>\n    </Page>\n  );\n}\n\nexport default withRouter(CreatePost);\n","import { DoesEmailExist, DoesUsernameExist, signUp } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useEffect, useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport Page from './page';\n\nfunction Signup() {\n  const appDispatch = useContext(DispatchContext);\n\n  const initialState = {\n    username: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    email: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    password: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    passwordConfirm: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'usernameImmediately':\n        draft.username.hasErrors = false;\n        draft.username.value = action.value;\n        if (draft.username.value.length > 30) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'Username to long';\n        }\n        if (\n          draft.username.value &&\n          !/^([a-zA-Z0-9]+)$/.test(draft.username.value)\n        ) {\n          draft.username.hasErrors = true;\n          draft.username.message =\n            'Username can only contain letters and numbers';\n        }\n        break;\n      case 'usernameAfterDelay':\n        if (draft.username.value.length < 3) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'needs more than 3 chars';\n        }\n        if (!draft.hasErrors && !action.noRequest) {\n          draft.username.checkCount++;\n        }\n        break;\n      case 'usernameUniqueResults':\n        if (action.value) {\n          draft.username.hasErrors = true;\n          draft.username.isUnique = false;\n          draft.username.message = 'user exist';\n        } else {\n          draft.username.isUnique = true;\n        }\n        break;\n      case 'emailImmediately':\n        draft.email.hasErrors = false;\n        draft.email.value = action.value;\n        break;\n      case 'emailAfterDelay':\n        if (!/^\\S+@\\S+$/.test(draft.email.value)) {\n          draft.email.hasErrors = true;\n          draft.email.message = 'Invalid email';\n        }\n        if (!draft.email.hasErrors && !action.noRequest) {\n          draft.email.checkCount++;\n        }\n        break;\n      case 'emailUniqueResults':\n        if (action.value) {\n          draft.email.hasErrors = true;\n          draft.email.isUnique = false;\n          draft.email.message = 'Email is already in use';\n        } else {\n          draft.email.isUnique = true;\n        }\n        break;\n      case 'passwordImmediately':\n        draft.password.hasErrors = false;\n        draft.password.value = action.value;\n        if (draft.password.value.length > 12) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'Password to long';\n        }\n        break;\n      case 'passwordAfterDelay':\n        if (draft.password.value.length < 6) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'password to short';\n        }\n        break;\n      case 'passwordConfirmImmediately':\n        draft.passwordConfirm.hasErrors = false;\n        draft.passwordConfirm.value = action.value;\n        if (draft.passwordConfirm.value.length > 12) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'Password to long';\n        }\n        break;\n      case 'passwordConfirmAfterDelay':\n        if (draft.passwordConfirm.value.length < 6) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'password to short';\n        } else if (draft.passwordConfirm.value !== draft.password.value) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'passwords do not match!';\n        }\n        break;\n      case 'submitForm':\n        if (\n          !draft.username.hasErrors &&\n          draft.username.isUnique &&\n          !draft.email.hasErrors &&\n          draft.email.isUnique &&\n          !draft.password.hasErrors &&\n          !draft.passwordConfirm.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.username.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'usernameAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.username.value]);\n\n  useEffect(() => {\n    if (state.email.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'emailAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.email.value]);\n\n  useEffect(() => {\n    if (state.password.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.password.value]);\n\n  useEffect(() => {\n    if (state.passwordConfirm.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordConfirmAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.passwordConfirm.value]);\n\n  useEffect(() => {\n    if (state.username.checkCount) {\n      // Send requests here\n      const usernameExist = async () => {\n        const response = await DoesUsernameExist(state.username.value);\n        console.log('hello');\n        dispatch({\n          type: 'usernameUniqueResults',\n          value: response.data.message !== 'OK'\n        });\n      };\n      usernameExist();\n      return;\n    }\n  }, [state.username.checkCount]);\n\n  useEffect(() => {\n    if (state.email.checkCount) {\n      // Send requests here\n      const emailExist = async () => {\n        const response = await DoesEmailExist(state.email.value);\n        dispatch({\n          type: 'emailUniqueResults',\n          value: response.data.message !== 'OK'\n        });\n      };\n      emailExist();\n      return;\n    }\n  }, [state.email.checkCount]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const signup = async () => {\n        const response = await signUp({\n          name: state.username.value,\n          email: state.email.value,\n          password: state.password.value,\n          passwordConfirm: state.passwordConfirm.value\n        });\n\n        if (response.status === 'success') {\n          appDispatch({\n            type: 'login',\n            value: {\n              username: response.data.user.name,\n              email: response.data.user.email,\n              id: response.data.user._id\n            }\n          });\n\n          appDispatch({\n            type: 'flashMessage',\n            value: 'Welcome to your new account!'\n          });\n        }\n      };\n      signup();\n      return;\n    }\n  }, [state.submitCount]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({ type: 'usernameImmediately', value: state.username.value });\n    dispatch({\n      type: 'usernameAfterDelay',\n      value: state.username.value,\n      noRequest: true\n    });\n    dispatch({ type: 'emailImmediately', value: state.email.value });\n    dispatch({\n      type: 'emailAfterDelay',\n      value: state.email.value,\n      noRequest: true\n    });\n    dispatch({ type: 'passwordImmediately', value: state.password.value });\n    dispatch({ type: 'passwordAfterDelay', value: state.password.value });\n    dispatch({\n      type: 'passwordConfirmImmediately',\n      value: state.passwordConfirm.value\n    });\n    dispatch({\n      type: 'passwordConfirmAfterDelay',\n      value: state.passwordConfirm.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  return (\n    <Page title=\"Sign up\" wide={false}>\n      <div className=\"row align-items-center\">\n        <div className=\"col-lg-7 py-3 py-md-5\">\n          <h2>Sign up!</h2>\n          <p className=\"lead text-muted\">\n            Create a user to create questions on your own and keep track of your\n            score!\n          </p>\n        </div>\n        <div className=\"col-lg-5 pl-lg-5 pb-3 py-lg-5\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username-register\" className=\"text-muted mb-1\">\n                <small>Username</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'usernameImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"username-register\"\n                name=\"username\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Pick a username\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.username.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.username.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email-register\" className=\"text-muted mb-1\">\n                <small>Email</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({ type: 'emailImmediately', value: e.target.value })\n                }\n                id=\"email-register\"\n                name=\"email\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"you@example.com\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.email.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.email.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password-register\" className=\"text-muted mb-1\">\n                <small>Password</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Create a password\"\n              />\n              <CSSTransition\n                in={state.password.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.password.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"password-register-confirm\"\n                className=\"text-muted mb-1\"\n              >\n                <small>Password Confirm</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordConfirmImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register-confirm\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n              />\n              <CSSTransition\n                in={state.passwordConfirm.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.passwordConfirm.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"py-3 mt-4 btn btn-lg btn-success btn-block\"\n            >\n              Sign up for QuizApp\n            </button>\n          </form>\n        </div>\n      </div>\n    </Page>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\n\nfunction FlashMessages(props) {\n  return (\n    <div className=\"floating-alerts\">\n      {props.messages.map((msg, index) => {\n        return (\n          <div\n            key={index}\n            className=\"alert alert-success text-center floating-alert shadow-sm\"\n          >\n            {msg}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FlashMessages;\n","import React, { useEffect } from 'react';\nimport Header from './components/page-components/header-component/header-component';\nimport Footer from './components/page-components/footer-component/footer-component';\nimport { useImmerReducer } from 'use-immer';\nimport Home from './pages/home';\nimport Profile from './pages/profile';\nimport Question from './pages/createQuestion';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport StateContext from './utils/StateContext';\nimport DispatchContext from './utils/DispatchContext';\nimport Signup from './pages/signup';\nimport FlashMessages from './utils/FlashMessage';\n\nconst App = () => {\n  const initialState = {\n    loggedIn: Boolean(localStorage.getItem('quizappUsername')),\n    flashMessages: [],\n    user: {\n      token: localStorage.getItem('quizappToken'),\n      username: localStorage.getItem('quizappUsername'),\n      email: localStorage.getItem('quizappEmail'),\n      id: localStorage.getItem('quizappId'),\n      avatar: localStorage.getItem('quizappAvatar')\n    }\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'login':\n        draft.user.username = action.value.username;\n        draft.user.email = action.value.email;\n        draft.user.id = action.value.id;\n        draft.loggedIn = true;\n        break;\n      case 'logout':\n        draft.loggedIn = false;\n        break;\n      case 'flashMessage':\n        draft.flashMessages.push(action.value);\n        break;\n      default:\n        console.log('nutin');\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.loggedIn) {\n      localStorage.setItem('quizappUsername', state.user.username);\n      localStorage.setItem('quizappId', state.user.id);\n      localStorage.setItem('quizappEmail', state.user.email);\n    } else {\n      localStorage.removeItem('quizappUsername');\n      localStorage.removeItem('quizappId');\n      localStorage.removeItem('quizappEmail');\n    }\n  }, [state.loggedIn]);\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        <Router>\n          <FlashMessages messages={state.flashMessages} />\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/create-question\">\n              <Question />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Signup />\n            </Route>\n          </Switch>\n          <Footer />\n        </Router>\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/js/bootstrap.js'; // skip this if you do not use bootstrap modals\n// import $ from 'jquery'; // skip this if you do not use bootstrap modals\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}