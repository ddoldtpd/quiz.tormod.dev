{"version":3,"sources":["overview.svg","utils/DispatchContext.js","utils/StateContext.js","utils/requests.js","components/page-components/login-component/login-component.js","components/page-components/logout-component/logout-component.js","components/page-components/header-component/header-component.js","components/page-components/footer-component/footer-component.js","components/input-components/answer-button-component/toggle-button.js","components/input-components/answer-button-component/answer-button-component.js","components/page-components/question-component/question-component.js","pages/home.js","components/loadingdots-component/LoadingDotsIcon.js","components/page-components/listQuestion-component/listQuestion.js","components/page-components/profileQuestion-component/profileQuestion.js","pages/container.js","pages/page.js","components/page-components/profileAnswer-component/profileAnswer.js","pages/profile.js","components/dropdown-component/dropdown-component.js","components/page-components/list-component/list-component.js","pages/createQuestion.js","pages/signup.js","utils/FlashMessage.js","pages/notFound.js","pages/editQuestion.js","pages/terms.js","pages/about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","DispatchContext","createContext","StateContext","axios","defaults","withCredentials","console","log","process","baseURL","getQuestion","id","a","get","response","data","DoesEmailExist","email","DoesUsernameExist","username","DoesQuestionExist","title","post","headers","getMyQuestions","createQuestion","question","correctAnswer","answerOptions","difficulty","editQuestion","sendObject","method","url","deleteQuestion","signUp","name","password","passwordConfirm","login","status","getMe","getRandomQuestion","answerQuestion","answer","Id","token","config","Authorization","bodyParameters","LoginComponent","props","appDispatch","useContext","useState","setUsername","setPassword","handleSubmit","e","preventDefault","type","value","user","_id","onSubmit","className","onChange","target","placeholder","autoComplete","to","LogOutComponent","handleClick","onClick","Header","appState","loggedIn","Footer","href","Unchecked","height","width","border","Checked","background","ToggleButton","checked","style","Wrapper","diplay","flexDirection","AnswerButtonComponent","options","selected","setSelected","handleOnClick","map","text","key","AnswerBox","margin","TitleBox","textAlign","fontSize","QuestionBox","QuestionWrapper","display","QuestionComponent","setQuestion","useEffect","randomQuestion","Home","LoadingDotsIcon","QuestionList","index","questions","setQuestions","timesAnswered","timesCorrectAnswered","useImmerReducer","draft","action","deleteRequest","submitCount","state","dispatch","error","removeQuestion","new_questions","splice","ProfileQuestion","isLoading","setIsLoading","getQuestions","length","el","idx","Container","wide","children","Page","document","window","scrollTo","ProfileAnswer","follower","Profile","NaN","userScore","setuserScore","info","score","getme","isNaN","exact","path","DropDown","selectItem","DynamicList","items","setItems","disabled","values","findIndex","handleRemoveFields","withRouter","setDifficulty","setAnswerOptions","input","setInput","hasErrors","message","isUnique","body","includes","checkCount","delay","setTimeout","clearTimeout","questionExist","htmlFor","autoFocus","CSSTransition","in","timeout","classNames","unmountOnExit","concat","getElementById","Signup","test","noRequest","usernameExist","emailExist","signup","FlashMessages","messages","msg","NotFound","useParams","isChanged","initialState","questionFound","JSON","stringify","unqiue","Terms","About","src","require","alt","App","Boolean","localStorage","getItem","flashMessages","avatar","push","setItem","removeItem","Provider","FlashMessage","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.610faf2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/overview.a05ee494.svg\";","import { createContext } from 'react';\n\nconst DispatchContext = createContext();\n\nexport default DispatchContext;\n","import { createContext } from 'react';\n\nconst StateContext = createContext();\n\nexport default StateContext;\n","import axios from 'axios';\n// import { catchAsync } from './catchAsync';\n\naxios.defaults.withCredentials = false;\nconsole.log('ENV: ', process.env.REACT_APP_ENV);\n\nif (process.env.REACT_APP_ENV === 'production') {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL + process.env.REACT_APP_URLEXTENSION || '';\n} else {\n  axios.defaults.baseURL =\n    process.env.REACT_APP_BACKENDURL_DEV +\n      process.env.REACT_APP_URLEXTENSION_DEV || '';\n}\n\nexport const getQuestions = async () => {\n  try {\n    const response = await axios.get('/questions');\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getQuestion = async id => {\n  try {\n    const response = await axios.get(`/questions/${id}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesEmailExist = async email => {\n  try {\n    const response = await axios.get(`/users/does-email-exist/${email}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesUsernameExist = async username => {\n  try {\n    const response = await axios.get(`/users/does-username-exist/${username}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const DoesQuestionExist = async title => {\n  try {\n    const response = await axios.post(\n      '/questions/does-question-exist',\n      {\n        title\n      },\n      {\n        headers: {\n          'Access-Control-Allow-Origin': '*', //process.env.REACT_APP_BACKENDURL,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMyQuestions = async () => {\n  try {\n    const response = await axios.get('/users/me/questions', {\n      withCredentials: true,\n      'Content-Type': 'application/json'\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createQuestion = async (\n  title,\n  question,\n  correctAnswer,\n  answerOptions,\n  difficulty\n) => {\n  try {\n    console.log(\n      'Sending',\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty\n    );\n\n    const response = await axios.post(\n      '/questions',\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty,\n      {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': '*', //process.env.REACT_APP_BACKENDURL,\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    console.log('response:', response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const editQuestion = async sendObject => {\n  try {\n    const title = sendObject.title;\n    const question = sendObject.question;\n    const correctAnswer = sendObject.correctAnswer;\n    const difficulty = sendObject.difficulty;\n    const answerOptions = sendObject.answerOptions;\n    console.log(\n      'Sending',\n      sendObject.id,\n      title,\n      question,\n      correctAnswer,\n      answerOptions,\n      difficulty\n    );\n\n    const response = await axios({\n      method: 'PATCH',\n      url: `/users/me/questions/${sendObject.id}`,\n      data: {\n        title,\n        question,\n        correctAnswer,\n        answerOptions,\n        difficulty\n      },\n      withCredentials: true,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    });\n\n    console.log('response:', response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const deleteQuestion = async id => {\n  try {\n    console.log('Deleting', id);\n\n    const response = await axios({\n      method: 'DELETE',\n      url: `/users/me/questions/${id}`,\n      withCredentials: true,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    });\n\n    console.log('response:', response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const signUp = async (name, email, password, passwordConfirm) => {\n  try {\n    console.log('signup');\n    const response = await axios.post(\n      '/users/signup',\n      name,\n      email,\n      password,\n      passwordConfirm\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const login = async (email, password) => {\n  let response;\n  try {\n    response = await axios.post(\n      '/users/login',\n      {\n        email,\n        password\n      },\n      {\n        withCredentials: true,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const getMe = async () => {\n  let response;\n  try {\n    response = await axios.get('/users/me', {\n      withCredentials: true,\n      headers: {\n        'Access-Control-Allow-Origin': '*',\n        'Content-Type': 'application/json'\n      }\n    });\n\n    return response.data;\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const getRandomQuestion = async () => {\n  let response;\n  try {\n    response = await axios.get('/questions/random');\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n\nexport const answerQuestion = async (answer, Id, token) => {\n  const config = {\n    headers: { Authorization: `Bearer ${token}` }\n  };\n  const bodyParameters = {\n    answer\n  };\n  let response;\n  try {\n    response = await axios.post(`/questions/${Id}`, bodyParameters, config);\n    return response.data;\n    // return response.\n  } catch (error) {\n    console.log('API not responding');\n    console.log(error);\n    return { status: 'failed' };\n  }\n};\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\n\nconst LoginComponent = props => {\n  const appDispatch = useContext(DispatchContext);\n\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await login(username, password);\n    if (response.status === 'success') {\n      appDispatch({\n        type: 'login',\n        value: {\n          username: response.data.user.name,\n          email: response.data.user.email,\n          id: response.data.user._id\n        }\n      });\n      appDispatch({ type: 'flashMessage', value: 'Successfully logged in!' });\n      console.log('logged in');\n    } else {\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"mb-0 pt-2 pt-md-0\">\n      <div className=\"row align-items-center\">\n        <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n          <input\n            type=\"text\"\n            onChange={e => setUsername(e.target.value)}\n            name=\"Username\"\n            value={username}\n            className=\"form-control form-control-sm input-dark\"\n            placeholder=\"Username\"\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n          <input\n            type=\"password\"\n            name=\"password\"\n            onChange={e => setPassword(e.target.value)}\n            value={password}\n            className=\"form-control form-control-sm input-dark\"\n            placeholder=\"Password\"\n          />\n        </div>\n        <div className=\"col-md-auto mr-0 pr-md-0 mb-3 mb-md-0\">\n          <button className=\"btn btn-success btn-sm\">Sign In</button>\n        </div>\n        <div className=\"col-md-auto\">\n          <Link className=\"btn btn-secondary btn-sm\" to=\"/sign-up\">\n            Sign Up\n          </Link>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginComponent;\n\n// <form onSubmit={handleSubmit} className=\"mb-0 pt-2 pt-md-0\">\n//   <div className=\"row align-items-center\">\n//     <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n//       <input\n//         onChange={e => setUsername(e.target.value)}\n//         name=\"username\"\n//         className=\"form-control form-control-sm input-dark\"\n//         type=\"text\"\n//         placeholder=\"Username\"\n//         autoComplete=\"off\"\n//       />\n//     </div>\n//     <div className=\"col-md mr-0 pr-md-0 mb-3 mb-md-0\">\n//       <input\n//         onChange={e => setPassword(e.target.value)}\n//         name=\"password\"\n//         className=\"form-control form-control-sm input-dark\"\n//         type=\"password\"\n//         placeholder=\"Password\"\n//       />\n//     </div>\n//     <div className=\"col-md-auto\">\n//       <button className=\"btn btn-success btn-sm\">Sign In</button>\n//     </div>\n//   </div>\n// </form>;\n\n// Fail\n// {\n//   \"status\": \"fail\"\n// }\n\n// On success\n// {\n//   \"status\": \"success\",\n//   \"token\": {},\n//   \"data\": {\n//       \"user\": {\n//           \"userScore\": {\n//               \"score\": 0,\n//               \"answeredQuestions\": []\n//           },\n//           \"role\": \"public\",\n//           \"_id\": \"5f36718b971e9f002996f837\",\n//           \"name\": \"kerstin\",\n//           \"email\": \"kerstin@elvegaard.com\",\n//           \"__v\": 0\n//       }\n//   }\n// }\n","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { login } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\n\nconst LogOutComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n\n  const handleClick = async e => {\n    e.preventDefault();\n    appDispatch({ type: 'logout' });\n    appDispatch({ type: 'flashMessage', value: 'Successfully logged out!' });\n  };\n\n  return (\n    <div className=\"flex-row my-3 my-md-0\">\n      <Link className=\"btn btn-sm btn-success mr-2\" to=\"/create-question\">\n        Create Question\n      </Link>{' '}\n      <Link className=\"btn btn-sm btn-success mr-2\" to=\"/profile\">\n        Profile\n      </Link>{' '}\n      <button onClick={handleClick} className=\"btn btn-sm btn-secondary\">\n        Sign out\n      </button>\n    </div>\n  );\n};\n\nexport default LogOutComponent;\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../header-component/header.css';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport LoginComponent from '../login-component/login-component';\nimport LogOutComponent from '../logout-component/logout-component';\n\nconst Header = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n\n  return (\n    <header className=\"header-bar bg-primary mb-3\">\n      <div className=\"container d-flex flex-column flex-md-row align-items-center p-3\">\n        <h4 className=\"my-0 mr-md-auto font-weight-normal\">\n          <Link to=\"/\" className=\"text-white\">\n            QuizApp\n          </Link>\n        </h4>\n        {appState.loggedIn ? <LogOutComponent /> : <LoginComponent />}\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer() {\n  return (\n    <footer className=\"border-top text-center small text-muted py-3 mt-3\">\n      <p>\n        <Link to=\"/\" className=\"mx-1\">\n          Home\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/about-QuizApp\">\n          About QuizApp\n        </Link>{' '}\n        |\n        <Link className=\"mx-1\" to=\"/terms\">\n          Terms\n        </Link>\n      </p>\n      <p className=\"m-0\">\n        Copyright &copy; 2020{' '}\n        <a href=\"/\" className=\"text-muted\">\n          Quiz App\n        </a>\n        . All rights reserved.\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import * as React from 'react';\n\nconst ToggleButton = props => {\n  const { checked, onClick } = props;\n  return <div onClick={onClick} style={checked ? Checked : Unchecked} />;\n};\n\nconst Unchecked = {\n  height: '100%',\n  width: '100%',\n  border: '1px'\n};\nconst Checked = {\n  height: '100%',\n  width: '100%',\n  border: '1px',\n  background: 'green'\n};\n\nexport default ToggleButton;\n","import React, { useContext, useEffect, useState } from 'react';\nimport ToggleButton from './toggle-button';\n\nconst AnswerButtonComponent = props => {\n  const { options, onClick } = props;\n  const [selected, setSelected] = useState('');\n\n  const handleOnClick = value => {\n    onClick && onClick(value);\n    setSelected(value);\n  };\n\n  const renderButtons = () => {\n    return options.map(text => {\n      return (\n        <ToggleButton\n          key={text}\n          onClick={() => handleOnClick(text)}\n          checked={selected === text}\n        />\n      );\n    });\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>{renderButtons()}</div>\n    </>\n  );\n};\n\nconst Wrapper = {\n  diplay: 'flex',\n  width: '120px',\n  height: '50px',\n  // flexGrow: '1',\n  flexDirection: 'row'\n};\nexport default AnswerButtonComponent;\n\n// import * as React from 'react';\n// import { ToggleButton } from 'react-native-paper';\n\n// const ToggleButtonExample = () => {\n//   const [status, setStatus] = React.useState('checked');\n\n//   const onButtonToggle = value => {\n//     setStatus(status === 'checked' ? 'unchecked' : 'checked');\n//   };\n\n//   return (\n//     <ToggleButton\n//       icon=\"bluetooth\"\n//       value=\"bluetooth\"\n//       status={status}\n//       onPress={onButtonToggle}\n//     />\n//   );\n// };\n\n// export default ToggleButtonExample;\n","import React, { useContext, useEffect, useState } from 'react';\nimport DispatchContext from '../../../utils/DispatchContext';\nimport StateContext from '../../../utils/StateContext';\nimport { getRandomQuestion, answerQuestion } from '../../../utils/requests';\nimport AnswerButtonComponent from '../../input-components/answer-button-component/answer-button-component';\n\nconst QuestionComponent = () => {\n  const appDispatch = useContext(DispatchContext);\n  const appState = useContext(StateContext);\n  const [question, setQuestion] = useState('');\n\n  useEffect(() => {\n    const randomQuestion = async () => {\n      const response = await getRandomQuestion();\n      if (response) {\n        setQuestion(response.data.data[0]);\n      } else {\n      }\n    };\n    randomQuestion();\n  }, []);\n\n  const renderAnswerButtons = () => {\n    // return (\n    //   question.answerOptions && (\n    //     <AnswerButtonComonent options={question.answerOptions} />\n    //   )\n    // question.answerOptions.map((element, index) => {\n    //   return <button key={index}>{element}</button>;\n    // })\n    // );\n  };\n\n  const handleSubmit = async value => {\n    console.log(value);\n    console.log(question._id);\n    console.log(appState.user.token);\n    const response = await answerQuestion(\n      value,\n      question._id,\n      appState.user.token\n    );\n    console.log(response);\n  };\n\n  return (\n    <>\n      <div style={Wrapper}>\n        <div style={QuestionWrapper}>\n          <div style={TitleBox}>{question.title}</div>\n          <div style={QuestionBox}>{question.question}</div>\n          <div style={AnswerBox}>\n            {question.answerOptions && (\n              <AnswerButtonComponent\n                onClick={handleSubmit}\n                options={question.answerOptions}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nconst SubmitBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%',\n  background: 'black'\n};\n\nconst AnswerBox = {\n  margin: '10px auto auto auto',\n  height: '20%',\n  width: '80%'\n};\n\nconst TitleBox = {\n  margin: '10px auto auto auto',\n  textAlign: 'center',\n  fontSize: '3rem',\n  background: 'red'\n};\n\nconst QuestionBox = {\n  margin: '20px auto auto auto',\n  height: '60%',\n  width: '80%',\n  background: 'blue'\n};\nconst QuestionWrapper = {\n  margin: '50px auto 50px auto',\n  height: '500px',\n  width: '800px',\n  background: 'grey'\n};\nconst Wrapper = {\n  display: 'flex',\n  height: '100%',\n  width: '100%'\n};\n\nexport default QuestionComponent;\n\n// {\n//   \"status\": \"success\",\n//   \"data\": {\n//       \"data\": [\n//           {\n//               \"_id\": \"5f301c21e33fb68b754009eb\",\n//               \"answerOptions\": [\n//                   \"This is a wrong answer\",\n//                   \"this is another wrong answer!\",\n//                   \"this is a third wrong answer!\"\n//               ],\n//               \"timesAnswered\": 0,\n//               \"timesCorrectAnswered\": 0,\n//               \"title\": \"YMCA\",\n//               \"question\": \"When referring to the worldwide youth organization based in Geneva, Switzerland, what does the acronym YMCA stand for?\",\n//               \"correctAnswer\": \"Young Men’s Christian Association\",\n//               \"difficulty\": \"hard\",\n//               \"author\": \"5c8a1d5b0190b214360dc057\",\n//               \"__v\": 0\n//           }\n//       ]\n//   }\n// }\n","import React, { useState } from 'react';\nimport QuestionComponent from '../components/page-components/question-component/question-component';\nimport { getQuestions } from '../utils/requests';\n\nconst Home = () => {\n  const [questions, setQuestions] = useState([]);\n\n  const handleClick = async () => {\n    const resp = await getQuestions();\n    console.log(resp.data.data);\n    setQuestions(resp.data.data);\n  };\n\n  return (\n    <div>\n      <QuestionComponent></QuestionComponent>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport './loadingdots.css';\n\nfunction LoadingDotsIcon() {\n  return (\n    <div className=\"dots-loading\">\n      <div></div>\n    </div>\n  );\n}\n\nexport default LoadingDotsIcon;\n","import React, { useEffect, useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport { Link } from 'react-router-dom';\nimport { deleteQuestion } from '../../../utils/requests';\nimport DispatchContext from '../../../utils/DispatchContext';\n\nfunction QuestionList(props) {\n  const index = props.index;\n  const questions = props.questions;\n  const setQuestions = props.setQuestions;\n  const appDispatch = useContext(DispatchContext);\n  const question = props.question;\n  const difficulty = question.difficulty;\n  const timesAnswered = question.timesAnswered;\n  const timesCorrectAnswered = question.timesCorrectAnswered;\n\n  const initialState = {\n    deleteRequest: false,\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'deleteRequest':\n        draft.deleteRequest = true;\n        break;\n      case 'CancelRequest':\n        draft.deleteRequest = false;\n        break;\n      case 'Delete':\n        if (draft.deleteRequest) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.submitCount > 0) {\n      const removeQuestion = async () => {\n        const response = await deleteQuestion(question._id);\n        try {\n          console.log('resp:', response);\n          if (response.status === 'success') {\n            appDispatch({\n              type: 'flashMessage',\n              value: 'You have deleted one of your questions!'\n            });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n        return;\n      };\n      removeQuestion();\n    }\n  }, [state.submitCount]);\n\n  const verifyDelete = e => {\n    e.preventDefault();\n    let new_questions = questions;\n    new_questions.splice(index, 1);\n    setQuestions(new_questions);\n    dispatch({ type: 'Delete', value: true });\n    console.log('index:', index);\n    console.log('qs:', questions);\n  };\n\n  const requestDelete = e => {\n    e.preventDefault();\n    dispatch({ type: 'deleteRequest', value: true });\n  };\n\n  const cancelDelete = e => {\n    e.preventDefault();\n    dispatch({ type: 'CancelRequest', value: false });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-md-12 mb-3\">\n        <div className=\"row d-flex align-items-center\">\n          <Link\n            onClick={props.onClick}\n            to={`/question/${question._id}/edit`}\n            className=\"list-group-item list-group-item-action col mb-2\"\n          >\n            <strong>{question.title}</strong> &nbsp;&nbsp;&nbsp;&nbsp;\n            <span className=\"text-muted small mr-10\">\n              {\n                <>\n                  Difficulty: {difficulty}, Answered {timesAnswered} times\n                </>\n              }{' '}\n              and Correctly answered {timesCorrectAnswered}\n              {''}\n            </span>\n          </Link>\n          <div className=\"col mb-2 align-middle\">\n            {state.deleteRequest && (\n              <div className=\"row d-flex align-items-center\">\n                <div className=\"ml-2\">\n                  <button className=\"btn btn-success\" onClick={verifyDelete}>\n                    &#10003;\n                  </button>\n                </div>\n                <div className=\"ml-2\">\n                  <button className=\"btn btn-danger\" onClick={cancelDelete}>\n                    X\n                  </button>\n                </div>\n              </div>\n            )}\n            {!state.deleteRequest && (\n              <button className=\"btn btn-danger \" onClick={requestDelete}>\n                X\n              </button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionList;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport LoadingDotsIcon from '../../loadingdots-component/LoadingDotsIcon';\nimport StateContext from '../../../utils/StateContext';\nimport QuestionList from '../listQuestion-component/listQuestion';\nimport { getMyQuestions } from '../../../utils/requests';\n\nfunction ProfileQuestion(props) {\n  const appState = useContext(StateContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [question, setQuestions] = useState([]);\n\n  useEffect(() => {\n    const getQuestions = async () => {\n      const response = await getMyQuestions();\n      if (response) {\n        const questions = response.data.data;\n        console.log('Questions', questions);\n        setQuestions(questions);\n      } else {\n        console.log('no questions for this user');\n      }\n      setIsLoading(false);\n    };\n    getQuestions();\n  }, []);\n\n  if (isLoading) return <LoadingDotsIcon />;\n\n  return (\n    <div className=\"list-group\">\n      {question.length > 0 &&\n        question.map((el, idx) => {\n          return (\n            <QuestionList\n              question={el}\n              questions={question}\n              key={el._id}\n              index={idx}\n              setQuestions={setQuestions}\n            />\n          );\n        })}\n      {question.length === 0 && (\n        <p className=\"lead text-muted text-center\">\n          You haven&rsquo;t created any question yet;{' '}\n          <Link to=\"/create-question\">create one now!</Link>\n        </p>\n      )}\n      {question.length === 0 && (\n        <p className=\"lead text-muted text-center\">No questions created yet.</p>\n      )}\n    </div>\n  );\n}\n\nexport default ProfileQuestion;\n","import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div\n      className={\n        'container py-md-5 mb-5' + (props.wide ? '' : 'container--narrow')\n      }\n    >\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React, { useEffect } from 'react';\nimport Container from './container';\n\nfunction Page(props) {\n  useEffect(() => {\n    document.title = `${props.title} | QuizApp`;\n    window.scrollTo(0, 0);\n  }, [props.title]);\n\n  return <Container wide={props.wide}>{props.children}</Container>;\n}\n\nexport default Page;\n","import LoadingDotsIcon from '../../loadingdots-component/LoadingDotsIcon';\nimport React, { useEffect, useState, useContext } from 'react';\nimport StateContext from '../../../utils/StateContext';\nimport { Link } from 'react-router-dom';\n\nfunction ProfileAnswer(props) {\n  const appState = useContext(StateContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    console.log('get answered questions');\n    setIsLoading(false);\n  }, []);\n\n  if (isLoading) return <LoadingDotsIcon />;\n\n  return (\n    <div className=\"list-group\">\n      {questions.length > 0 &&\n        questions.map((follower, index) => {\n          return (\n            <Link\n              key={index}\n              to={`/profile/answered-questions`}\n              className=\"list-group-item list-group-item-action\"\n            >\n              <div>hello</div>\n            </Link>\n          );\n        })}\n      {questions.length === 0 && (\n        <p className=\"lead text-muted text-center\">\n          You haven&rsquo;t answered any questions yet.\n        </p>\n      )}\n    </div>\n  );\n}\n\nexport default ProfileAnswer;\n","import ProfileQuestion from '../components/page-components/profileQuestion-component/profileQuestion';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport React, { useEffect, useState, useContext } from 'react';\nimport { getMe } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport StateContext from '../utils/StateContext';\nimport Page from './page';\nimport ProfileAnswer from '../components/page-components/profileAnswer-component/profileAnswer';\nimport LoadingDotsIcon from '../components/loadingdots-component/LoadingDotsIcon';\n\nconst Profile = () => {\n  const appState = useContext(StateContext);\n  const [isLoading, setIsLoading] = useState(true);\n  const [userScore, setuserScore] = useState(NaN);\n\n  useEffect(() => {\n    const getme = async () => {\n      const response = await getMe();\n      if (response.status === 'success') {\n        const info = response.data.data;\n        setuserScore(info.userScore.score);\n      } else {\n        console.log('no info for this user');\n        setuserScore(0);\n      }\n      setIsLoading(false);\n    };\n    getme();\n  }, []);\n\n  return (\n    <Page title=\"Profile Screen\">\n      <div className=\"row d-flex align-items-center\">\n        <h2>{appState.user.username}</h2>&nbsp;&nbsp;&nbsp;&nbsp;\n        {/* <div>Score: {userScore === NaN }</div> */}\n        <div>Score:</div>&nbsp;\n        <div>{isNaN(userScore) && <LoadingDotsIcon />}</div>\n        <div>{!isNaN(userScore) && userScore}</div>\n      </div>\n      <div className=\"profile-nav nav nav-tabs pt-2 mb-4\">\n        <NavLink exact to=\"/profile\" className=\"nav-item nav-link\">\n          My Questions: {/* {state.profileData.counts.postCount} */}\n        </NavLink>\n        <NavLink to=\"/profile/answered-questions\" className=\"nav-item nav-link\">\n          Answered Questions: {/* state.profileData.counts.followerCount */}\n        </NavLink>\n      </div>\n\n      <Switch>\n        <Route exact path=\"/profile\">\n          <ProfileQuestion />\n        </Route>\n        <Route path=\"/profile/answered-questions\">\n          <ProfileAnswer />\n        </Route>\n      </Switch>\n    </Page>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\n\nfunction DropDown(props) {\n  const selectItem = props.selectItem;\n\n  const handleChange = e => {\n    e.preventDefault();\n    selectItem(e.target.value);\n  };\n\n  return (\n    <div className=\"row mb-3\">\n      <div className=\"col-md-4\">\n        <select\n          // value={optionsState}\n          onChange={handleChange}\n          className=\"custom-select my-select\"\n        >\n          <option value=\"easy\">Easy</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"hard\">Hard</option>\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default DropDown;\n","import React, { useState } from 'react';\n\nfunction DynamicList(props) {\n  const items = props.items;\n  const setItems = props.setItems;\n\n  const handleRemoveFields = (e, id) => {\n    e.preventDefault();\n    const values = [...items];\n    values.splice(\n      values.findIndex(value => value.id === id),\n      1\n    );\n    setItems(values);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"col-md-12 mb-3\">\n        {items.map((el, idx) => (\n          <div className=\"row\" key={idx}>\n            <div className=\"col mb-2\">{el}</div>\n            <div className=\"col mb-2\">\n              <button\n                className=\"btn btn-danger\"\n                disabled={items.length === 0}\n                onClick={e => handleRemoveFields(e, idx)}\n              >\n                X\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DynamicList;\n\n{\n  /* <div className=\"form-group\">\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Correct Answer</small>\n          </label>\n// var App = React.createClass({ */\n}\n//   getInitialState : function() {\n//     return (\n//       {\n//         fruits : {\n//           'fruit-1' : 'orange',\n//           'fruit-2' : 'apple'\n//         }\n//       }\n//      )\n//     },\n//     addFruit : function(fruit) {\n//      //create a unike key for each new fruit item\n//      var timestamp = (new Date()).getTime();\n//      // update the state object\n//      this.state.fruits['fruit-' + timestamp ] = fruit;\n//      // set the state\n//      this.setState({ fruits : this.state.fruits });\n//     },\n//     render: function() {\n//       return (\n//         <div className=\"component-wrapper\">\n//           <FruitList fruits={this.state.fruits} />\n//           <AddFruitForm addFruit={this.addFruit} />\n//         </div>\n//       );\n//      }\n//     });\n\n//     var FruitList = React.createClass({\n//       render : function() {\n//         return (\n//           <div className=\"container\">\n//             <ul className=\"list-group text-center\">\n//               {\n//                 Object.keys(this.props.fruits).map(function(key) {\n//                   return <li className=\"list-group-item list-group-item-info\">{this.props.fruits[key]}</li>\n//                 }.bind(this))\n//               }\n//             </ul>\n//            </div>\n//          );\n//        }\n//      });\n\n//     var AddFruitForm = React.createClass({\n//       createFruit : function(e) {\n//         e.preventDefault();\n//         //get the fruit object name from the form\n//         var fruit = this.refs.fruitName.value;\n//         //if we have a value\n//         //call the addFruit method of the App component\n//         //to change the state of the fruit list by adding an new item\n//         if(typeof fruit === 'string' && fruit.length > 0) {\n//           this.props.addFruit(fruit);\n//           //reset the form\n//           this.refs.fruitForm.reset();\n//         }\n//        },\n//        render : function() {\n//         return(\n//           <form className=\"form-inline\" ref=\"fruitForm\" onSubmit={this.createFruit}>\n//           <div className=\"form-group\">\n//             <label for=\"fruitItem\">\n//               Fruit Name\n//               <input type=\"text\" id=\"fruitItem\" placeholder=\"e.x.lemmon\" ref=\"fruitName\" className=\"form-control\" />\n//             </label>\n//           </div>\n//           <button type=\"submit\" className=\"btn btn-primary\">Add Fruit</button>\n//          </form>\n//         )\n//        }\n//       });\n\n// <div id=\"wrapper\">\n//   <div class=\"container\">\n//     <div class=\"row\">\n//       <article class=\"col-md-12\">\n//         <h1 class=\"text-center\">Simple List in React</h1>\n//         <h2 class=\"text-center\">Adding a dynamically generated list item</h2>\n//         <div id=\"app\" class=\"app-container\">\n\n//         </div>\n//       </article>\n//     </div>\n//   </div>\n// </div>\n","import React, { useEffect, useState, useContext } from 'react';\nimport { createQuestion, DoesQuestionExist } from '../utils/requests';\nimport Page from '../pages/page';\nimport { CSSTransition } from 'react-transition-group';\nimport { useImmerReducer } from 'use-immer';\nimport { withRouter } from 'react-router-dom';\nimport DispatchContext from '../utils/DispatchContext';\nimport DropDown from '../components/dropdown-component/dropdown-component';\nimport DynamicList from '../components/page-components/list-component/list-component';\n\nfunction CreatePost(props) {\n  const [difficulty, setDifficulty] = useState('easy');\n  const [answerOptions, setAnswerOptions] = useState([]);\n  const [input, setInput] = useState('');\n  const appDispatch = useContext(DispatchContext);\n\n  const initialState = {\n    title: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    body: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      checkCount: 0\n    },\n    difficulty: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answer: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answerOptions: {\n      value: [],\n      hasErrors: false,\n      message: ''\n    },\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'titleImmediately':\n        draft.title.hasErrors = false;\n        draft.title.value = action.value;\n        if (draft.title.value.length > 100) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Title is to long';\n        } else if (draft.title.value.length <= 10) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question title is to short';\n        } else if (draft.title.value.length === 0) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question must have a title';\n        }\n        break;\n      case 'titleUniqueResults':\n        if (action.value) {\n          draft.title.hasErrors = true;\n          draft.title.isUnique = false;\n          draft.title.message = 'Question with that title already exist';\n        } else {\n          draft.title.isUnique = true;\n        }\n        break;\n      case 'bodyImmediately':\n        draft.body.hasErrors = false;\n        draft.body.value = action.value;\n        if (draft.body.value.length > 500) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to long';\n        }\n        break;\n      case 'bodyAfterDelay':\n        if (draft.body.value.length < 10) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to short';\n        }\n        break;\n      case 'difficultyImmediately':\n        draft.difficulty.hasErrors = false;\n        draft.difficulty.value = action.value;\n        if (!['easy', 'medium', 'hard'].includes(draft.difficulty.value)) {\n          draft.difficulty.hasErrors = true;\n          draft.difficulty.message = 'Define difficulty';\n        }\n        break;\n      case 'correctAnswerImmediately':\n        draft.answer.hasErrors = false;\n        draft.answer.value = action.value;\n        if (!draft.answer.value) {\n          draft.answer.hasErrors = true;\n          draft.answer.message = 'Define the correct answer';\n        }\n        break;\n      case 'answerOptionsImmediately':\n        draft.answerOptions.hasErrors = false;\n        draft.answerOptions.value = action.value;\n        if (draft.answerOptions.value.length === 0 && draft.submitCount > 0) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'Define the answer options';\n        } else if (draft.answerOptions.value.length > 3) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'To many answer options';\n        }\n        break;\n      case 'submitForm':\n        if (\n          !draft.title.hasErrors &&\n          draft.title.isUnique &&\n          !draft.body.hasErrors &&\n          !draft.difficulty.hasErrors &&\n          !draft.answer.hasErrors &&\n          !draft.answerOptions.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.body.value) {\n      const delay = setTimeout(() => dispatch({ type: 'bodyAfterDelay' }), 800);\n      return () => clearTimeout(delay);\n    }\n  }, [state.body.value]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'difficultyImmediately',\n      value: difficulty\n    });\n  }, [difficulty]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: answerOptions\n    });\n  }, [answerOptions]);\n\n  useEffect(() => {\n    if (state.title.value) {\n      const delay = setTimeout(() => {\n        const questionExist = async () => {\n          const response = await DoesQuestionExist(state.title.value);\n          dispatch({\n            type: 'titleUniqueResults',\n            value: response.data.message !== 'OK'\n          });\n        };\n        questionExist();\n      }, 1500);\n      return () => clearTimeout(delay);\n    }\n  }, [state.title.value]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const question = async () => {\n        const response = await createQuestion({\n          title: state.title.value,\n          question: state.body.value,\n          correctAnswer: state.answer.value,\n          answerOptions: state.answerOptions.value,\n          difficulty: state.difficulty.value\n        });\n\n        console.log('resp:', response);\n        if (response.status === 'success') {\n          appDispatch({\n            type: 'flashMessage',\n            value: 'You created a new question!'\n          });\n        }\n      };\n      question();\n      return;\n    }\n  }, [state.submitCount]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    // dispatch({ type: 'titleUniqueResults', value: state.title.value });\n    dispatch({ type: 'titleImmediately', value: state.title.value });\n    dispatch({ type: 'bodyImmediately', value: state.body.value });\n    dispatch({ type: 'bodyAfterDelay', value: state.body.value });\n    dispatch({ type: 'difficultyImmediately', value: state.difficulty.value });\n    dispatch({ type: 'correctAnswerImmediately', value: state.answer.value });\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: state.answerOptions.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  const handleAddAnswer = e => {\n    e.preventDefault();\n    setAnswerOptions(answerOptions.concat(input));\n    setInput('');\n    document.getElementById('answer-options').value = '';\n  };\n\n  return (\n    <Page title=\"Create New Question\">\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"question-title\" className=\"text-muted mb-1\">\n            <small>Title</small>\n          </label>\n          <input\n            onChange={e =>\n              dispatch({\n                type: 'titleImmediately',\n                value: e.target.value\n              })\n            }\n            autoFocus\n            name=\"title\"\n            id=\"question-title\"\n            className=\"form-control form-control-lg form-control-title\"\n            type=\"text\"\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n          <CSSTransition\n            in={state.title.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.title.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\n            <small>Question</small>\n          </label>\n          <textarea\n            onChange={e =>\n              dispatch({\n                type: 'bodyImmediately',\n                value: e.target.value\n              })\n            }\n            name=\"body\"\n            id=\"post-body\"\n            className=\"body-content tall-textarea form-control\"\n            type=\"text\"\n          ></textarea>\n          <CSSTransition\n            in={state.body.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.body.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Correct Answer</small>\n          </label>\n          <input\n            onChange={e =>\n              dispatch({\n                type: 'correctAnswerImmediately',\n                value: e.target.value\n              })\n            }\n            autoFocus\n            name=\"Correct Answer\"\n            id=\"correct-answer\"\n            className=\"form-control form-control-lg form-control-title\"\n            type=\"text\"\n            placeholder=\"\"\n            autoComplete=\"off\"\n          />\n          <CSSTransition\n            in={state.answer.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.answer.message}\n            </div>\n          </CSSTransition>\n        </div>\n        <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n          <small>Difficulty</small>\n        </label>\n        <DropDown selectItem={setDifficulty} />\n        <CSSTransition\n          in={state.difficulty.hasErrors}\n          timeout={330}\n          classNames=\"liveValidateMessage\"\n          unmountOnExit\n        >\n          <div className=\"alert alert-danger small liveValidateMessage\">\n            {state.difficulty.message}\n          </div>\n        </CSSTransition>\n        <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n          <small>Answer alternatives</small>\n        </label>\n        <DynamicList items={answerOptions} setItems={setAnswerOptions} />\n        <CSSTransition\n          in={state.answerOptions.hasErrors}\n          timeout={330}\n          classNames=\"liveValidateMessage\"\n          unmountOnExit\n        >\n          <div className=\"alert alert-danger small liveValidateMessage\">\n            {state.answerOptions.message}\n          </div>\n        </CSSTransition>\n        <div className=\"form-group\">\n          <label htmlFor=\"answer-options\" className=\"text-muted mb-1\">\n            <small>Add an answer option</small>\n          </label>\n          <div className=\"row\">\n            <div className=\"col mb-2\">\n              <input\n                onChange={e => setInput(e.target.value)}\n                autoFocus\n                name=\"Answer Option\"\n                id=\"answer-options\"\n                className=\"form-control form-control-lg form-control-title\"\n                type=\"text\"\n                placeholder=\"\"\n                autoComplete=\"off\"\n              />\n            </div>\n            <div className=\"col mb-2\">\n              <button\n                className=\"btn btn-success\"\n                disabled={input.length === 0}\n                onClick={handleAddAnswer}\n              >\n                +\n              </button>\n            </div>\n          </div>\n        </div>\n        <button className=\"btn btn-primary\">Create New Question</button>\n      </form>\n    </Page>\n  );\n}\n\nexport default withRouter(CreatePost);\n","import { DoesEmailExist, DoesUsernameExist, signUp } from '../utils/requests';\nimport DispatchContext from '../utils/DispatchContext';\nimport { CSSTransition } from 'react-transition-group';\nimport React, { useEffect, useContext } from 'react';\nimport { useImmerReducer } from 'use-immer';\nimport Page from './page';\n\nfunction Signup() {\n  const appDispatch = useContext(DispatchContext);\n\n  const initialState = {\n    username: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    email: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: false,\n      checkCount: 0\n    },\n    password: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    passwordConfirm: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'usernameImmediately':\n        draft.username.hasErrors = false;\n        draft.username.value = action.value;\n        if (draft.username.value.length > 30) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'Username to long';\n        }\n        if (\n          draft.username.value &&\n          !/^([a-zA-Z0-9]+)$/.test(draft.username.value)\n        ) {\n          draft.username.hasErrors = true;\n          draft.username.message =\n            'Username can only contain letters and numbers';\n        }\n        break;\n      case 'usernameAfterDelay':\n        if (draft.username.value.length < 3) {\n          draft.username.hasErrors = true;\n          draft.username.message = 'needs more than 3 chars';\n        }\n        if (!draft.hasErrors && !action.noRequest) {\n          draft.username.checkCount++;\n        }\n        break;\n      case 'usernameUniqueResults':\n        if (action.value) {\n          draft.username.hasErrors = true;\n          draft.username.isUnique = false;\n          draft.username.message = 'user exist';\n        } else {\n          draft.username.isUnique = true;\n        }\n        break;\n      case 'emailImmediately':\n        draft.email.hasErrors = false;\n        draft.email.value = action.value;\n        break;\n      case 'emailAfterDelay':\n        if (!/^\\S+@\\S+$/.test(draft.email.value)) {\n          draft.email.hasErrors = true;\n          draft.email.message = 'Invalid email';\n        }\n        if (!draft.email.hasErrors && !action.noRequest) {\n          draft.email.checkCount++;\n        }\n        break;\n      case 'emailUniqueResults':\n        if (action.value) {\n          draft.email.hasErrors = true;\n          draft.email.isUnique = false;\n          draft.email.message = 'Email is already in use';\n        } else {\n          draft.email.isUnique = true;\n        }\n        break;\n      case 'passwordImmediately':\n        draft.password.hasErrors = false;\n        draft.password.value = action.value;\n        if (draft.password.value.length > 12) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'Password to long';\n        }\n        break;\n      case 'passwordAfterDelay':\n        if (draft.password.value.length < 6) {\n          draft.password.hasErrors = true;\n          draft.password.message = 'password to short';\n        }\n        break;\n      case 'passwordConfirmImmediately':\n        draft.passwordConfirm.hasErrors = false;\n        draft.passwordConfirm.value = action.value;\n        if (draft.passwordConfirm.value.length > 12) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'Password to long';\n        }\n        break;\n      case 'passwordConfirmAfterDelay':\n        if (draft.passwordConfirm.value.length < 6) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'password to short';\n        } else if (draft.passwordConfirm.value !== draft.password.value) {\n          draft.passwordConfirm.hasErrors = true;\n          draft.passwordConfirm.message = 'passwords do not match!';\n        }\n        break;\n      case 'submitForm':\n        if (\n          !draft.username.hasErrors &&\n          draft.username.isUnique &&\n          !draft.email.hasErrors &&\n          draft.email.isUnique &&\n          !draft.password.hasErrors &&\n          !draft.passwordConfirm.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.username.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'usernameAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.username.value]);\n\n  useEffect(() => {\n    if (state.email.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'emailAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.email.value]);\n\n  useEffect(() => {\n    if (state.password.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.password.value]);\n\n  useEffect(() => {\n    if (state.passwordConfirm.value) {\n      const delay = setTimeout(\n        () => dispatch({ type: 'passwordConfirmAfterDelay' }),\n        800\n      );\n      return () => clearTimeout(delay);\n    }\n  }, [state.passwordConfirm.value]);\n\n  useEffect(() => {\n    if (state.username.checkCount) {\n      // Send requests here\n      const usernameExist = async () => {\n        const response = await DoesUsernameExist(state.username.value);\n        console.log('hello');\n        dispatch({\n          type: 'usernameUniqueResults',\n          value: response.data.message !== 'OK'\n        });\n      };\n      usernameExist();\n      return;\n    }\n  }, [state.username.checkCount]);\n\n  useEffect(() => {\n    if (state.email.checkCount) {\n      // Send requests here\n      const emailExist = async () => {\n        const response = await DoesEmailExist(state.email.value);\n        dispatch({\n          type: 'emailUniqueResults',\n          value: response.data.message !== 'OK'\n        });\n      };\n      emailExist();\n      return;\n    }\n  }, [state.email.checkCount]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const signup = async () => {\n        const response = await signUp({\n          name: state.username.value,\n          email: state.email.value,\n          password: state.password.value,\n          passwordConfirm: state.passwordConfirm.value\n        });\n\n        if (response.status === 'success') {\n          appDispatch({\n            type: 'login',\n            value: {\n              username: response.data.user.name,\n              email: response.data.user.email,\n              id: response.data.user._id\n            }\n          });\n\n          appDispatch({\n            type: 'flashMessage',\n            value: 'Welcome to your new account!'\n          });\n        }\n      };\n      signup();\n      return;\n    }\n  }, [state.submitCount]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({ type: 'usernameImmediately', value: state.username.value });\n    dispatch({\n      type: 'usernameAfterDelay',\n      value: state.username.value,\n      noRequest: true\n    });\n    dispatch({ type: 'emailImmediately', value: state.email.value });\n    dispatch({\n      type: 'emailAfterDelay',\n      value: state.email.value,\n      noRequest: true\n    });\n    dispatch({ type: 'passwordImmediately', value: state.password.value });\n    dispatch({ type: 'passwordAfterDelay', value: state.password.value });\n    dispatch({\n      type: 'passwordConfirmImmediately',\n      value: state.passwordConfirm.value\n    });\n    dispatch({\n      type: 'passwordConfirmAfterDelay',\n      value: state.passwordConfirm.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  return (\n    <Page title=\"Sign up\" wide={false}>\n      <div className=\"row align-items-center\">\n        <div className=\"col-lg-7 py-3 py-md-5\">\n          <h2>Sign up!</h2>\n          <p className=\"lead text-muted\">\n            Create a user to create questions on your own and keep track of your\n            score!\n          </p>\n        </div>\n        <div className=\"col-lg-5 pl-lg-5 pb-3 py-lg-5\">\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username-register\" className=\"text-muted mb-1\">\n                <small>Username</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'usernameImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"username-register\"\n                name=\"username\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"Pick a username\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.username.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.username.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"email-register\" className=\"text-muted mb-1\">\n                <small>Email</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({ type: 'emailImmediately', value: e.target.value })\n                }\n                id=\"email-register\"\n                name=\"email\"\n                className=\"form-control\"\n                type=\"text\"\n                placeholder=\"you@example.com\"\n                autoComplete=\"off\"\n              />\n              <CSSTransition\n                in={state.email.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.email.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label htmlFor=\"password-register\" className=\"text-muted mb-1\">\n                <small>Password</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Create a password\"\n              />\n              <CSSTransition\n                in={state.password.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.password.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"password-register-confirm\"\n                className=\"text-muted mb-1\"\n              >\n                <small>Password Confirm</small>\n              </label>\n              <input\n                onChange={e =>\n                  dispatch({\n                    type: 'passwordConfirmImmediately',\n                    value: e.target.value\n                  })\n                }\n                id=\"password-register-confirm\"\n                name=\"password\"\n                className=\"form-control\"\n                type=\"password\"\n                placeholder=\"Confirm password\"\n              />\n              <CSSTransition\n                in={state.passwordConfirm.hasErrors}\n                timeout={330}\n                classNames=\"liveValidateMessage\"\n                unmountOnExit\n              >\n                <div className=\"alert alert-danger small liveValidateMessage\">\n                  {state.passwordConfirm.message}\n                </div>\n              </CSSTransition>\n            </div>\n            <button\n              type=\"submit\"\n              className=\"py-3 mt-4 btn btn-lg btn-success btn-block\"\n            >\n              Sign up for QuizApp\n            </button>\n          </form>\n        </div>\n      </div>\n    </Page>\n  );\n}\n\nexport default Signup;\n","import React from 'react';\n\nfunction FlashMessages(props) {\n  return (\n    <div className=\"floating-alerts\">\n      {props.messages.map((msg, index) => {\n        return (\n          <div\n            key={index}\n            className=\"alert alert-success text-center floating-alert shadow-sm\"\n          >\n            {msg}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FlashMessages;\n","import React from 'react';\nimport Page from './page';\nimport { Link } from 'react-router-dom';\n\nfunction NotFound() {\n  return (\n    <Page title=\"Not Found\">\n      <div className=\"text-center\">\n        <h2>Whoops, we cannot find that page.</h2>\n        <p className=\"lead text-muted\">\n          You can always visit the <Link to=\"/\">homepage</Link> to get a fresh\n          start.\n        </p>\n      </div>\n    </Page>\n  );\n}\n\nexport default NotFound;\n","import React, { useEffect, useState, useContext } from 'react';\nimport {\n  editQuestion,\n  DoesQuestionExist,\n  getQuestion\n} from '../utils/requests';\nimport Page from '../pages/page';\nimport { CSSTransition } from 'react-transition-group';\nimport { useImmerReducer } from 'use-immer';\nimport { useParams, withRouter } from 'react-router-dom';\nimport DispatchContext from '../utils/DispatchContext';\nimport DropDown from '../components/dropdown-component/dropdown-component';\nimport DynamicList from '../components/page-components/list-component/list-component';\nimport NotFound from './notFound';\nimport LoadingDotsIcon from '../components/loadingdots-component/LoadingDotsIcon';\n\nfunction EditQuestion(props) {\n  const [difficulty, setDifficulty] = useState('easy');\n  const [answerOptions, setAnswerOptions] = useState([]);\n  const [input, setInput] = useState('');\n  const appDispatch = useContext(DispatchContext);\n  const { id } = useParams();\n\n  const initialState = {\n    initialState: {\n      title: '',\n      body: '',\n      difficulty: '',\n      answer: '',\n      answerOptions: ''\n    },\n    title: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      isUnique: true,\n      checkCount: 0\n    },\n    body: {\n      value: '',\n      hasErrors: false,\n      message: '',\n      checkCount: 0\n    },\n    difficulty: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answer: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    answerOptions: {\n      value: '',\n      hasErrors: false,\n      message: ''\n    },\n    isLoading: true,\n    questionFound: false,\n    isChanged: false,\n    submitCount: 0\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'titleImmediately':\n        draft.title.hasErrors = false;\n        draft.title.value = action.value;\n        if (draft.title.value.length > 100) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Title is to long';\n        } else if (draft.title.value.length <= 10) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question title is to short';\n        } else if (draft.title.value.length === 0) {\n          draft.title.hasErrors = true;\n          draft.title.message = 'Question must have a title';\n        }\n        break;\n      case 'titleUniqueResults':\n        if (!action.value) {\n          draft.title.hasErrors = true;\n          draft.title.isUnique = false;\n          draft.title.message = 'Question with that title already exist';\n        } else {\n          draft.title.isUnique = true;\n        }\n        break;\n      case 'bodyImmediately':\n        draft.body.hasErrors = false;\n        draft.body.value = action.value;\n        if (draft.body.value.length > 500) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to long';\n        }\n        break;\n      case 'bodyAfterDelay':\n        if (draft.body.value.length < 10) {\n          draft.body.hasErrors = true;\n          draft.body.message = 'Question is to short';\n        }\n        break;\n      case 'difficultyImmediately':\n        draft.difficulty.hasErrors = false;\n        draft.difficulty.value = action.value;\n        if (!['easy', 'medium', 'hard'].includes(draft.difficulty.value)) {\n          draft.difficulty.hasErrors = true;\n          draft.difficulty.message = 'Define difficulty';\n        }\n        break;\n      case 'correctAnswerImmediately':\n        draft.answer.hasErrors = false;\n        draft.answer.value = action.value;\n        draft.isChanged = false;\n        if (!draft.answer.value) {\n          draft.answer.hasErrors = true;\n          draft.answer.message = 'Define the correct answer';\n        }\n        break;\n      case 'answerOptionsImmediately':\n        draft.answerOptions.hasErrors = false;\n        draft.answerOptions.value = action.value;\n        if (draft.answerOptions.value.length === 0 && draft.submitCount > 0) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'Define the answer options';\n        } else if (draft.answerOptions.value.length > 3) {\n          draft.answerOptions.hasErrors = true;\n          draft.answerOptions.message = 'To many answer options';\n        }\n        break;\n      case 'initialState':\n        draft.initialState.title = action.value.title;\n        draft.initialState.body = action.value.question;\n        draft.initialState.difficulty = action.value.difficulty;\n        draft.initialState.answer = action.value.correctAnswer;\n        draft.initialState.answerOptions = action.value.answerOptions;\n        break;\n      case 'Loading':\n        draft.isLoading = action.value;\n        break;\n      case 'QuestionFound':\n        draft.questionFound = action.value;\n        break;\n      case 'QuestionChanged':\n        draft.isChanged = action.value;\n        break;\n      case 'submitForm':\n        if (\n          !draft.title.hasErrors &&\n          draft.title.isUnique &&\n          !draft.body.hasErrors &&\n          !draft.difficulty.hasErrors &&\n          !draft.answer.hasErrors &&\n          !draft.answerOptions.hasErrors\n        ) {\n          draft.submitCount++;\n        }\n        break;\n      default:\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.body.value) {\n      const delay = setTimeout(() => dispatch({ type: 'bodyAfterDelay' }), 800);\n      return () => clearTimeout(delay);\n    }\n  }, [state.body.value]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'difficultyImmediately',\n      value: difficulty\n    });\n    // dispatch({ type: 'QuestionChanged', value: true });\n  }, [difficulty]);\n\n  useEffect(() => {\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: answerOptions\n    });\n    // dispatch({ type: 'QuestionChanged', value: true });\n  }, [answerOptions]);\n\n  useEffect(() => {\n    if (\n      state.initialState.title !== '' &&\n      (state.title.value !== state.initialState.title ||\n        state.body.value !== state.initialState.body ||\n        state.difficulty.value !== state.initialState.difficulty ||\n        state.answer.value !== state.initialState.answer ||\n        JSON.stringify(state.answerOptions.value) !==\n          JSON.stringify(state.initialState.answerOptions))\n    ) {\n      dispatch({ type: 'QuestionChanged', value: true });\n    } else {\n      dispatch({ type: 'QuestionChanged', value: false });\n    }\n  }, [\n    state.title,\n    state.body,\n    state.difficulty,\n    state.answer,\n    state.answerOptions\n  ]);\n\n  useEffect(() => {\n    if (state.title.value && state.isChanged) {\n      const delay = setTimeout(() => {\n        const questionExist = async () => {\n          const response = await DoesQuestionExist(state.title.value);\n\n          let unqiue = false;\n          if (\n            response.data.message === 'OK' ||\n            state.title.value === state.initialState.title\n          )\n            unqiue = true;\n\n          dispatch({\n            type: 'titleUniqueResults',\n            value: unqiue\n          });\n        };\n        questionExist();\n      }, 1500);\n      return () => clearTimeout(delay);\n    }\n  }, [state.title.value]);\n\n  useEffect(() => {\n    if (state.submitCount) {\n      const question = async () => {\n        const response = await editQuestion({\n          id: id,\n          title: state.title.value,\n          question: state.body.value,\n          correctAnswer: state.answer.value,\n          answerOptions: state.answerOptions.value,\n          difficulty: state.difficulty.value\n        });\n        try {\n          console.log('resp:', response);\n          if (response.status === 'success') {\n            appDispatch({\n              type: 'flashMessage',\n              value: 'You have edited your question!'\n            });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n        return;\n      };\n      question();\n    }\n  }, [state.submitCount]);\n\n  useEffect(() => {\n    const question = async () => {\n      const response = await getQuestion(id);\n      try {\n        if (response.status === 'success') {\n          const title = response.data.data.title;\n          const question = response.data.data.question;\n          const correctAnswer = response.data.data.correctAnswer;\n          const difficulty = response.data.data.difficulty;\n          const answerOptions = response.data.data.answerOptions;\n          dispatch({ type: 'titleImmediately', value: title });\n          dispatch({ type: 'bodyImmediately', value: question });\n          dispatch({ type: 'correctAnswerImmediately', value: correctAnswer });\n          setDifficulty(difficulty);\n          setAnswerOptions(answerOptions);\n          dispatch({\n            type: 'initialState',\n            value: { title, question, correctAnswer, difficulty, answerOptions }\n          });\n          dispatch({ type: 'Loading', value: false });\n          dispatch({ type: 'QuestionFound', value: true });\n        }\n      } catch (error) {\n        console.log(error);\n        dispatch({ type: 'QuestionFound', value: false });\n      }\n    };\n    question();\n    return;\n  }, []);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    dispatch({ type: 'titleImmediately', value: state.title.value });\n    dispatch({ type: 'bodyImmediately', value: state.body.value });\n    dispatch({ type: 'bodyAfterDelay', value: state.body.value });\n    dispatch({ type: 'difficultyImmediately', value: state.difficulty.value });\n    dispatch({ type: 'correctAnswerImmediately', value: state.answer.value });\n    dispatch({\n      type: 'answerOptionsImmediately',\n      value: state.answerOptions.value\n    });\n    dispatch({ type: 'submitForm' });\n  }\n\n  const handleAddAnswer = e => {\n    e.preventDefault();\n    setAnswerOptions(answerOptions.concat(input));\n    setInput('');\n    document.getElementById('answer-options').value = '';\n  };\n\n  return (\n    <Page title=\"Create New Question\">\n      {state.isLoading && <LoadingDotsIcon />}\n      {state.isLoading && state.questionFound && <NotFound />}\n      {!state.isLoading && (\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"question-title\" className=\"text-muted mb-1\">\n              <small>Title</small>\n            </label>\n            <input\n              onChange={e =>\n                dispatch({\n                  type: 'titleImmediately',\n                  value: e.target.value\n                })\n              }\n              autoFocus\n              name=\"title\"\n              id=\"question-title\"\n              className=\"form-control form-control-lg form-control-title\"\n              type=\"text\"\n              placeholder=\"\"\n              autoComplete=\"off\"\n              value={state.title.value}\n            />\n            <CSSTransition\n              in={state.title.hasErrors}\n              timeout={330}\n              classNames=\"liveValidateMessage\"\n              unmountOnExit\n            >\n              <div className=\"alert alert-danger small liveValidateMessage\">\n                {state.title.message}\n              </div>\n            </CSSTransition>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\n              <small>Question</small>\n            </label>\n            <textarea\n              onChange={e =>\n                dispatch({\n                  type: 'bodyImmediately',\n                  value: e.target.value\n                })\n              }\n              name=\"body\"\n              id=\"post-body\"\n              className=\"body-content tall-textarea form-control\"\n              type=\"text\"\n              value={state.body.value}\n            ></textarea>\n            <CSSTransition\n              in={state.body.hasErrors}\n              timeout={330}\n              classNames=\"liveValidateMessage\"\n              unmountOnExit\n            >\n              <div className=\"alert alert-danger small liveValidateMessage\">\n                {state.body.message}\n              </div>\n            </CSSTransition>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n              <small>Correct Answer</small>\n            </label>\n            <input\n              onChange={e =>\n                dispatch({\n                  type: 'correctAnswerImmediately',\n                  value: e.target.value\n                })\n              }\n              autoFocus\n              name=\"Correct Answer\"\n              id=\"correct-answer\"\n              className=\"form-control form-control-lg form-control-title\"\n              type=\"text\"\n              placeholder=\"\"\n              autoComplete=\"off\"\n              value={state.answer.value}\n            />\n            <CSSTransition\n              in={state.answer.hasErrors}\n              timeout={330}\n              classNames=\"liveValidateMessage\"\n              unmountOnExit\n            >\n              <div className=\"alert alert-danger small liveValidateMessage\">\n                {state.answer.message}\n              </div>\n            </CSSTransition>\n          </div>\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Difficulty</small>\n          </label>\n          <DropDown selectItem={setDifficulty} />\n          <CSSTransition\n            in={state.difficulty.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.difficulty.message}\n            </div>\n          </CSSTransition>\n          <label htmlFor=\"correct-answer\" className=\"text-muted mb-1\">\n            <small>Answer alternatives</small>\n          </label>\n          <DynamicList items={answerOptions} setItems={setAnswerOptions} />\n          <CSSTransition\n            in={state.answerOptions.hasErrors}\n            timeout={330}\n            classNames=\"liveValidateMessage\"\n            unmountOnExit\n          >\n            <div className=\"alert alert-danger small liveValidateMessage\">\n              {state.answerOptions.message}\n            </div>\n          </CSSTransition>\n          <div className=\"form-group\">\n            <label htmlFor=\"answer-options\" className=\"text-muted mb-1\">\n              <small>Add an answer option</small>\n            </label>\n            <div className=\"row\">\n              <div className=\"col mb-2\">\n                <input\n                  onChange={e => setInput(e.target.value)}\n                  autoFocus\n                  name=\"Answer Option\"\n                  id=\"answer-options\"\n                  className=\"form-control form-control-lg form-control-title\"\n                  type=\"text\"\n                  placeholder=\"\"\n                  autoComplete=\"off\"\n                />\n              </div>\n              <div className=\"col mb-2\">\n                <button\n                  className=\"btn btn-success\"\n                  disabled={input.length === 0}\n                  onClick={handleAddAnswer}\n                >\n                  +\n                </button>\n              </div>\n            </div>\n          </div>\n          <button disabled={!state.isChanged} className=\"btn btn-primary\">\n            Edit Question\n          </button>\n        </form>\n      )}\n    </Page>\n  );\n}\n\nexport default withRouter(EditQuestion);\n","import React from 'react';\nimport Page from './page';\n\nfunction Terms() {\n  return (\n    <Page title=\"Terms and Condition\">\n      <div className=\"text-center\">\n        <h2>Terms and Condition</h2>\n        <p className=\"lead text-muted\">\n          This website was created by me,\n          <a href=\"https://tormod.dev\"> Fredrik Tormod</a>, as a hobby project\n          for developing my skills as a software/cloud developer. Feel free to\n          steal as much as you can from this site if it suits you.\n        </p>\n      </div>\n    </Page>\n  );\n}\n\nexport default Terms;\n","import React from 'react';\nimport Page from './page';\nimport { Link } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\n// import overviewSVG from './../overview.svg';\n\nfunction About() {\n  return (\n    <Page title=\"About QuizApp\">\n      <div>\n        <h2 className=\"text-center\">About QuizApp</h2>\n        <p className=\"lead text-muted\">\n          This website is a quiz application where you can create your own\n          questions and answer others. Sign up in order to create your own\n          questions and to keep track of your score. Otherwise just visit the{' '}\n          <Link to=\"/\">homepage</Link> and answer existing questions, just for\n          fun!\n        </p>\n        <h4 className=\"text-center mt-5\">Technology</h4>\n        <p className=\"lead text-muted\">\n          The website is built using a complete serverless technology stack. It\n          is a classic MERN (MongoDB, Express, React, NodeJS) SPA application\n          running on the AWS cloud. The frontend us built using basic bootstrap\n          and common npm packages. In the backend a REST API is running in an\n          AWS Lambda. This works very well since the application is stateless.\n          However, there is trade off with coldstart which you might experience\n          when using the application. Some effort was made to mitigate this and\n          provisioned concurrency has been enabled. The entire application is\n          deployed using cloudformation and IaC.\n        </p>\n        <p className=\"lead text-muted\">\n          In the image below a overview of the application infrastructure in AWS\n          is represented, as well as the workflow.\n        </p>\n        <div className=\"text-center mt-5\">\n          <img src={require('./../overview.svg')} alt=\"AWS_overview\" />\n        </div>\n      </div>\n    </Page>\n  );\n}\n\nexport default About;\n","import React, { useEffect } from 'react';\nimport Header from './components/page-components/header-component/header-component';\nimport Footer from './components/page-components/footer-component/footer-component';\nimport { useImmerReducer } from 'use-immer';\nimport Home from './pages/home';\nimport Profile from './pages/profile';\nimport Question from './pages/createQuestion';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport StateContext from './utils/StateContext';\nimport DispatchContext from './utils/DispatchContext';\nimport Signup from './pages/signup';\nimport FlashMessages from './utils/FlashMessage';\nimport NotFound from './pages/notFound';\nimport EditQuestion from './pages/editQuestion';\nimport Terms from './pages/terms';\nimport About from './pages/about';\n\nconst App = () => {\n  const initialState = {\n    loggedIn: Boolean(localStorage.getItem('quizappUsername')),\n    flashMessages: [],\n    user: {\n      token: localStorage.getItem('quizappToken'),\n      username: localStorage.getItem('quizappUsername'),\n      email: localStorage.getItem('quizappEmail'),\n      id: localStorage.getItem('quizappId'),\n      avatar: localStorage.getItem('quizappAvatar')\n    }\n  };\n\n  function ourReducer(draft, action) {\n    switch (action.type) {\n      case 'login':\n        draft.user.username = action.value.username;\n        draft.user.email = action.value.email;\n        draft.user.id = action.value.id;\n        draft.loggedIn = true;\n        break;\n      case 'logout':\n        draft.loggedIn = false;\n        break;\n      case 'flashMessage':\n        draft.flashMessages.push(action.value);\n        break;\n      default:\n        console.log('nutin');\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(ourReducer, initialState);\n\n  useEffect(() => {\n    if (state.loggedIn) {\n      localStorage.setItem('quizappUsername', state.user.username);\n      localStorage.setItem('quizappId', state.user.id);\n      localStorage.setItem('quizappEmail', state.user.email);\n    } else {\n      localStorage.removeItem('quizappUsername');\n      localStorage.removeItem('quizappId');\n      localStorage.removeItem('quizappEmail');\n    }\n  }, [state.loggedIn]);\n\n  return (\n    <StateContext.Provider value={state}>\n      <DispatchContext.Provider value={dispatch}>\n        <Router>\n          <FlashMessages messages={state.flashMessages} />\n          <Header />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/question/:id/edit\" exact>\n              <EditQuestion />\n            </Route>\n            <Route path=\"/create-question\">\n              <Question />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/sign-up\">\n              <Signup />\n            </Route>\n            <Route path=\"/about-QuizApp\">\n              <About />\n            </Route>\n            <Route path=\"/terms\">\n              <Terms />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n          <Footer />\n        </Router>\n      </DispatchContext.Provider>\n    </StateContext.Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/js/bootstrap.js'; // skip this if you do not use bootstrap modals\n// import $ from 'jquery'; // skip this if you do not use bootstrap modals\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}