---
AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  BucketName:
    Description: Bucket name
    Type: String
    Default: quiz.tormod.dev
  DomainName:
    Description: Domain name you want to redirect (without www)
    Type: String
    Default: quiz.tormod.dev
  HostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: Route53 Hosted Zone Id that your domain is served in
    Default: Z04726772MC1AAYNUZJQP

Resources:
  WebsiteBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref BucketName
      AccessControl: Private
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: description
          Value: "quiz website bucket"

  RedirectBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Join ['', [!Ref BucketName, '-redirect']] 
      AccessControl: Private
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref DomainName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: description
          Value: "redirect quiz website bucket"
  
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Id: CloudFrontDistributionAccess
        Version: '2012-10-17'
        Statement:
          - Sid: OAI
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginIdentity}'
            Action: 's3:GetObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref WebsiteBucket, '/*']]
          - Sid: PageNotFound
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOriginIdentity}'
            Action: 's3:ListBucket'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref WebsiteBucket]]
          - Sid: DeployStaticFilesAccess
            Effect: Allow
            Principal:
              AWS: arn:aws:iam::467096703885:user/deployToS3-quiz-app
            Action: 's3:PutObject'
            Resource: !Join ['', ['arn:aws:s3:::', !Ref WebsiteBucket, '/*']]

  WebsiteCloudfront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution for testing subdomain.
        Origins:
          - Id: S3Origin
            DomainName: !Join ['', [!Ref WebsiteBucket , '.s3.', !Sub '${AWS::Region}', '.amazonaws.com']]
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOriginIdentity}'
          - Id: APIOrigin
            DomainName: qbw2kd5m1l.execute-api.eu-west-1.amazonaws.com
            OriginPath: /Prod
            CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: index.html
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: true
          TargetOriginId: S3Origin
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        CacheBehaviors:
          - PathPattern: /api/*
            MaxTTL: 0
            MinTTL: 0
            DefaultTTL: 0
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: APIOrigin
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: all
            ViewerProtocolPolicy: redirect-to-https
            Compress: false
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:467096703885:certificate/0dda5204-c0ce-4bed-92e4-be316aabd1f2
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
  
  RedirectCloudfront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: Cloudfront Distribution for redirecting to domain.
        Origins:
          - Id: S3Redirect
            DomainName: !Join ['', [!Ref RedirectBucket , '.s3-website-', !Sub '${AWS::Region}', '.amazonaws.com']] 
            CustomOriginConfig:
                OriginProtocolPolicy: http-only
        Enabled: true
        HttpVersion: 'http2'
        Aliases:
          - !Join ['', ['www.', !Ref DomainName]]
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          TargetOriginId: S3Redirect
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:467096703885:certificate/0dda5204-c0ce-4bed-92e4-be316aabd1f2
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019

  CloudFrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'origin identity'

  DNSARecord:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Ref DomainName
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt WebsiteCloudfront.DomainName

  RedirectDNSARecord:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Name: !Join ['', ['www.', !Ref DomainName]]
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt RedirectCloudfront.DomainName

Outputs:
  S3WebsiteBucket:
    Description: S3 to host static files for website.
    Value: !Ref WebsiteBucket
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteBucket'
  RedirectBucket:
    Description: S3 to host static files for website.
    Value: !Ref RedirectBucket
    Export:
      Name: !Sub '${AWS::StackName}-RedirectBucket'